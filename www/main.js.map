{"version":3,"file":"main.js","sources":["../bower_components/almond/almond.js","../bower_components/es5-shim/es5-shim.js","../bower_components/modernizr/modernizr.js","../bower_components/jquery/jquery.js","../bower_components/json3/lib/json3.js","../bower_components/angular/angular.js","application/module.js","application/config.js","application/controller.js","../bower_components/text/text.js","application/template.html!text","application/directive.js","application/main.js","container/module.js","container/config.js","container/controller.js","container/template.html!text","container/directive.js","container/main.js","error/module.js","error/config.js","error/controller.js","error/template.html!text","error/directive.js","error/main.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","nodeIdCompat","jsSuffixRegExp","test","replace","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","definition","YUI","add","Empty","toInteger","Math","floor","abs","isPrimitive","input","type","toPrimitive","val","valueOf","toString","TypeError","Function","bind","that","target","this","_Array_slice_","bound","result","defineGetter","defineSetter","lookupGetter","lookupSetter","supportsAccessors","prototypeOfArray","Array","prototypeOfObject","_toString","owns","__defineGetter__","__defineSetter__","__lookupGetter__","__lookupSetter__","array_splice","makeArray","l","a","unshift","lengthBefore","array","start","deleteCount","addElementsCount","push","array_unshift","isArray","boxedString","splitString","forEach","fun","object","toObject","self","thisp","filter","every","some","reduce","reduceRight","sought","max","lastIndexOf","min","keys","hasDontEnumBug","dontEnums","dontEnumsLength","key","ii","dontEnum","negativeDate","negativeYearString","Date","toISOString","year","month","isFinite","RangeError","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","dateToJSONIsSupported","toJSON","NaN","toISO","o","tv","NativeDate","Y","M","D","h","m","s","ms","date","String","parse","constructor","dayFromMonth","t","months","isoDateExpression","RegExp","now","UTC","string","match","exec","Number","day","hour","minute","second","millisecond","offset","signOffset","hourOffset","minuteOffset","getTime","toFixed","multiply","c","size","data","base","divide","pow","x","acc","log","fractionDigits","z","k","string_split","separator","limit","substr","string_substr","ws","trim","trimBeginRegexp","trimEndRegexp","window","Modernizr","document","setCss","str","mStyle","cssText","setCssAll","str1","str2","prefixes","is","contains","testProps","props","prefixed","testDOMProps","elem","item","testPropsAll","ucProp","toUpperCase","cssomPrefixes","webforms","len","attrs","inputElem","list","createElement","HTMLDataListElement","bool","inputElemType","defaultView","setAttribute","smile","style","WebkitAppearance","docElement","appendChild","getComputedStyle","offsetHeight","removeChild","checkValidity","inputs","featureName","hasOwnProp","version","enableClasses","documentElement","mod","modElem","omPrefixes","domPrefixes","toLowerCase","ns","svg","tests","classes","injectElementWithStyles","rule","nodes","testnames","node","docOverflow","div","body","fakeBody","parseInt","innerHTML","background","overflow","parentNode","testMediaQuery","mq","matchMedia","msMatchMedia","matches","currentStyle","isEventSupported","eventName","element","TAGNAMES","isSupported","removeAttribute","select","change","submit","reset","error","abort","_hasOwnProperty","property","F","getContext","fillText","WebGLRenderingContext","DocumentTouch","offsetTop","navigator","postMessage","openDatabase","documentMode","history","pushState","backgroundColor","textShadow","opacity","str3","backgroundImage","offsetLeft","getElementById","sheet","styleSheet","cssRules","canPlayType","Boolean","ogg","h264","webm","mp3","wav","m4a","localStorage","setItem","removeItem","sessionStorage","Worker","applicationCache","createElementNS","createSVGRect","firstChild","namespaceURI","feature","addTest","className","addStyleSheet","ownerDocument","parent","getElementsByTagName","insertBefore","lastChild","getElements","elements","html5","getExpandoData","expandoData","expando","expanID","nodeName","supportsUnknownElements","cache","cloneNode","saveClones","createElem","canHaveChildren","reSkip","frag","createDocumentFragment","clone","elems","shivMethods","createFrag","shivDocument","shivCSS","supportsHtml5Styles","hasCSS","options","childNodes","_version","_prefixes","_domPrefixes","_cssomPrefixes","hasEvent","testProp","testAllProps","testStyles","isArraylike","isWindow","nodeType","createOptions","optionsCache","each","core_rnotwhite","_","flag","Data","defineProperty","get","random","dataAttr","rmultiDash","getAttribute","rbrace","JSON","data_user","set","returnTrue","returnFalse","safeActiveElement","activeElement","err","sibling","cur","dir","winnow","qualifier","not","isFunction","grep","isSimple","core_indexOf","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","setGlobalEval","refElements","data_priv","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","event","extend","getAll","context","tag","querySelectorAll","merge","fixInput","manipulation_rcheckableType","checked","defaultValue","vendorPropName","capName","origName","cssPrefixes","isHidden","el","css","getStyles","showHide","show","display","hidden","values","css_defaultDisplay","setPositiveNumber","subtract","rnumsplit","augmentWidthOrHeight","extra","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","support","boxSizing","curCSS","rnumnonpx","boxSizingReliable","parseFloat","doc","elemdisplay","actualDisplay","iframe","appendTo","contentWindow","contentDocument","write","close","detach","remove","buildParams","traditional","v","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","inspectPrefiltersOrTransports","originalOptions","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","tmp","prev","responseFields","dataFilter","state","createFxNow","fxNow","createTween","animation","tween","collection","tweeners","Animation","properties","stopped","animationPrefilters","deferred","Deferred","always","tick","currentTime","remaining","startTime","duration","temp","percent","tweens","run","notifyWith","resolveWith","promise","opts","specialEasing","originalProperties","end","Tween","easing","stop","gotoEnd","rejectWith","propFilter","fx","timer","anim","queue","progress","done","complete","fail","hooks","camelCase","cssHooks","expand","defaultPrefilter","toggle","oldfire","orig","dataShow","_queueHooks","unqueued","empty","fire","overflowX","overflowY","rfxtypes","isEmptyObject","hide","init","genFx","includeWidth","which","height","width","getWindow","rootjQuery","readyList","core_strundefined","location","docElem","_jQuery","_$","$","class2type","core_deletedIds","core_version","core_concat","core_push","core_slice","core_toString","core_hasOwn","core_trim","selector","fn","core_pnum","source","rquickExpr","rsingleTag","rmsPrefix","rdashAlpha","fcamelCase","all","letter","completed","removeEventListener","ready","jquery","find","parseHTML","isPlainObject","attr","toArray","num","pushStack","prevObject","first","eq","last","sort","copy","copyIsArray","noConflict","isReady","readyWait","holdReady","hold","wait","trigger","off","isNumeric","isNaN","msg","keepScripts","parsed","scripts","buildFragment","parseJSON","parseXML","xml","DOMParser","parseFromString","noop","globalEval","code","script","indirect","eval","text","head","arr","results","inArray","inv","retVal","arg","guid","proxy","chainable","emptyGet","raw","bulk","swap","old","readyState","addEventListener","Sizzle","seed","groups","nid","newContext","newSelector","preferredDoc","setDocument","documentIsHTML","getElementsByClassName","qsa","rbuggyQSA","tokenize","rescape","toSelector","rsibling","qsaError","rtrim","createCache","Expr","cacheLength","markFunction","assert","addHandle","handler","attrHandle","siblingCheck","b","diff","sourceIndex","MAX_NEGATIVE","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","setFilters","parseOnly","matched","tokens","soFar","preFilters","cached","tokenCache","preFilter","rcomma","rcombinators","matchExpr","addCombinator","matcher","combinator","checkNonElements","doneName","outerCache","dirkey","dirruns","cachedruns","elementMatcher","matchers","condense","unmatched","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","preMap","postMap","preexisting","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","matcherCachedRuns","bySet","byElement","superMatcher","expandContext","setMatched","matchedCount","outermost","contextBackup","dirrunsUnique","pop","uniqueSort","contexts","token","getById","runescape","funescape","compile","getText","isXML","sortInput","rbuggyMatches","classCache","compilerCache","hasDuplicate","sortOrder","strundefined","push_native","booleans","whitespace","characterEncoding","identifier","attributes","pseudos","rattributeQuotes","rpseudo","ridentifier","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","needsContext","rnative","rinputs","rheader","escaped","escapedWhitespace","high","fromCharCode","els","attachEvent","top","createComment","getElementsByName","attrId","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","specified","duplicates","detectDuplicates","sortStable","textContent","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","useCache","pseudo","idx","has","innerText","lang","elemLang","hash","root","focus","hasFocus","href","tabIndex","enabled","disabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","filters","group","div1","unique","isXMLDoc","Callbacks","memory","fired","firing","firingStart","firingLength","firingIndex","stack","once","stopOnFalse","disable","lock","locked","fireWith","tuples","then","fns","newDefer","tuple","action","returned","resolve","reject","notify","pipe","stateString","when","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","fragment","opt","checkOn","optSelected","reliableMarginRight","pixelPosition","noCloneChecked","optDisabled","radioValue","checkClone","focusinBubbles","backgroundClip","clearCloneStyle","container","marginDiv","divReset","zoom","marginRight","uid","accepts","owner","descriptor","unlock","defineProperties","stored","camel","discard","acceptData","removeData","_data","_removeData","camelKey","dequeue","startLength","next","setter","delay","time","speeds","timeout","clearTimeout","clearQueue","count","defer","nodeHook","boolHook","rclass","rreturn","rfocusable","removeAttr","removeProp","propFix","addClass","clazz","proceed","removeClass","toggleClass","stateVal","classNames","hasClass","valHooks","option","one","optionSet","nType","attrHooks","propName","attrNames","for","class","notxml","propHooks","hasAttribute","getter","rkeyEvent","rmouseEvent","rfocusMorph","rtypenamespace","global","types","handleObjIn","eventHandle","handleObj","special","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","onlyHandlers","bubbleType","ontype","eventPath","Event","isTrigger","namespace_re","noBubble","parentWindow","isPropagationStopped","preventDefault","isDefaultPrevented","_default","fix","handlerQueue","delegateTarget","preDispatch","currentTarget","isImmediatePropagationStopped","stopPropagation","postDispatch","sel","fixHooks","keyHooks","original","charCode","keyCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","blur","click","beforeunload","returnValue","simulate","bubble","isSimulated","defaultPrevented","getPreventDefault","timeStamp","stopImmediatePropagation","mouseenter","mouseleave","related","relatedTarget","attaches","on","origFn","triggerHandler","rparentsprev","rneedsContext","guaranteedUnique","children","targets","closest","pos","prevAll","addBack","parents","parentsUntil","until","nextAll","nextUntil","prevUntil","siblings","reverse","truncate","rxhtmlTag","rtagName","rhtml","rnoInnerhtml","rchecked","rscriptType","rcleanScript","wrapMap","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","append","createTextNode","domManip","prepend","before","after","keepData","cleanData","dataAndEvents","deepDataAndEvents","html","replaceWith","allowIntersection","hasScripts","iNoClone","_evalUrl","prependTo","insertAfter","replaceAll","insert","srcElements","destElements","inPage","selection","wrap","url","ajax","async","throws","wrapAll","firstElementChild","wrapInner","unwrap","rdisplayswap","rmargin","rrelNum","BODY","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","computed","cssNumber","columnCount","fillOpacity","lineHeight","order","orphans","widows","zIndex","cssProps","float","_computed","minWidth","maxWidth","getPropertyValue","visible","margin","padding","border","suffix","expanded","r20","rCRLF","rsubmitterTypes","rsubmittable","serialize","param","serializeArray","encodeURIComponent","hover","fnOver","fnOut","unbind","delegate","undelegate","ajaxLocParts","ajaxLocation","ajax_nonce","ajax_rquery","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","rurl","_load","prefilters","allTypes","params","responseText","status","active","lastModified","etag","isLocal","processData","contentType","*","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","finalText","method","crossDomain","hasContent","beforeSend","send","getJSON","getScript","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","xhr","XMLHttpRequest","xhrSupported","xhrSuccessStatus",1223,"xhrId","xhrCallbacks","ActiveXObject","cors","open","username","xhrFields","onload","onerror","timerId","rfxnum","rrun","unit","scale","maxIterations","tweener","prefilter","eased","step","cssFn","speed","animate","fadeTo","to","optall","doAnimation","finish","stopQueue","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","linear","swing","cos","PI","interval","setInterval","clearInterval","slow","fast","animated","setOffset","win","box","left","getBoundingClientRect","pageYOffset","pageXOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","offsetParent","parentOffset","scrollTo","Height","Width","defaultExtra","funcName","andSelf","serialized","stringify","JSON3","stringifySupported","isExtended","getClass","exception","parseSupported","isProperty","isLoader","nativeJSON","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","members","__proto__","PrimitiveTypes","boolean","number","isHostType","Properties","isConstructor","hasProperty","Escapes",92,34,8,12,10,13,9,"leadingZeroes","toPaddedString","unicodePrefix","quote","symbols","isLarge","charCodeAt","indentation","hours","minutes","seconds","milliseconds","Index","Source","Unescapes",47,98,116,110,102,114,"SyntaxError","lex","begin","isSigned","hasMembers","update","walk","isArrayLike","JQLite","callee","iterator","sortedKeys","forEachSorted","reverseParams","iteratorFn","nextUid","digit","setHashKey","$$hashKey","dst","int","inherit","identity","valueFn","isUndefined","isDefined","isObject","isString","isNumber","isDate","isRegExp","alert","isScope","$evalAsync","$watch","isFile","isElement","includes","arrayRemove","destination","shallowCopy","equals","o1","o2","keySet","t1","t2","array1","array2","sliceArgs","startIndex","curryArgs","toJsonReplacer","toJson","pretty","fromJson","toBoolean","lowercase","startingTag","jqLite","TEXT_NODE","elemHtml","tryDecodeURIComponent","decodeURIComponent","parseKeyValue","keyValue","key_value","toKeyValue","encodeUriQuery","encodeUriSegment","pctEncodeSpaces","angularInit","bootstrap","appElement","names","NG_APP_CLASS_REGEXP","modules","doBootstrap","$provide","injector","createInjector","invoke","scope","$apply","NG_DEFER_BOOTSTRAP","angular","resumeBootstrap","extraModules","snake_case","SNAKE_CASE_REGEXP","bindJQuery","JQLitePrototype","controller","inheritedData","JQLitePatchJQueryRemove","assertArg","reason","assertArgFn","acceptArrayAnnotation","path","bindFnToScope","lastInstance","setupModuleLoader","ensure","factory","requires","configFn","invokeLater","provider","insertMethod","invokeQueue","moduleInstance","runBlocks","_invokeQueue","_runBlocks","service","constant","directive","block","publishExternalAPI","uppercase","callbacks","counter","angularModule","$LocaleProvider","$CompileProvider","htmlAnchorDirective","inputDirective","textarea","form","formDirective","scriptDirective","selectDirective","styleDirective","optionDirective","ngBind","ngBindDirective","ngBindHtmlUnsafe","ngBindHtmlUnsafeDirective","ngBindTemplate","ngBindTemplateDirective","ngClass","ngClassDirective","ngClassEven","ngClassEvenDirective","ngClassOdd","ngClassOddDirective","ngCsp","ngCspDirective","ngCloak","ngCloakDirective","ngController","ngControllerDirective","ngForm","ngFormDirective","ngHide","ngHideDirective","ngInclude","ngIncludeDirective","ngInit","ngInitDirective","ngNonBindable","ngNonBindableDirective","ngPluralize","ngPluralizeDirective","ngRepeat","ngRepeatDirective","ngShow","ngShowDirective","ngStyle","ngStyleDirective","ngSwitch","ngSwitchDirective","ngSwitchWhen","ngSwitchWhenDirective","ngSwitchDefault","ngSwitchDefaultDirective","ngOptions","ngOptionsDirective","ngView","ngViewDirective","ngTransclude","ngTranscludeDirective","ngModel","ngModelDirective","ngList","ngListDirective","ngChange","ngChangeDirective","required","requiredDirective","ngRequired","ngValue","ngValueDirective","ngAttributeAliasDirectives","ngEventDirectives","$anchorScroll","$AnchorScrollProvider","$browser","$BrowserProvider","$cacheFactory","$CacheFactoryProvider","$controller","$ControllerProvider","$document","$DocumentProvider","$exceptionHandler","$ExceptionHandlerProvider","$filter","$FilterProvider","$interpolate","$InterpolateProvider","$http","$HttpProvider","$httpBackend","$HttpBackendProvider","$location","$LocationProvider","$log","$LogProvider","$parse","$ParseProvider","$route","$RouteProvider","$routeParams","$RouteParamsProvider","$rootScope","$RootScopeProvider","$q","$QProvider","$sniffer","$SnifferProvider","$templateCache","$TemplateCacheProvider","$timeout","$TimeoutProvider","$window","$WindowProvider","jqNextId","jqId","SPECIAL_CHARS_REGEXP","MOZ_HACK_REGEXP","dispatchThis","filterElems","getterIfNoArguments","removePatch","setIndex","setLength","childIndex","childLength","fireEvent","originalJqFn","$original","JQLiteAddNodes","JQLiteClone","JQLiteDealoc","JQLiteRemoveData","JQLiteUnbind","JQLiteExpandoStore","eventHandler","removeEventListenerFn","expandoId","jqName","expandoStore","jqCache","$destroy","JQLiteData","isSetter","keyDefined","isSimpleGetter","JQLiteHasClass","JQLiteRemoveClass","cssClasses","cssClass","JQLiteAddClass","JQLiteController","JQLiteInheritedData","getBooleanAttrName","booleanAttr","BOOLEAN_ATTR","BOOLEAN_ELEMENTS","createEventHandler","cancelBubble","srcElement","prevent","msie","hashKey","objType","HashMap","put","HashQueueMap","annotate","$inject","fnText","argDecl","STRIP_COMMENTS","FN_ARGS","FN_ARG_SPLIT","FN_ARG","underscore","modulesToLoad","supportObject","provider_","providerInjector","instantiate","$get","providerCache","providerSuffix","factoryFn","$injector","instanceCache","decorator","serviceName","decorFn","origProvider","orig$get","origInstance","instanceInjector","$delegate","loadModules","loadedModules","moduleFn","invokeArgs","message","createInternalInjector","getService","INSTANTIATING","locals","Type","instance","returnedValue","Constructor","servicename","autoScrollingEnabled","disableAutoScrolling","getFirstAnchor","scroll","elm","scrollIntoView","Browser","completeOutstandingRequest","outstandingRequestCount","outstandingRequestCallbacks","startPoller","pollFns","pollFn","pollTimeout","fireUrlChange","lastBrowserUrl","urlChangeListeners","listener","rawDocument","pendingDeferIds","isMock","$$completeOutstandingRequest","$$incOutstandingRequestCount","notifyWhenNoOutstandingRequests","addPollFn","baseElement","replacedUrl","replaceState","urlChangeInit","onUrlChange","hashchange","baseHref","lastCookies","lastCookieString","cookiePath","cookies","cookieLength","cookieArray","cookie","unescape","escape","warn","timeoutId","cancel","deferId","cacheFactory","cacheId","refresh","entry","freshEnd","staleEnd","link","nextEntry","prevEntry","caches","stats","capacity","MAX_VALUE","lruHash","lruEntry","removeAll","destroy","info","hasDirectives","Suffix","COMMENT_DIRECTIVE_REGEXP","CLASS_DIRECTIVE_REGEXP","MULTI_ROOT_TEMPLATE_ERROR","urlSanitizationWhitelist","registerDirective","directiveFactory","directives","priority","restrict","regexp","$compileNodes","transcludeFn","maxPriority","compositeLinkFn","compileNodes","cloneConnectFn","$linkNode","safeAddClass","$element","nodeList","$rootElement","boundTranscludeFn","nodeLinkFn","childLinkFn","childScope","childTranscludeFn","stableNodeList","linkFns","$new","transclude","cloneFn","transcludeScope","$$transcluded","linkFnFound","Attributes","collectDirectives","applyDirectivesToNode","terminal","attrsMap","$attr","addDirective","directiveNormalize","nodeName_","nName","nAttrs","jj","addAttrInterpolateDirective","addTextInterpolateDirective","byPriority","compileNode","templateAttrs","jqCollection","addLinkFns","pre","post","preLinkFns","postLinkFns","getControllers","retrievalMethod","optional","linkNode","linkFn","$$element","newIsolateScopeDirective","LOCAL_REGEXP","parentScope","$parent","definiton","scopeName","lastValue","parentGet","parentSet","attrName","mode","$$isolateBindings","$observe","$$observers","$$scope","assign","NON_ASSIGNABLE_MODEL_EXPRESSION","parentValue","controllerDirectives","$scope","$attrs","$transclude","directiveName","$template","transcludeDirective","directiveValue","terminalPriority","newScopeDirective","templateDirective","$compileNode","assertNoDuplicate","template","denormalizeTemplate","newTemplateAttrs","mergeTemplateAttributes","templateUrl","compileTemplateUrl","tDirectives","srcAttr","dstAttr","$set","beforeTemplateNodeLinkFn","tAttrs","afterTemplateNodeLinkFn","afterTemplateChildLinkFn","linkQueue","beforeTemplateCompileNode","origAsyncDirective","derivedSyncDirective","tempTemplateAttrs","linkRootElement","beforeTemplateLinkNode","ignoreChildLinkFn","rootElement","previousDirective","interpolateFn","bindings","$$inter","newNode","oldNode","replaceChild","$normalize","writeAttr","normalizedVal","booleanKey","urlSanitizationNode","listeners","startSymbol","endSymbol","PREFIX_REGEXP","controllers","register","mustHaveExpression","endIndex","exp","hasInterpolation","startSymbolLength","endSymbolLength","encodePath","segments","matchUrl","URL_MATCH","protocol","host","port","DEFAULT_PORTS","search","$$protocol","$$host","$$port","composeProtocolHostPort","pathPrefixFromBase","basePath","convertToHtml5Url","hashPrefix","convertToHashbangUrl","pathPrefix","LocationUrl","appBaseUrl","$$parse","newAbsoluteUrl","$$path","$$search","$$hash","$$compose","$$url","$$absUrl","$$rewriteAppUrl","absoluteLinkUrl","LocationHashbangUrl","HASH_MATCH","LocationHashbangInHtml5Url","baseExtra","locationGetter","locationGetterSetter","preprocess","html5Mode","afterLocationChange","oldUrl","$broadcast","absUrl","initUrl","initUrlParts","ctrlKey","metaKey","absHref","rewrittenUrl","newUrl","$$phase","$digest","changeCounter","currentReplace","$$replace","formatError","sourceURL","line","consoleLog","console","logFn","arg1","arg2","csp","chars","ch","was","lastCh","peek","isWhitespace","isIdent","isExpOperator","throwError","readNumber","peekCh","readIdent","lastDot","peekIndex","methodName","ident","OPERATORS","getterFn","readString","rawString","hex","rep","ESCAPE","ch2","fn2","parser","peekToken","e1","e2","e3","e4","expect","consume","unaryFn","right","binaryFn","statements","filterChain","statement","_filterChain","expression","argsFn","fnInvoke","assignment","_assignment","logicalOR","logicalAND","equality","relational","additive","multiplicative","unary","primary","ZERO","arrayDeclaration","functionCall","objectIndex","fieldAccess","_fieldAccess","field","_objectIndex","indexFn","$$v","_functionCall","contextGetter","fnPtr","elementFns","keyValues","setValue","propertyObj","cspSafeGetterFn","key0","key1","key2","key3","key4","pathVal","getterFnCache","pathKeys","pathKeysLength","qFactory","nextTick","exceptionHandler","defaultCallback","defaultErrback","promises","ref","pending","errback","wrappedCallback","wrappedErrback","routes","route","reloadOnSearch","redirectPath","redirectTo","otherwise","switchRouteMatcher","paramMatch","regex","re","lastMatchedIndex","updateRoute","parseRoute","$$route","pathParams","forceReload","interpolate","segment","segmentMatch","reload","$on","TTL","digestTtl","Scope","$id","$$watchers","$$nextSibling","$$prevSibling","$$childHead","$$childTail","$root","$$destroyed","$$asyncQueue","$$listeners","beginPhase","phase","clearPhase","compileToFn","initWatchVal","isolate","Child","child","watchExp","objectEquality","watcher","listenFn","newVal","oldVal","watch","watchers","asyncQueue","dirty","logIdx","logMsg","ttl","watchLog","$eval","namedListeners","$emit","targetScope","listenerArgs","currentScope","eventSupport","android","userAgent","divElm","parseHeaders","headersGetter","headersObj","transformData","JSON_START","JSON_END","PROTECTION_PREFIX","$config","defaults","transformResponse","transformRequest","d","common","Accept","X-Requested-With","Content-Type","providerResponseInterceptors","responseInterceptors","resp","respTransformFn","reqData","defHeaderName","lowercaseDefHeaderName","headerName","reqTransformFn","reqHeaders","defHeaders","X-XSRF-TOKEN","defaultHeadersIteration","sendReq","interceptor","createShortMethods","createShortMethodsWithData","headersString","resolvePromise","removePendingReq","pendingRequests","cachedResp","buildUrl","defaultCache","withCredentials","createHttpBackend","XHR","$browserDefer","locationProtocol","jsonpReq","doneWrapper","onreadystatechange","completeRequest","callbackId","simpleHeaders","NUMBER_FORMATS","DECIMAL_SEP","GROUP_SEP","PATTERNS","minInt","minFrac","maxFrac","posPre","posSuf","negPre","negSuf","gSize","lgSize","CURRENCY_SYM","DATETIME_FORMATS","MONTH","SHORTMONTH","DAY","SHORTDAY","AMPMS","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","shortTime","pluralCat","invokeApply","skipApply","deferreds","$$timeoutId","currencyFilter","dateFilter","filterFilter","jsonFilter","limitToFilter","lowercaseFilter","numberFilter","orderByFilter","uppercaseFilter","predicates","objKey","filtered","$locale","formats","amount","currencySymbol","formatNumber","fractionSize","groupSep","decimalSep","isNegative","numStr","formatedText","hasExponent","fractionLen","round","fraction","whole","lgroup","padNumber","digits","neg","dateGetter","dateStrGetter","shortForm","timeZoneGetter","zone","getTimezoneOffset","paddedZone","ampmGetter","getHours","jsonStringToDate","R_ISO8601_STR","tzHour","tzMin","setUTCFullYear","setUTCHours","format","NUMBER_STRING","DATE_FORMATS_SPLIT","DATE_FORMATS","out","sortPredicate","reverseOrder","comparator","comp","reverseComparator","descending","v1","v2","predicate","arrayCopy","ngDirective","FormController","toggleValidCss","isValid","validationErrorKey","INVALID_CLASS","VALID_CLASS","parentForm","nullFormCtrl","invalidCount","errors","$error","$name","$dirty","$pristine","$valid","$invalid","$addControl","PRISTINE_CLASS","control","$removeControl","validationToken","$setValidity","$setDirty","DIRTY_CLASS","isEmpty","textInputType","ctrl","$viewValue","$setViewValue","deferListener","$render","patternValidator","ngPattern","validate","patternObj","$formatters","$parsers","ngMinlength","minlength","minLengthValidator","ngMaxlength","maxlength","maxLengthValidator","numberInputType","NUMBER_REGEXP","minValidator","maxValidator","urlInputType","urlValidator","URL_REGEXP","emailInputType","emailValidator","EMAIL_REGEXP","radioInputType","checkboxInputType","trueValue","ngTrueValue","falseValue","ngFalseValue","classDirective","ngClassWatchAction","$index","classVal","old$index","manualLowercase","manualUppercase","full","major","minor","dot","codeName","addEventListenerFn","detachEvent","lowercasedName","getNamedItem","$dv","multiple","dealoc","bindFn","eventFns","eventmap","replaceNode","wrapNode","newElement","condition","nextElementSibling","PATH_MATCH","http","https","ftp","paramValue","null","true","false","-","/","%","^","=","==","!=","<","<=",">=","&&","||","&","|","!","r","'","\"","yyyy","yy","y","MMMM","MMM","MM","dd","HH","H","hh","mm","ss","EEEE","EEE","Z","normalized","formDirectiveFactory","isNgForm","formElement","preventDefaultListener","parentFormCtrl","alias","inputType","email","NgModelController","$modelValue","$viewChangeListeners","ngModelGet","ngModelSet","formatters","ctrls","modelCtrl","formCtrl","validator","viewValue","CONSTANT_VALUE_REGEXP","tpl","tplAttr","$event","$compile","srcExp","onloadExp","autoScrollExp","autoscroll","clearContent","thisChangeId","BRACE","numberExp","whenExp","whens","whensExpFns","linker","iterStartElement","lhs","rhs","valueIdent","keyIdent","lastOrder","arrayBound","cursor","nextOrder","$first","$last","$middle","newStyles","oldStyles","cases","selectedTransclude","selectedElement","selectedScope","watchExpr","caseElement","destroyLastScope","lastScope","NG_OPTIONS_REGEXP","nullModelCtrl","nullOption","unknownOption","optionsMap","ngModelCtrl","databound","ngModelCtrl_","nullOption_","unknownOption_","addOption","removeOption","hasOption","renderUnknownOption","unknownVal","Single","selectElement","selectCtrl","emptyOption","Multiple","lastView","items","Options","render","optionGroupName","optionGroup","existingParent","existingOptions","existingOption","groupLength","groupIndex","lastElement","label","optionGroups","optionGroupNames","modelValue","valuesFn","keyName","selectedSet","valueName","groupByFn","displayFn","optionGroupsCache","optGroupTemplate","optionTemplate","optionsExp","optionElement","requiredValidator","nullSelectCtrl","selectCtrlName","$locationProvider","$routeProvider","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","defaultProtocol","defaultHostName","hostname","defaultPort","buildMap","masterConfig","strip","jsEscape","createXhr","progId","parseName","modName","ext","isRelative","moduleName","xdRegExp","useXhr","uProtocol","uHostName","uPort","finishLoad","onLoad","isBuild","inlineText","nonStripName","toUrl","pluginName","asModule","writeFile","extPart","fileName","textWrite","env","process","versions","nodeRequire","readFileSync","onXhr","onXhrComplete","Packages","java","stringBuffer","encoding","io","File","lineSeparator","System","getProperty","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","Components","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","previous","rejection"],"mappings":"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","sourcesContent":["/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"almond\", function(){});\n\n","// Copyright 2009-2012 by contributors, MIT License\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Module systems magic dance\n(function (definition) {\n    // RequireJS\n    if (typeof define == \"function\") {\n        define('es5',definition);\n    // YUI3\n    } else if (typeof YUI == \"function\") {\n        YUI.add(\"es5\", definition);\n    // CommonJS and <script>\n    } else {\n        definition();\n    }\n})(function () {\n\n/**\n * Brings an environment as close to ECMAScript 5 compliance\n * as is possible with the facilities of erstwhile engines.\n *\n * Annotated ES5: http://es5.github.com/ (specific links below)\n * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\n * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/\n */\n\n//\n// Function\n// ========\n//\n\n// ES-5 15.3.4.5\n// http://es5.github.com/#x15.3.4.5\n\nfunction Empty() {}\n\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function bind(that) { // .length is 1\n        // 1. Let Target be the this value.\n        var target = this;\n        // 2. If IsCallable(Target) is false, throw a TypeError exception.\n        if (typeof target != \"function\") {\n            throw new TypeError(\"Function.prototype.bind called on incompatible \" + target);\n        }\n        // 3. Let A be a new (possibly empty) internal list of all of the\n        //   argument values provided after thisArg (arg1, arg2 etc), in order.\n        // XXX slicedArgs will stand in for \"A\" if used\n        var args = _Array_slice_.call(arguments, 1); // for normal call\n        // 4. Let F be a new native ECMAScript object.\n        // 11. Set the [[Prototype]] internal property of F to the standard\n        //   built-in Function prototype object as specified in 15.3.3.1.\n        // 12. Set the [[Call]] internal property of F as described in\n        //   15.3.4.5.1.\n        // 13. Set the [[Construct]] internal property of F as described in\n        //   15.3.4.5.2.\n        // 14. Set the [[HasInstance]] internal property of F as described in\n        //   15.3.4.5.3.\n        var bound = function () {\n\n            if (this instanceof bound) {\n                // 15.3.4.5.2 [[Construct]]\n                // When the [[Construct]] internal method of a function object,\n                // F that was created using the bind function is called with a\n                // list of arguments ExtraArgs, the following steps are taken:\n                // 1. Let target be the value of F's [[TargetFunction]]\n                //   internal property.\n                // 2. If target has no [[Construct]] internal method, a\n                //   TypeError exception is thrown.\n                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Construct]] internal\n                //   method of target providing args as the arguments.\n\n                var result = target.apply(\n                    this,\n                    args.concat(_Array_slice_.call(arguments))\n                );\n                if (Object(result) === result) {\n                    return result;\n                }\n                return this;\n\n            } else {\n                // 15.3.4.5.1 [[Call]]\n                // When the [[Call]] internal method of a function object, F,\n                // which was created using the bind function is called with a\n                // this value and a list of arguments ExtraArgs, the following\n                // steps are taken:\n                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                //   property.\n                // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                //   property.\n                // 3. Let target be the value of F's [[TargetFunction]] internal\n                //   property.\n                // 4. Let args be a new list containing the same values as the\n                //   list boundArgs in the same order followed by the same\n                //   values as the list ExtraArgs in the same order.\n                // 5. Return the result of calling the [[Call]] internal method\n                //   of target providing boundThis as the this value and\n                //   providing args as the arguments.\n\n                // equiv: target.call(this, ...boundArgs, ...args)\n                return target.apply(\n                    that,\n                    args.concat(_Array_slice_.call(arguments))\n                );\n\n            }\n\n        };\n        if(target.prototype) {\n            Empty.prototype = target.prototype;\n            bound.prototype = new Empty();\n            // Clean up dangling references.\n            Empty.prototype = null;\n        }\n        // XXX bound.length is never writable, so don't even try\n        //\n        // 15. If the [[Class]] internal property of Target is \"Function\", then\n        //     a. Let L be the length property of Target minus the length of A.\n        //     b. Set the length own property of F to either 0 or L, whichever is\n        //       larger.\n        // 16. Else set the length own property of F to 0.\n        // 17. Set the attributes of the length own property of F to the values\n        //   specified in 15.3.5.1.\n\n        // TODO\n        // 18. Set the [[Extensible]] internal property of F to true.\n\n        // TODO\n        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n        // 20. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n        //   false.\n        // 21. Call the [[DefineOwnProperty]] internal method of F with\n        //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n        //   and false.\n\n        // TODO\n        // NOTE Function objects created using Function.prototype.bind do not\n        // have a prototype property or the [[Code]], [[FormalParameters]], and\n        // [[Scope]] internal properties.\n        // XXX can't delete prototype in pure-js.\n\n        // 22. Return F.\n        return bound;\n    };\n}\n\n// Shortcut to an often accessed properties, in order to avoid multiple\n// dereference that costs universally.\n// _Please note: Shortcuts are defined after `Function.prototype.bind` as we\n// us it in defining shortcuts.\nvar call = Function.prototype.call;\nvar prototypeOfArray = Array.prototype;\nvar prototypeOfObject = Object.prototype;\nvar _Array_slice_ = prototypeOfArray.slice;\n// Having a toString local variable name breaks in Opera so use _toString.\nvar _toString = call.bind(prototypeOfObject.toString);\nvar owns = call.bind(prototypeOfObject.hasOwnProperty);\n\n// If JS engine supports accessors creating shortcuts.\nvar defineGetter;\nvar defineSetter;\nvar lookupGetter;\nvar lookupSetter;\nvar supportsAccessors;\nif ((supportsAccessors = owns(prototypeOfObject, \"__defineGetter__\"))) {\n    defineGetter = call.bind(prototypeOfObject.__defineGetter__);\n    defineSetter = call.bind(prototypeOfObject.__defineSetter__);\n    lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\n    lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\n}\n\n//\n// Array\n// =====\n//\n\n// ES5 15.4.4.12\n// http://es5.github.com/#x15.4.4.12\n// Default value for second param\n// [bugfix, ielt9, old browsers]\n// IE < 9 bug: [1,2].splice(0).join(\"\") == \"\" but should be \"12\"\nif ([1,2].splice(0).length != 2) {\n    var array_splice = Array.prototype.splice;\n\n    if(function() { // test IE < 9 to splice bug - see issue #138\n        function makeArray(l) {\n            var a = [];\n            while (l--) {\n                a.unshift(l)\n            }\n            return a\n        }\n\n        var array = []\n            , lengthBefore\n        ;\n\n        array.splice.bind(array, 0, 0).apply(null, makeArray(20));\n        array.splice.bind(array, 0, 0).apply(null, makeArray(26));\n\n        lengthBefore = array.length; //20\n        array.splice(5, 0, \"XXX\"); // add one element\n\n        if(lengthBefore + 1 == array.length) {\n            return true;// has right splice implementation without bugs\n        }\n        // else {\n        //    IE8 bug\n        // }\n    }()) {//IE 6/7\n        Array.prototype.splice = function(start, deleteCount) {\n            if (!arguments.length) {\n                return [];\n            } else {\n                return array_splice.apply(this, [\n                    start === void 0 ? 0 : start,\n                    deleteCount === void 0 ? (this.length - start) : deleteCount\n                ].concat(_Array_slice_.call(arguments, 2)))\n            }\n        };\n    }\n    else {//IE8\n        Array.prototype.splice = function(start, deleteCount) {\n            var result\n                , args = _Array_slice_.call(arguments, 2)\n                , addElementsCount = args.length\n            ;\n\n            if(!arguments.length) {\n                return [];\n            }\n\n            if(start === void 0) { // default\n                start = 0;\n            }\n            if(deleteCount === void 0) { // default\n                deleteCount = this.length - start;\n            }\n\n            if(addElementsCount > 0) {\n                if(deleteCount <= 0) {\n                    if(start == this.length) { // tiny optimisation #1\n                        this.push.apply(this, args);\n                        return [];\n                    }\n\n                    if(start == 0) { // tiny optimisation #2\n                        this.unshift.apply(this, args);\n                        return [];\n                    }\n                }\n\n                // Array.prototype.splice implementation\n                result = _Array_slice_.call(this, start, start + deleteCount);// delete part\n                args.push.apply(args, _Array_slice_.call(this, start + deleteCount, this.length));// right part\n                args.unshift.apply(args, _Array_slice_.call(this, 0, start));// left part\n\n                // delete all items from this array and replace it to 'left part' + _Array_slice_.call(arguments, 2) + 'right part'\n                args.unshift(0, this.length);\n\n                array_splice.apply(this, args);\n\n                return result;\n            }\n\n            return array_splice.call(this, start, deleteCount);\n        }\n\n    }\n}\n\n// ES5 15.4.4.12\n// http://es5.github.com/#x15.4.4.13\n// Return len+argCount.\n// [bugfix, ielt8]\n// IE < 8 bug: [].unshift(0) == undefined but should be \"1\"\nif ([].unshift(0) != 1) {\n    var array_unshift = Array.prototype.unshift;\n    Array.prototype.unshift = function() {\n        array_unshift.apply(this, arguments);\n        return this.length;\n    };\n}\n\n// ES5 15.4.3.2\n// http://es5.github.com/#x15.4.3.2\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\nif (!Array.isArray) {\n    Array.isArray = function isArray(obj) {\n        return _toString(obj) == \"[object Array]\";\n    };\n}\n\n// The IsCallable() check in the Array functions\n// has been replaced with a strict check on the\n// internal class of the object to trap cases where\n// the provided function was actually a regular\n// expression literal, which in V8 and\n// JavaScriptCore is a typeof \"function\".  Only in\n// V8 are regular expression literals permitted as\n// reduce parameters, so it is desirable in the\n// general case for the shim to match the more\n// strict and common behavior of rejecting regular\n// expressions.\n\n// ES5 15.4.4.18\n// http://es5.github.com/#x15.4.4.18\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach\n\n// Check failure of by-index access of string characters (IE < 9)\n// and failure of `0 in boxedString` (Rhino)\nvar boxedString = Object(\"a\"),\n    splitString = boxedString[0] != \"a\" || !(0 in boxedString);\n\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function forEach(fun /*, thisp*/) {\n        var object = toObject(this),\n            self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                object,\n            thisp = arguments[1],\n            i = -1,\n            length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (_toString(fun) != \"[object Function]\") {\n            throw new TypeError(); // TODO message\n        }\n\n        while (++i < length) {\n            if (i in self) {\n                // Invoke the callback function with call, passing arguments:\n                // context, property value, property key, thisArg object\n                // context\n                fun.call(thisp, self[i], i, object);\n            }\n        }\n    };\n}\n\n// ES5 15.4.4.19\n// http://es5.github.com/#x15.4.4.19\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\nif (!Array.prototype.map) {\n    Array.prototype.map = function map(fun /*, thisp*/) {\n        var object = toObject(this),\n            self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                object,\n            length = self.length >>> 0,\n            result = Array(length),\n            thisp = arguments[1];\n\n        // If no callback function or if callback is not a callable function\n        if (_toString(fun) != \"[object Function]\") {\n            throw new TypeError(fun + \" is not a function\");\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self)\n                result[i] = fun.call(thisp, self[i], i, object);\n        }\n        return result;\n    };\n}\n\n// ES5 15.4.4.20\n// http://es5.github.com/#x15.4.4.20\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\nif (!Array.prototype.filter) {\n    Array.prototype.filter = function filter(fun /*, thisp */) {\n        var object = toObject(this),\n            self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                    object,\n            length = self.length >>> 0,\n            result = [],\n            value,\n            thisp = arguments[1];\n\n        // If no callback function or if callback is not a callable function\n        if (_toString(fun) != \"[object Function]\") {\n            throw new TypeError(fun + \" is not a function\");\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self) {\n                value = self[i];\n                if (fun.call(thisp, value, i, object)) {\n                    result.push(value);\n                }\n            }\n        }\n        return result;\n    };\n}\n\n// ES5 15.4.4.16\n// http://es5.github.com/#x15.4.4.16\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\nif (!Array.prototype.every) {\n    Array.prototype.every = function every(fun /*, thisp */) {\n        var object = toObject(this),\n            self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                object,\n            length = self.length >>> 0,\n            thisp = arguments[1];\n\n        // If no callback function or if callback is not a callable function\n        if (_toString(fun) != \"[object Function]\") {\n            throw new TypeError(fun + \" is not a function\");\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self && !fun.call(thisp, self[i], i, object)) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\n\n// ES5 15.4.4.17\n// http://es5.github.com/#x15.4.4.17\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some\nif (!Array.prototype.some) {\n    Array.prototype.some = function some(fun /*, thisp */) {\n        var object = toObject(this),\n            self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                object,\n            length = self.length >>> 0,\n            thisp = arguments[1];\n\n        // If no callback function or if callback is not a callable function\n        if (_toString(fun) != \"[object Function]\") {\n            throw new TypeError(fun + \" is not a function\");\n        }\n\n        for (var i = 0; i < length; i++) {\n            if (i in self && fun.call(thisp, self[i], i, object)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\n// ES5 15.4.4.21\n// http://es5.github.com/#x15.4.4.21\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce\nif (!Array.prototype.reduce) {\n    Array.prototype.reduce = function reduce(fun /*, initial*/) {\n        var object = toObject(this),\n            self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                object,\n            length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (_toString(fun) != \"[object Function]\") {\n            throw new TypeError(fun + \" is not a function\");\n        }\n\n        // no value to return if no initial value and an empty array\n        if (!length && arguments.length == 1) {\n            throw new TypeError(\"reduce of empty array with no initial value\");\n        }\n\n        var i = 0;\n        var result;\n        if (arguments.length >= 2) {\n            result = arguments[1];\n        } else {\n            do {\n                if (i in self) {\n                    result = self[i++];\n                    break;\n                }\n\n                // if array contains no values, no initial value to return\n                if (++i >= length) {\n                    throw new TypeError(\"reduce of empty array with no initial value\");\n                }\n            } while (true);\n        }\n\n        for (; i < length; i++) {\n            if (i in self) {\n                result = fun.call(void 0, result, self[i], i, object);\n            }\n        }\n\n        return result;\n    };\n}\n\n// ES5 15.4.4.22\n// http://es5.github.com/#x15.4.4.22\n// https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight\nif (!Array.prototype.reduceRight) {\n    Array.prototype.reduceRight = function reduceRight(fun /*, initial*/) {\n        var object = toObject(this),\n            self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                object,\n            length = self.length >>> 0;\n\n        // If no callback function or if callback is not a callable function\n        if (_toString(fun) != \"[object Function]\") {\n            throw new TypeError(fun + \" is not a function\");\n        }\n\n        // no value to return if no initial value, empty array\n        if (!length && arguments.length == 1) {\n            throw new TypeError(\"reduceRight of empty array with no initial value\");\n        }\n\n        var result, i = length - 1;\n        if (arguments.length >= 2) {\n            result = arguments[1];\n        } else {\n            do {\n                if (i in self) {\n                    result = self[i--];\n                    break;\n                }\n\n                // if array contains no values, no initial value to return\n                if (--i < 0) {\n                    throw new TypeError(\"reduceRight of empty array with no initial value\");\n                }\n            } while (true);\n        }\n\n        if (i < 0) {\n            return result;\n        }\n\n        do {\n            if (i in this) {\n                result = fun.call(void 0, result, self[i], i, object);\n            }\n        } while (i--);\n\n        return result;\n    };\n}\n\n// ES5 15.4.4.14\n// http://es5.github.com/#x15.4.4.14\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\nif (!Array.prototype.indexOf || ([0, 1].indexOf(1, 2) != -1)) {\n    Array.prototype.indexOf = function indexOf(sought /*, fromIndex */ ) {\n        var self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                toObject(this),\n            length = self.length >>> 0;\n\n        if (!length) {\n            return -1;\n        }\n\n        var i = 0;\n        if (arguments.length > 1) {\n            i = toInteger(arguments[1]);\n        }\n\n        // handle negative indices\n        i = i >= 0 ? i : Math.max(0, length + i);\n        for (; i < length; i++) {\n            if (i in self && self[i] === sought) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\n// ES5 15.4.4.15\n// http://es5.github.com/#x15.4.4.15\n// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf\nif (!Array.prototype.lastIndexOf || ([0, 1].lastIndexOf(0, -3) != -1)) {\n    Array.prototype.lastIndexOf = function lastIndexOf(sought /*, fromIndex */) {\n        var self = splitString && _toString(this) == \"[object String]\" ?\n                this.split(\"\") :\n                toObject(this),\n            length = self.length >>> 0;\n\n        if (!length) {\n            return -1;\n        }\n        var i = length - 1;\n        if (arguments.length > 1) {\n            i = Math.min(i, toInteger(arguments[1]));\n        }\n        // handle negative indices\n        i = i >= 0 ? i : length - Math.abs(i);\n        for (; i >= 0; i--) {\n            if (i in self && sought === self[i]) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\n//\n// Object\n// ======\n//\n\n// ES5 15.2.3.14\n// http://es5.github.com/#x15.2.3.14\nif (!Object.keys) {\n    // http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n    var hasDontEnumBug = true,\n        dontEnums = [\n            \"toString\",\n            \"toLocaleString\",\n            \"valueOf\",\n            \"hasOwnProperty\",\n            \"isPrototypeOf\",\n            \"propertyIsEnumerable\",\n            \"constructor\"\n        ],\n        dontEnumsLength = dontEnums.length;\n\n    for (var key in {\"toString\": null}) {\n        hasDontEnumBug = false;\n    }\n\n    Object.keys = function keys(object) {\n\n        if (\n            (typeof object != \"object\" && typeof object != \"function\") ||\n            object === null\n        ) {\n            throw new TypeError(\"Object.keys called on a non-object\");\n        }\n\n        var keys = [];\n        for (var name in object) {\n            if (owns(object, name)) {\n                keys.push(name);\n            }\n        }\n\n        if (hasDontEnumBug) {\n            for (var i = 0, ii = dontEnumsLength; i < ii; i++) {\n                var dontEnum = dontEnums[i];\n                if (owns(object, dontEnum)) {\n                    keys.push(dontEnum);\n                }\n            }\n        }\n        return keys;\n    };\n\n}\n\n//\n// Date\n// ====\n//\n\n// ES5 15.9.5.43\n// http://es5.github.com/#x15.9.5.43\n// This function returns a String value represent the instance in time\n// represented by this Date object. The format of the String is the Date Time\n// string format defined in 15.9.1.15. All fields are present in the String.\n// The time zone is always UTC, denoted by the suffix Z. If the time value of\n// this object is not a finite Number a RangeError exception is thrown.\nvar negativeDate = -62198755200000,\n    negativeYearString = \"-000001\";\nif (\n    !Date.prototype.toISOString ||\n    (new Date(negativeDate).toISOString().indexOf(negativeYearString) === -1)\n) {\n    Date.prototype.toISOString = function toISOString() {\n        var result, length, value, year, month;\n        if (!isFinite(this)) {\n            throw new RangeError(\"Date.prototype.toISOString called on non-finite value.\");\n        }\n\n        year = this.getUTCFullYear();\n\n        month = this.getUTCMonth();\n        // see https://github.com/kriskowal/es5-shim/issues/111\n        year += Math.floor(month / 12);\n        month = (month % 12 + 12) % 12;\n\n        // the date time string format is specified in 15.9.1.15.\n        result = [month + 1, this.getUTCDate(),\n            this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds()];\n        year = (\n            (year < 0 ? \"-\" : (year > 9999 ? \"+\" : \"\")) +\n            (\"00000\" + Math.abs(year))\n            .slice(0 <= year && year <= 9999 ? -4 : -6)\n        );\n\n        length = result.length;\n        while (length--) {\n            value = result[length];\n            // pad months, days, hours, minutes, and seconds to have two\n            // digits.\n            if (value < 10) {\n                result[length] = \"0\" + value;\n            }\n        }\n        // pad milliseconds to have three digits.\n        return (\n            year + \"-\" + result.slice(0, 2).join(\"-\") +\n            \"T\" + result.slice(2).join(\":\") + \".\" +\n            (\"000\" + this.getUTCMilliseconds()).slice(-3) + \"Z\"\n        );\n    };\n}\n\n\n// ES5 15.9.5.44\n// http://es5.github.com/#x15.9.5.44\n// This function provides a String representation of a Date object for use by\n// JSON.stringify (15.12.3).\nvar dateToJSONIsSupported = false;\ntry {\n    dateToJSONIsSupported = (\n        Date.prototype.toJSON &&\n        new Date(NaN).toJSON() === null &&\n        new Date(negativeDate).toJSON().indexOf(negativeYearString) !== -1 &&\n        Date.prototype.toJSON.call({ // generic\n            toISOString: function () {\n                return true;\n            }\n        })\n    );\n} catch (e) {\n}\nif (!dateToJSONIsSupported) {\n    Date.prototype.toJSON = function toJSON(key) {\n        // When the toJSON method is called with argument key, the following\n        // steps are taken:\n\n        // 1.  Let O be the result of calling ToObject, giving it the this\n        // value as its argument.\n        // 2. Let tv be toPrimitive(O, hint Number).\n        var o = Object(this),\n            tv = toPrimitive(o),\n            toISO;\n        // 3. If tv is a Number and is not finite, return null.\n        if (typeof tv === \"number\" && !isFinite(tv)) {\n            return null;\n        }\n        // 4. Let toISO be the result of calling the [[Get]] internal method of\n        // O with argument \"toISOString\".\n        toISO = o.toISOString;\n        // 5. If IsCallable(toISO) is false, throw a TypeError exception.\n        if (typeof toISO != \"function\") {\n            throw new TypeError(\"toISOString property is not callable\");\n        }\n        // 6. Return the result of calling the [[Call]] internal method of\n        //  toISO with O as the this value and an empty argument list.\n        return toISO.call(o);\n\n        // NOTE 1 The argument is ignored.\n\n        // NOTE 2 The toJSON function is intentionally generic; it does not\n        // require that its this value be a Date object. Therefore, it can be\n        // transferred to other kinds of objects for use as a method. However,\n        // it does require that any such object have a toISOString method. An\n        // object is free to use the argument key to filter its\n        // stringification.\n    };\n}\n\n// ES5 15.9.4.2\n// http://es5.github.com/#x15.9.4.2\n// based on work shared by Daniel Friesen (dantman)\n// http://gist.github.com/303249\nif (!Date.parse || \"Date.parse is buggy\") {\n    // XXX global assignment won't work in embeddings that use\n    // an alternate object for the context.\n    Date = (function(NativeDate) {\n\n        // Date.length === 7\n        function Date(Y, M, D, h, m, s, ms) {\n            var length = arguments.length;\n            if (this instanceof NativeDate) {\n                var date = length == 1 && String(Y) === Y ? // isString(Y)\n                    // We explicitly pass it through parse:\n                    new NativeDate(Date.parse(Y)) :\n                    // We have to manually make calls depending on argument\n                    // length here\n                    length >= 7 ? new NativeDate(Y, M, D, h, m, s, ms) :\n                    length >= 6 ? new NativeDate(Y, M, D, h, m, s) :\n                    length >= 5 ? new NativeDate(Y, M, D, h, m) :\n                    length >= 4 ? new NativeDate(Y, M, D, h) :\n                    length >= 3 ? new NativeDate(Y, M, D) :\n                    length >= 2 ? new NativeDate(Y, M) :\n                    length >= 1 ? new NativeDate(Y) :\n                                  new NativeDate();\n                // Prevent mixups with unfixed Date object\n                date.constructor = Date;\n                return date;\n            }\n            return NativeDate.apply(this, arguments);\n        };\n\n        // 15.9.1.15 Date Time String Format.\n        var isoDateExpression = new RegExp(\"^\" +\n            \"(\\\\d{4}|[\\+\\-]\\\\d{6})\" + // four-digit year capture or sign +\n                                      // 6-digit extended year\n            \"(?:-(\\\\d{2})\" + // optional month capture\n            \"(?:-(\\\\d{2})\" + // optional day capture\n            \"(?:\" + // capture hours:minutes:seconds.milliseconds\n                \"T(\\\\d{2})\" + // hours capture\n                \":(\\\\d{2})\" + // minutes capture\n                \"(?:\" + // optional :seconds.milliseconds\n                    \":(\\\\d{2})\" + // seconds capture\n                    \"(?:(\\\\.\\\\d{1,}))?\" + // milliseconds capture\n                \")?\" +\n            \"(\" + // capture UTC offset component\n                \"Z|\" + // UTC capture\n                \"(?:\" + // offset specifier +/-hours:minutes\n                    \"([-+])\" + // sign capture\n                    \"(\\\\d{2})\" + // hours offset capture\n                    \":(\\\\d{2})\" + // minutes offset capture\n                \")\" +\n            \")?)?)?)?\" +\n        \"$\");\n\n        var months = [\n            0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365\n        ];\n\n        function dayFromMonth(year, month) {\n            var t = month > 1 ? 1 : 0;\n            return (\n                months[month] +\n                Math.floor((year - 1969 + t) / 4) -\n                Math.floor((year - 1901 + t) / 100) +\n                Math.floor((year - 1601 + t) / 400) +\n                365 * (year - 1970)\n            );\n        }\n\n        // Copy any custom methods a 3rd party library may have added\n        for (var key in NativeDate) {\n            Date[key] = NativeDate[key];\n        }\n\n        // Copy \"native\" methods explicitly; they may be non-enumerable\n        Date.now = NativeDate.now;\n        Date.UTC = NativeDate.UTC;\n        Date.prototype = NativeDate.prototype;\n        Date.prototype.constructor = Date;\n\n        // Upgrade Date.parse to handle simplified ISO 8601 strings\n        Date.parse = function parse(string) {\n            var match = isoDateExpression.exec(string);\n            if (match) {\n                // parse months, days, hours, minutes, seconds, and milliseconds\n                // provide default values if necessary\n                // parse the UTC offset component\n                var year = Number(match[1]),\n                    month = Number(match[2] || 1) - 1,\n                    day = Number(match[3] || 1) - 1,\n                    hour = Number(match[4] || 0),\n                    minute = Number(match[5] || 0),\n                    second = Number(match[6] || 0),\n                    millisecond = Math.floor(Number(match[7] || 0) * 1000),\n                    // When time zone is missed, local offset should be used\n                    // (ES 5.1 bug)\n                    // see https://bugs.ecmascript.org/show_bug.cgi?id=112\n                    offset = !match[4] || match[8] ?\n                        0 : Number(new NativeDate(1970, 0)),\n                    signOffset = match[9] === \"-\" ? 1 : -1,\n                    hourOffset = Number(match[10] || 0),\n                    minuteOffset = Number(match[11] || 0),\n                    result;\n                if (\n                    hour < (\n                        minute > 0 || second > 0 || millisecond > 0 ?\n                        24 : 25\n                    ) &&\n                    minute < 60 && second < 60 && millisecond < 1000 &&\n                    month > -1 && month < 12 && hourOffset < 24 &&\n                    minuteOffset < 60 && // detect invalid offsets\n                    day > -1 &&\n                    day < (\n                        dayFromMonth(year, month + 1) -\n                        dayFromMonth(year, month)\n                    )\n                ) {\n                    result = (\n                        (dayFromMonth(year, month) + day) * 24 +\n                        hour +\n                        hourOffset * signOffset\n                    ) * 60;\n                    result = (\n                        (result + minute + minuteOffset * signOffset) * 60 +\n                        second\n                    ) * 1000 + millisecond + offset;\n                    if (-8.64e15 <= result && result <= 8.64e15) {\n                        return result;\n                    }\n                }\n                return NaN;\n            }\n            return NativeDate.parse.apply(this, arguments);\n        };\n\n        return Date;\n    })(Date);\n}\n\n// ES5 15.9.4.4\n// http://es5.github.com/#x15.9.4.4\nif (!Date.now) {\n    Date.now = function now() {\n        return new Date().getTime();\n    };\n}\n\n\n//\n// Number\n// ======\n//\n\n// ES5.1 15.7.4.5\n// http://es5.github.com/#x15.7.4.5\nif (!Number.prototype.toFixed || (0.00008).toFixed(3) !== '0.000' || (0.9).toFixed(0) === '0' || (1.255).toFixed(2) !== '1.25' || (1000000000000000128).toFixed(0) !== \"1000000000000000128\") {\n    // Hide these variables and functions\n    (function () {\n        var base, size, data, i;\n\n        base = 1e7;\n        size = 6;\n        data = [0, 0, 0, 0, 0, 0];\n\n        function multiply(n, c) {\n            var i = -1;\n            while (++i < size) {\n                c += n * data[i];\n                data[i] = c % base;\n                c = Math.floor(c / base);\n            }\n        }\n\n        function divide(n) {\n            var i = size, c = 0;\n            while (--i >= 0) {\n                c += data[i];\n                data[i] = Math.floor(c / n);\n                c = (c % n) * base;\n            }\n        }\n\n        function toString() {\n            var i = size;\n            var s = '';\n            while (--i >= 0) {\n                if (s !== '' || i === 0 || data[i] !== 0) {\n                    var t = String(data[i]);\n                    if (s === '') {\n                        s = t;\n                    } else {\n                        s += '0000000'.slice(0, 7 - t.length) + t;\n                    }\n                }\n            }\n            return s;\n        }\n\n        function pow(x, n, acc) {\n            return (n === 0 ? acc : (n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc)));\n        }\n\n        function log(x) {\n            var n = 0;\n            while (x >= 4096) {\n                n += 12;\n                x /= 4096;\n            }\n            while (x >= 2) {\n                n += 1;\n                x /= 2;\n            }\n            return n;\n        }\n\n        Number.prototype.toFixed = function (fractionDigits) {\n            var f, x, s, m, e, z, j, k;\n\n            // Test for NaN and round fractionDigits down\n            f = Number(fractionDigits);\n            f = f !== f ? 0 : Math.floor(f);\n\n            if (f < 0 || f > 20) {\n                throw new RangeError(\"Number.toFixed called with invalid number of decimals\");\n            }\n\n            x = Number(this);\n\n            // Test for NaN\n            if (x !== x) {\n                return \"NaN\";\n            }\n\n            // If it is too big or small, return the string value of the number\n            if (x <= -1e21 || x >= 1e21) {\n                return String(x);\n            }\n\n            s = \"\";\n\n            if (x < 0) {\n                s = \"-\";\n                x = -x;\n            }\n\n            m = \"0\";\n\n            if (x > 1e-21) {\n                // 1e-21 < x < 1e21\n                // -70 < log2(x) < 70\n                e = log(x * pow(2, 69, 1)) - 69;\n                z = (e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1));\n                z *= 0x10000000000000; // Math.pow(2, 52);\n                e = 52 - e;\n\n                // -18 < e < 122\n                // x = z / 2 ^ e\n                if (e > 0) {\n                    multiply(0, z);\n                    j = f;\n\n                    while (j >= 7) {\n                        multiply(1e7, 0);\n                        j -= 7;\n                    }\n\n                    multiply(pow(10, j, 1), 0);\n                    j = e - 1;\n\n                    while (j >= 23) {\n                        divide(1 << 23);\n                        j -= 23;\n                    }\n\n                    divide(1 << j);\n                    multiply(1, 1);\n                    divide(2);\n                    m = toString();\n                } else {\n                    multiply(0, z);\n                    multiply(1 << (-e), 0);\n                    m = toString() + '0.00000000000000000000'.slice(2, 2 + f);\n                }\n            }\n\n            if (f > 0) {\n                k = m.length;\n\n                if (k <= f) {\n                    m = s + '0.0000000000000000000'.slice(0, f - k + 2) + m;\n                } else {\n                    m = s + m.slice(0, k - f) + '.' + m.slice(k - f);\n                }\n            } else {\n                m = s + m;\n            }\n\n            return m;\n        }\n    }());\n}\n\n\n//\n// String\n// ======\n//\n\n\n// ES5 15.5.4.14\n// http://es5.github.com/#x15.5.4.14\n// [bugfix, chrome]\n// If separator is undefined, then the result array contains just one String,\n// which is the this value (converted to a String). If limit is not undefined,\n// then the output array is truncated so that it contains no more than limit\n// elements.\n// \"0\".split(undefined, 0) -> []\nif(\"0\".split(void 0, 0).length) {\n    var string_split = String.prototype.split;\n    String.prototype.split = function(separator, limit) {\n        if(separator === void 0 && limit === 0)return [];\n        return string_split.apply(this, arguments);\n    }\n}\n\n// ECMA-262, 3rd B.2.3\n// Note an ECMAScript standart, although ECMAScript 3rd Edition has a\n// non-normative section suggesting uniform semantics and it should be\n// normalized across all browsers\n// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\nif(\"\".substr && \"0b\".substr(-1) !== \"b\") {\n    var string_substr = String.prototype.substr;\n    /**\n     *  Get the substring of a string\n     *  @param  {integer}  start   where to start the substring\n     *  @param  {integer}  length  how many characters to return\n     *  @return {string}\n     */\n    String.prototype.substr = function(start, length) {\n        return string_substr.call(\n            this,\n            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,\n            length\n        );\n    }\n}\n\n// ES5 15.5.4.20\n// http://es5.github.com/#x15.5.4.20\nvar ws = \"\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\" +\n    \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\" +\n    \"\\u2029\\uFEFF\";\nif (!String.prototype.trim || ws.trim()) {\n    // http://blog.stevenlevithan.com/archives/faster-trim-javascript\n    // http://perfectionkills.com/whitespace-deviations/\n    ws = \"[\" + ws + \"]\";\n    var trimBeginRegexp = new RegExp(\"^\" + ws + ws + \"*\"),\n        trimEndRegexp = new RegExp(ws + ws + \"*$\");\n    String.prototype.trim = function trim() {\n        if (this === undefined || this === null) {\n            throw new TypeError(\"can't convert \"+this+\" to object\");\n        }\n        return String(this)\n            .replace(trimBeginRegexp, \"\")\n            .replace(trimEndRegexp, \"\");\n    };\n}\n\n//\n// Util\n// ======\n//\n\n// ES5 9.4\n// http://es5.github.com/#x9.4\n// http://jsperf.com/to-integer\n\nfunction toInteger(n) {\n    n = +n;\n    if (n !== n) { // isNaN\n        n = 0;\n    } else if (n !== 0 && n !== (1/0) && n !== -(1/0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n    }\n    return n;\n}\n\nfunction isPrimitive(input) {\n    var type = typeof input;\n    return (\n        input === null ||\n        type === \"undefined\" ||\n        type === \"boolean\" ||\n        type === \"number\" ||\n        type === \"string\"\n    );\n}\n\nfunction toPrimitive(input) {\n    var val, valueOf, toString;\n    if (isPrimitive(input)) {\n        return input;\n    }\n    valueOf = input.valueOf;\n    if (typeof valueOf === \"function\") {\n        val = valueOf.call(input);\n        if (isPrimitive(val)) {\n            return val;\n        }\n    }\n    toString = input.toString;\n    if (typeof toString === \"function\") {\n        val = toString.call(input);\n        if (isPrimitive(val)) {\n            return val;\n        }\n    }\n    throw new TypeError();\n}\n\n// ES5 9.9\n// http://es5.github.com/#x9.9\nvar toObject = function (o) {\n    if (o == null) { // this matches both null and undefined\n        throw new TypeError(\"can't convert \"+o+\" to object\");\n    }\n    return Object(o);\n};\n\n});\n\n","/*!\n * Modernizr v2.6.3\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = (function( window, document, undefined ) {\n\n    var version = '2.6.3',\n\n    Modernizr = {},\n\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n    enableClasses = true,\n    /*>>cssclasses*/\n\n    docElement = document.documentElement,\n\n    /**\n     * Create our \"modernizr\" element that we do most feature tests on.\n     */\n    mod = 'modernizr',\n    modElem = document.createElement(mod),\n    mStyle = modElem.style,\n\n    /**\n     * Create the input element for various Web Forms feature tests.\n     */\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\n\n    /*>>smile*/\n    smile = ':)',\n    /*>>smile*/\n\n    toString = {}.toString,\n\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n    omPrefixes = 'Webkit Moz O ms',\n\n    cssomPrefixes = omPrefixes.split(' '),\n\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\n    /*>>domprefixes*/\n\n    /*>>ns*/\n    ns = {'svg': 'http://www.w3.org/2000/svg'},\n    /*>>ns*/\n\n    tests = {},\n    inputs = {},\n    attrs = {},\n\n    classes = [],\n\n    slice = classes.slice,\n\n    featureName, // used in testing loop\n\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n    injectElementWithStyles = function( rule, callback, nodes, testnames ) {\n\n      var style, ret, node, docOverflow,\n          div = document.createElement('div'),\n          // After page load injecting a fake body doesn't work so check if body exists\n          body = document.body,\n          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n          fakeBody = body || document.createElement('body');\n\n      if ( parseInt(nodes, 10) ) {\n          // In order not to give false positives we create a node for each test\n          // This also allows the method to scale for unspecified uses\n          while ( nodes-- ) {\n              node = document.createElement('div');\n              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n              div.appendChild(node);\n          }\n      }\n\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n      style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n      div.id = mod;\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n      (body ? div : fakeBody).innerHTML += style;\n      fakeBody.appendChild(div);\n      if ( !body ) {\n          //avoid crashing IE8, if background image is used\n          fakeBody.style.background = '';\n          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n          fakeBody.style.overflow = 'hidden';\n          docOverflow = docElement.style.overflow;\n          docElement.style.overflow = 'hidden';\n          docElement.appendChild(fakeBody);\n      }\n\n      ret = callback(div, rule);\n      // If this is done after page load we don't want to remove the body so check if body exists\n      if ( !body ) {\n          fakeBody.parentNode.removeChild(fakeBody);\n          docElement.style.overflow = docOverflow;\n      } else {\n          div.parentNode.removeChild(div);\n      }\n\n      return !!ret;\n\n    },\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n    testMediaQuery = function( mq ) {\n\n      var matchMedia = window.matchMedia || window.msMatchMedia;\n      if ( matchMedia ) {\n        return matchMedia(mq).matches;\n      }\n\n      var bool;\n\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\n        bool = (window.getComputedStyle ?\n                  getComputedStyle(node, null) :\n                  node.currentStyle)['position'] == 'absolute';\n      });\n\n      return bool;\n\n     },\n     /*>>mq*/\n\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrects:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n    isEventSupported = (function() {\n\n      var TAGNAMES = {\n        'select': 'input', 'change': 'input',\n        'submit': 'form', 'reset': 'form',\n        'error': 'img', 'load': 'img', 'abort': 'img'\n      };\n\n      function isEventSupported( eventName, element ) {\n\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\n        eventName = 'on' + eventName;\n\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n        var isSupported = eventName in element;\n\n        if ( !isSupported ) {\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n          if ( !element.setAttribute ) {\n            element = document.createElement('div');\n          }\n          if ( element.setAttribute && element.removeAttribute ) {\n            element.setAttribute(eventName, '');\n            isSupported = is(element[eventName], 'function');\n\n            // If property was created, \"remove it\" (by setting value to `undefined`)\n            if ( !is(element[eventName], 'undefined') ) {\n              element[eventName] = undefined;\n            }\n            element.removeAttribute(eventName);\n          }\n        }\n\n        element = null;\n        return isSupported;\n      }\n      return isEventSupported;\n    })(),\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n      hasOwnProp = function (object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n    // es5.github.com/#x15.3.4.5\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function bind(that) {\n\n        var target = this;\n\n        if (typeof target != \"function\") {\n            throw new TypeError();\n        }\n\n        var args = slice.call(arguments, 1),\n            bound = function () {\n\n            if (this instanceof bound) {\n\n              var F = function(){};\n              F.prototype = target.prototype;\n              var self = new F();\n\n              var result = target.apply(\n                  self,\n                  args.concat(slice.call(arguments))\n              );\n              if (Object(result) === result) {\n                  return result;\n              }\n              return self;\n\n            } else {\n\n              return target.apply(\n                  that,\n                  args.concat(slice.call(arguments))\n              );\n\n            }\n\n        };\n\n        return bound;\n      };\n    }\n\n    /**\n     * setCss applies given styles to the Modernizr DOM node.\n     */\n    function setCss( str ) {\n        mStyle.cssText = str;\n    }\n\n    /**\n     * setCssAll extrapolates all vendor-specific css strings.\n     */\n    function setCssAll( str1, str2 ) {\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n    }\n\n    /**\n     * is returns a boolean for if typeof obj is exactly type.\n     */\n    function is( obj, type ) {\n        return typeof obj === type;\n    }\n\n    /**\n     * contains returns a boolean for if substr is found within str.\n     */\n    function contains( str, substr ) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    /*>>testprop*/\n\n    // testProps is a generic CSS / DOM property test.\n\n    // In testing support for a given CSS property, it's legit to test:\n    //    `elem.style[styleName] !== undefined`\n    // If the property is supported it will return an empty string,\n    // if unsupported it will return undefined.\n\n    // We'll take advantage of this quick test and skip setting a style\n    // on our modernizr element, but instead just testing undefined vs\n    // empty string.\n\n    // Because the testing of the CSS property names (with \"-\", as\n    // opposed to the camelCase DOM properties) is non-portable and\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\n    // we explicitly reject properties with dashes so that authors\n    // developing in WebKit or IE first don't end up with\n    // browser-specific content by accident.\n\n    function testProps( props, prefixed ) {\n        for ( var i in props ) {\n            var prop = props[i];\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n    /*>>testprop*/\n\n    // TODO :: add testDOMProps\n    /**\n     * testDOMProps is a generic DOM property test; if a browser supports\n     *   a certain property, it won't return undefined for it.\n     */\n    function testDOMProps( props, obj, elem ) {\n        for ( var i in props ) {\n            var item = obj[props[i]];\n            if ( item !== undefined) {\n\n                // return the property name as a string\n                if (elem === false) return props[i];\n\n                // let's bind a function\n                if (is(item, 'function')){\n                  // default to autobind unless override\n                  return item.bind(elem || obj);\n                }\n\n                // return the unbound function or obj or value\n                return item;\n            }\n        }\n        return false;\n    }\n\n    /*>>testallprops*/\n    /**\n     * testPropsAll tests a list of DOM properties we want to check against.\n     *   We specify literally ALL possible (known and/or likely) properties on\n     *   the element including the non-vendor prefixed one, for forward-\n     *   compatibility.\n     */\n    function testPropsAll( prop, prefixed, elem ) {\n\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n          return testProps(props, prefixed);\n\n        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n        } else {\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n          return testDOMProps(props, prefixed, elem);\n        }\n    }\n    /*>>testallprops*/\n\n\n    /**\n     * Tests\n     * -----\n     */\n\n    // The *new* flexbox\n    // dev.w3.org/csswg/css3-flexbox\n\n    tests['flexbox'] = function() {\n      return testPropsAll('flexWrap');\n    };\n\n    // The *old* flexbox\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n    tests['flexboxlegacy'] = function() {\n        return testPropsAll('boxDirection');\n    };\n\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\n    // so we actually have to call getContext() to verify\n    // github.com/Modernizr/Modernizr/issues/issue/97/\n\n    tests['canvas'] = function() {\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    };\n\n    tests['canvastext'] = function() {\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n    };\n\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n    // We do a soft detect which may false positive in order to avoid\n    // an expensive context creation: bugzil.la/732441\n\n    tests['webgl'] = function() {\n        return !!window.WebGLRenderingContext;\n    };\n\n    /*\n     * The Modernizr.touch test only indicates if the browser supports\n     *    touch events, which does not necessarily reflect a touchscreen\n     *    device, as evidenced by tablets running Windows 7 or, alas,\n     *    the Palm Pre / WebOS (touch) phones.\n     *\n     * Additionally, Chrome (desktop) used to lie about its support on this,\n     *    but that has since been rectified: crbug.com/36415\n     *\n     * We also test for Firefox 4 Multitouch Support.\n     *\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\n     */\n\n    tests['touch'] = function() {\n        var bool;\n\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n          bool = true;\n        } else {\n          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\n            bool = node.offsetTop === 9;\n          });\n        }\n\n        return bool;\n    };\n\n\n    // geolocation is often considered a trivial feature detect...\n    // Turns out, it's quite tricky to get right:\n    //\n    // Using !!navigator.geolocation does two things we don't want. It:\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n    //   2. Disables page caching in WebKit: webk.it/43956\n    //\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\n    // a false positive that would throw an exception: bugzil.la/688158\n\n    tests['geolocation'] = function() {\n        return 'geolocation' in navigator;\n    };\n\n\n    tests['postmessage'] = function() {\n      return !!window.postMessage;\n    };\n\n\n    // Chrome incognito mode used to throw an exception when using openDatabase\n    // It doesn't anymore.\n    tests['websqldatabase'] = function() {\n      return !!window.openDatabase;\n    };\n\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\n    // - Webkit's implementation is accessible through webkitIndexedDB\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n    // For speed, we don't test the legacy (and beta-only) indexedDB\n    tests['indexedDB'] = function() {\n      return !!testPropsAll(\"indexedDB\", window);\n    };\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    tests['hashchange'] = function() {\n      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n    };\n\n    // Per 1.6:\n    // This used to be Modernizr.historymanagement but the longer\n    // name has been deprecated in favor of a shorter and property-matching one.\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n    // and in the first release thereafter disappear entirely.\n    tests['history'] = function() {\n      return !!(window.history && history.pushState);\n    };\n\n    tests['draganddrop'] = function() {\n        var div = document.createElement('div');\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n    };\n\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n    // FF10 still uses prefixes, so check for it until then.\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n    tests['websockets'] = function() {\n        return 'WebSocket' in window || 'MozWebSocket' in window;\n    };\n\n\n    // css-tricks.com/rgba-browser-support/\n    tests['rgba'] = function() {\n        // Set an rgba() color and check the returned value\n\n        setCss('background-color:rgba(150,255,150,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba');\n    };\n\n    tests['hsla'] = function() {\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n        //   except IE9 who retains it as hsla\n\n        setCss('background-color:hsla(120,40%,100%,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n    };\n\n    tests['multiplebgs'] = function() {\n        // Setting multiple images AND a color on the background shorthand property\n        //  and then querying the style.background property value for the number of\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n        setCss('background:url(https://),url(https://),red url(https://)');\n\n        // If the UA supports multiple backgrounds, there should be three occurrences\n        //   of the string \"url(\" in the return value for elemStyle.background\n\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\n    };\n\n\n\n    // this will false positive in Opera Mini\n    //   github.com/Modernizr/Modernizr/issues/396\n\n    tests['backgroundsize'] = function() {\n        return testPropsAll('backgroundSize');\n    };\n\n    tests['borderimage'] = function() {\n        return testPropsAll('borderImage');\n    };\n\n\n    // Super comprehensive table about all the unique implementations of\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n    tests['borderradius'] = function() {\n        return testPropsAll('borderRadius');\n    };\n\n    // WebOS unfortunately false positives on this test.\n    tests['boxshadow'] = function() {\n        return testPropsAll('boxShadow');\n    };\n\n    // FF3.0 will false positive on this test\n    tests['textshadow'] = function() {\n        return document.createElement('div').style.textShadow === '';\n    };\n\n\n    tests['opacity'] = function() {\n        // Browsers that actually have CSS Opacity implemented have done so\n        //  according to spec, which means their return values are within the\n        //  range of [0.0,1.0] - including the leading zero.\n\n        setCssAll('opacity:.55');\n\n        // The non-literal . in this regex is intentional:\n        //   German Chrome returns this value as 0,55\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n        return (/^0.55$/).test(mStyle.opacity);\n    };\n\n\n    // Note, Android < 4 will pass this test, but can only animate\n    //   a single property at a time\n    //   daneden.me/2011/12/putting-up-with-androids-bullshit/\n    tests['cssanimations'] = function() {\n        return testPropsAll('animationName');\n    };\n\n\n    tests['csscolumns'] = function() {\n        return testPropsAll('columnCount');\n    };\n\n\n    tests['cssgradients'] = function() {\n        /**\n         * For CSS Gradients syntax, please see:\n         * webkit.org/blog/175/introducing-css-gradients/\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\n         * dev.w3.org/csswg/css3-images/#gradients-\n         */\n\n        var str1 = 'background-image:',\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n            str3 = 'linear-gradient(left top,#9f9, white);';\n\n        setCss(\n             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n              (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n             // standard syntax             // trailing 'background-image:'\n              prefixes.join(str3 + str1)).slice(0, -str1.length)\n        );\n\n        return contains(mStyle.backgroundImage, 'gradient');\n    };\n\n\n    tests['cssreflections'] = function() {\n        return testPropsAll('boxReflect');\n    };\n\n\n    tests['csstransforms'] = function() {\n        return !!testPropsAll('transform');\n    };\n\n\n    tests['csstransforms3d'] = function() {\n\n        var ret = !!testPropsAll('perspective');\n\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\n        if ( ret && 'webkitPerspective' in docElement.style ) {\n\n          // Webkit allows this media query to succeed only if the feature is enabled.\n          // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\n            ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n          });\n        }\n        return ret;\n    };\n\n\n    tests['csstransitions'] = function() {\n        return testPropsAll('transition');\n    };\n\n\n    /*>>fontface*/\n    // @font-face detection routine by Diego Perini\n    // javascript.nwbox.com/CSSSupport/\n\n    // false positives:\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\n    tests['fontface'] = function() {\n        var bool;\n\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\n          var style = document.getElementById('smodernizr'),\n              sheet = style.sheet || style.styleSheet,\n              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\n\n          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n        });\n\n        return bool;\n    };\n    /*>>fontface*/\n\n    // CSS generated content detection\n    tests['generatedcontent'] = function() {\n        var bool;\n\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\n          bool = node.offsetHeight >= 3;\n        });\n\n        return bool;\n    };\n\n\n\n    // These tests evaluate support of the video/audio elements, as well as\n    // testing what types of content they support.\n    //\n    // We're using the Boolean constructor here, so that we can extend the value\n    // e.g.  Modernizr.video     // true\n    //       Modernizr.video.ogg // 'probably'\n    //\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n    //                     thx to NielsLeenheer and zcorpan\n\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n    tests['video'] = function() {\n        var elem = document.createElement('video'),\n            bool = false;\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\n\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\n\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n            }\n\n        } catch(e) { }\n\n        return bool;\n    };\n\n    tests['audio'] = function() {\n        var elem = document.createElement('audio'),\n            bool = false;\n\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n\n                // Mimetypes accepted:\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                //   bit.ly/iphoneoscodecs\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n            }\n        } catch(e) { }\n\n        return bool;\n    };\n\n\n    // In FF4, if disabled, window.localStorage should === null.\n\n    // Normally, we could not test that directly and need to do a\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\n    //   throw bugzil.la/365772 if cookies are disabled\n\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n    // will throw the exception:\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n    // Peculiarly, getItem and removeItem calls do not throw.\n\n    // Because we are forced to try/catch this, we'll go aggressive.\n\n    // Just FWIW: IE8 Compat mode supports these features completely:\n    //   www.quirksmode.org/dom/html5.html\n    // But IE8 doesn't support either with local files\n\n    tests['localstorage'] = function() {\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n    tests['sessionstorage'] = function() {\n        try {\n            sessionStorage.setItem(mod, mod);\n            sessionStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n\n    tests['webworkers'] = function() {\n        return !!window.Worker;\n    };\n\n\n    tests['applicationcache'] = function() {\n        return !!window.applicationCache;\n    };\n\n\n    // Thanks to Erik Dahlstrom\n    tests['svg'] = function() {\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n    };\n\n    // specifically for SVG inline in HTML, not within XHTML\n    // test page: paulirish.com/demo/inline-svg\n    tests['inlinesvg'] = function() {\n      var div = document.createElement('div');\n      div.innerHTML = '<svg/>';\n      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n    };\n\n    // SVG SMIL animation\n    tests['smil'] = function() {\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n    };\n\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n    tests['svgclippaths'] = function() {\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n    };\n\n    /*>>webforms*/\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\n    // Hold this guy to execute in a moment.\n    function webforms() {\n        /*>>input*/\n        // Run through HTML5's new input attributes to see if the UA understands any.\n        // We're using f which is the <input> element created early on\n        // Mike Taylr has created a comprehensive resource for testing these attributes\n        //   when applied to all input types:\n        //   miketaylr.com/code/input-type-attr.html\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n        // Only input placeholder is tested while textarea's placeholder is not.\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\n        // Both tests are available in feature-detects/forms-placeholder.js\n        Modernizr['input'] = (function( props ) {\n            for ( var i = 0, len = props.length; i < len; i++ ) {\n                attrs[ props[i] ] = !!(props[i] in inputElem);\n            }\n            if (attrs.list){\n              // safari false positive's on datalist: webk.it/74252\n              // see also github.com/Modernizr/Modernizr/issues/146\n              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n            }\n            return attrs;\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n        /*>>input*/\n\n        /*>>inputtypes*/\n        // Run through HTML5's new input types to see if the UA understands any.\n        //   This is put behind the tests runloop because it doesn't return a\n        //   true/false like all the other tests; instead, it returns an object\n        //   containing each input type with its corresponding true/false value\n\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n        Modernizr['inputtypes'] = (function(props) {\n\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\n\n                inputElem.setAttribute('type', inputElemType = props[i]);\n                bool = inputElem.type !== 'text';\n\n                // We first check to see if the type we give it sticks..\n                // If the type does, we feed it a textual value, which shouldn't be valid.\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n                if ( bool ) {\n\n                    inputElem.value         = smile;\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\n\n                      docElement.appendChild(inputElem);\n                      defaultView = document.defaultView;\n\n                      // Safari 2-4 allows the smiley as a value, despite making a slider\n                      bool =  defaultView.getComputedStyle &&\n                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n                              // Mobile android web browser has false positive, so must\n                              // check the height to see if the widget is actually there.\n                              (inputElem.offsetHeight !== 0);\n\n                      docElement.removeChild(inputElem);\n\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\n                      // Spec doesn't define any special parsing or detectable UI\n                      //   behaviors so we pass these through as true\n\n                      // Interestingly, opera fails the earlier test, so it doesn't\n                      //  even make it here.\n\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\n                      // Real url and email support comes with prebaked validation.\n                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n\n                    } else {\n                      // If the upgraded input compontent rejects the :) text, we got a winner\n                      bool = inputElem.value != smile;\n                    }\n                }\n\n                inputs[ props[i] ] = !!bool;\n            }\n            return inputs;\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n        /*>>inputtypes*/\n    }\n    /*>>webforms*/\n\n\n    // End of test definitions\n    // -----------------------\n\n\n\n    // Run through all tests and detect their support in the current UA.\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n    for ( var feature in tests ) {\n        if ( hasOwnProp(tests, feature) ) {\n            // run the test, throw the return value into the Modernizr,\n            //   then based on that boolean, define an appropriate className\n            //   and push it into an array of classes we'll join later.\n            featureName  = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n    /*>>webforms*/\n    // input tests need to run.\n    Modernizr.input || webforms();\n    /*>>webforms*/\n\n\n    /**\n     * addTest allows the user to define their own feature tests\n     * the result will be added onto the Modernizr object,\n     * as well as an appropriate className set on the html element\n     *\n     * @param feature - String naming the feature\n     * @param test - Function returning true if feature is supported, false if not\n     */\n     Modernizr.addTest = function ( feature, test ) {\n       if ( typeof feature == 'object' ) {\n         for ( var key in feature ) {\n           if ( hasOwnProp( feature, key ) ) {\n             Modernizr.addTest( key, feature[ key ] );\n           }\n         }\n       } else {\n\n         feature = feature.toLowerCase();\n\n         if ( Modernizr[feature] !== undefined ) {\n           // we're going to quit if you're trying to overwrite an existing test\n           // if we were to allow it, we'd do this:\n           //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n           //   docElement.className = docElement.className.replace( re, '' );\n           // but, no rly, stuff 'em.\n           return Modernizr;\n         }\n\n         test = typeof test == 'function' ? test() : test;\n\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\n         }\n         Modernizr[feature] = test;\n\n       }\n\n       return Modernizr; // allow chaining.\n     };\n\n\n    // Reset modElem.cssText to nothing to reduce memory footprint.\n    setCss('');\n    modElem = inputElem = null;\n\n    /*>>shiv*/\n    /*! HTML5 Shiv v3.6.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed */\n    ;(function(window, document) {\n    /*jshint evil:true */\n      /** Preset options */\n      var options = window.html5 || {};\n\n      /** Used to skip problem elements */\n      var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n      /** Not all elements can be cloned in IE **/\n      var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n      /** Detect whether the browser supports default html5 styles */\n      var supportsHtml5Styles;\n\n      /** Name of the expando, to work with multiple documents or to re-shiv one document */\n      var expando = '_html5shiv';\n\n      /** The id for the the documents expando */\n      var expanID = 0;\n\n      /** Cached data for each document */\n      var expandoData = {};\n\n      /** Detect whether the browser supports unknown elements */\n      var supportsUnknownElements;\n\n      (function() {\n        try {\n            var a = document.createElement('a');\n            a.innerHTML = '<xyz></xyz>';\n            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n            supportsHtml5Styles = ('hidden' in a);\n\n            supportsUnknownElements = a.childNodes.length == 1 || (function() {\n              // assign a false positive if unable to shiv\n              (document.createElement)('a');\n              var frag = document.createDocumentFragment();\n              return (\n                typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n              );\n            }());\n        } catch(e) {\n          supportsHtml5Styles = true;\n          supportsUnknownElements = true;\n        }\n\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Creates a style sheet with the given CSS text and adds it to the document.\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @param {String} cssText The CSS text.\n       * @returns {StyleSheet} The style element.\n       */\n      function addStyleSheet(ownerDocument, cssText) {\n        var p = ownerDocument.createElement('p'),\n            parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n        p.innerHTML = 'x<style>' + cssText + '</style>';\n        return parent.insertBefore(p.lastChild, parent.firstChild);\n      }\n\n      /**\n       * Returns the value of `html5.elements` as an array.\n       * @private\n       * @returns {Array} An array of shived element node names.\n       */\n      function getElements() {\n        var elements = html5.elements;\n        return typeof elements == 'string' ? elements.split(' ') : elements;\n      }\n\n        /**\n       * Returns the data associated to the given document\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Object} An object of data.\n       */\n      function getExpandoData(ownerDocument) {\n        var data = expandoData[ownerDocument[expando]];\n        if (!data) {\n            data = {};\n            expanID++;\n            ownerDocument[expando] = expanID;\n            expandoData[expanID] = data;\n        }\n        return data;\n      }\n\n      /**\n       * returns a shived element for the given nodeName and document\n       * @memberOf html5\n       * @param {String} nodeName name of the element\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived element.\n       */\n      function createElement(nodeName, ownerDocument, data){\n        if (!ownerDocument) {\n            ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n            return ownerDocument.createElement(nodeName);\n        }\n        if (!data) {\n            data = getExpandoData(ownerDocument);\n        }\n        var node;\n\n        if (data.cache[nodeName]) {\n            node = data.cache[nodeName].cloneNode();\n        } else if (saveClones.test(nodeName)) {\n            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n        } else {\n            node = data.createElem(nodeName);\n        }\n\n        // Avoid adding some elements to fragments in IE < 9 because\n        // * Attributes like `name` or `type` cannot be set/changed once an element\n        //   is inserted into a document/fragment\n        // * Link elements with `src` attributes that are inaccessible, as with\n        //   a 403 response, will cause the tab/window to crash\n        // * Script elements appended to fragments will execute when their `src`\n        //   or `text` property is set\n        return node.canHaveChildren && !reSkip.test(nodeName) ? data.frag.appendChild(node) : node;\n      }\n\n      /**\n       * returns a shived DocumentFragment for the given document\n       * @memberOf html5\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived DocumentFragment.\n       */\n      function createDocumentFragment(ownerDocument, data){\n        if (!ownerDocument) {\n            ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n            return ownerDocument.createDocumentFragment();\n        }\n        data = data || getExpandoData(ownerDocument);\n        var clone = data.frag.cloneNode(),\n            i = 0,\n            elems = getElements(),\n            l = elems.length;\n        for(;i<l;i++){\n            clone.createElement(elems[i]);\n        }\n        return clone;\n      }\n\n      /**\n       * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n       * @private\n       * @param {Document|DocumentFragment} ownerDocument The document.\n       * @param {Object} data of the document.\n       */\n      function shivMethods(ownerDocument, data) {\n        if (!data.cache) {\n            data.cache = {};\n            data.createElem = ownerDocument.createElement;\n            data.createFrag = ownerDocument.createDocumentFragment;\n            data.frag = data.createFrag();\n        }\n\n\n        ownerDocument.createElement = function(nodeName) {\n          //abort shiv\n          if (!html5.shivMethods) {\n              return data.createElem(nodeName);\n          }\n          return createElement(nodeName, ownerDocument, data);\n        };\n\n        ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n          'var n=f.cloneNode(),c=n.createElement;' +\n          'h.shivMethods&&(' +\n            // unroll the `createElement` calls\n            getElements().join().replace(/\\w+/g, function(nodeName) {\n              data.createElem(nodeName);\n              data.frag.createElement(nodeName);\n              return 'c(\"' + nodeName + '\")';\n            }) +\n          ');return n}'\n        )(html5, data.frag);\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivDocument(ownerDocument) {\n        if (!ownerDocument) {\n            ownerDocument = document;\n        }\n        var data = getExpandoData(ownerDocument);\n\n        if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n          data.hasCSS = !!addStyleSheet(ownerDocument,\n            // corrects block display not defined in IE6/7/8/9\n            'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}' +\n            // adds styling not present in IE6/7/8/9\n            'mark{background:#FF0;color:#000}'\n          );\n        }\n        if (!supportsUnknownElements) {\n          shivMethods(ownerDocument, data);\n        }\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * The `html5` object is exposed so that more elements can be shived and\n       * existing shiving can be detected on iframes.\n       * @type Object\n       * @example\n       *\n       * // options can be changed before the script is included\n       * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n       */\n      var html5 = {\n\n        /**\n         * An array or space separated string of node names of the elements to shiv.\n         * @memberOf html5\n         * @type Array|String\n         */\n        'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video',\n\n        /**\n         * A flag to indicate that the HTML5 style sheet should be inserted.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivCSS': (options.shivCSS !== false),\n\n        /**\n         * Is equal to true if a browser supports creating unknown/HTML5 elements\n         * @memberOf html5\n         * @type boolean\n         */\n        'supportsUnknownElements': supportsUnknownElements,\n\n        /**\n         * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n         * methods should be overwritten.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivMethods': (options.shivMethods !== false),\n\n        /**\n         * A string to describe the type of `html5` object (\"default\" or \"default print\").\n         * @memberOf html5\n         * @type String\n         */\n        'type': 'default',\n\n        // shivs the document according to the specified `html5` object options\n        'shivDocument': shivDocument,\n\n        //creates a shived element\n        createElement: createElement,\n\n        //creates a shived documentFragment\n        createDocumentFragment: createDocumentFragment\n      };\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose html5\n      window.html5 = html5;\n\n      // shiv the document\n      shivDocument(document);\n\n    }(this, document));\n    /*>>shiv*/\n\n    // Assign private properties to the return object with prefix\n    Modernizr._version      = version;\n\n    // expose these for the plugin API. Look in the source for how to join() them against your input\n    /*>>prefixes*/\n    Modernizr._prefixes     = prefixes;\n    /*>>prefixes*/\n    /*>>domprefixes*/\n    Modernizr._domPrefixes  = domPrefixes;\n    Modernizr._cssomPrefixes  = cssomPrefixes;\n    /*>>domprefixes*/\n\n    /*>>mq*/\n    // Modernizr.mq tests a given media query, live against the current state of the window\n    // A few important notes:\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n    //       Modernizr.mq('(min-width:0)')\n    // usage:\n    // Modernizr.mq('only screen and (max-width:768)')\n    Modernizr.mq            = testMediaQuery;\n    /*>>mq*/\n\n    /*>>hasevent*/\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n    // Modernizr.hasEvent('gesturestart', elem)\n    Modernizr.hasEvent      = isEventSupported;\n    /*>>hasevent*/\n\n    /*>>testprop*/\n    // Modernizr.testProp() investigates whether a given style property is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testProp('pointerEvents')\n    Modernizr.testProp      = function(prop){\n        return testProps([prop]);\n    };\n    /*>>testprop*/\n\n    /*>>testallprops*/\n    // Modernizr.testAllProps() investigates whether a given style property,\n    //   or any of its vendor-prefixed variants, is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testAllProps('boxSizing')\n    Modernizr.testAllProps  = testPropsAll;\n    /*>>testallprops*/\n\n\n    /*>>teststyles*/\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n    Modernizr.testStyles    = injectElementWithStyles;\n    /*>>teststyles*/\n\n\n    /*>>prefixed*/\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n    //\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\n    //\n    //     var transEndEventNames = {\n    //       'WebkitTransition' : 'webkitTransitionEnd',\n    //       'MozTransition'    : 'transitionend',\n    //       'OTransition'      : 'oTransitionEnd',\n    //       'msTransition'     : 'MSTransitionEnd',\n    //       'transition'       : 'transitionend'\n    //     },\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n    Modernizr.prefixed      = function(prop, obj, elem){\n      if(!obj) {\n        return testPropsAll(prop, 'pfx');\n      } else {\n        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n        return testPropsAll(prop, obj, elem);\n      }\n    };\n    /*>>prefixed*/\n\n\n    /*>>cssclasses*/\n    // Remove \"no-js\" class from <html> element, if it exists:\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n\n                            // Add the new classes to the <html> element.\n                            (enableClasses ? ' js ' + classes.join(' ') : '');\n    /*>>cssclasses*/\n\n    return Modernizr;\n\n})(this, this.document);\n\ndefine(\"modernizr\", function(){});\n\n","/*!\n * jQuery JavaScript Library v2.0.3\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2013-07-03T13:30Z\n */\n(function( window, undefined ) {\n\n// Can't do this because several apps including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n// Support: Firefox 18+\n//\"use strict\";\nvar\n\t// A central reference to the root jQuery(document)\n\trootjQuery,\n\n\t// The deferred used on DOM ready\n\treadyList,\n\n\t// Support: IE9\n\t// For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`\n\tcore_strundefined = typeof undefined,\n\n\t// Use the correct document accordingly with window argument (sandbox)\n\tlocation = window.location,\n\tdocument = window.document,\n\tdocElem = document.documentElement,\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$,\n\n\t// [[Class]] -> type pairs\n\tclass2type = {},\n\n\t// List of deleted data cache ids, so we can reuse them\n\tcore_deletedIds = [],\n\n\tcore_version = \"2.0.3\",\n\n\t// Save a reference to some core methods\n\tcore_concat = core_deletedIds.concat,\n\tcore_push = core_deletedIds.push,\n\tcore_slice = core_deletedIds.slice,\n\tcore_indexOf = core_deletedIds.indexOf,\n\tcore_toString = class2type.toString,\n\tcore_hasOwn = class2type.hasOwnProperty,\n\tcore_trim = core_version.trim,\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\treturn new jQuery.fn.init( selector, context, rootjQuery );\n\t},\n\n\t// Used for matching numbers\n\tcore_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\n\n\t// Used for splitting on whitespace\n\tcore_rnotwhite = /\\S+/g,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\t// Match a standalone tag\n\trsingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t},\n\n\t// The ready event handler and self cleanup method\n\tcompleted = function() {\n\t\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\t\twindow.removeEventListener( \"load\", completed, false );\n\t\tjQuery.ready();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: core_version,\n\n\tconstructor: jQuery,\n\tinit: function( selector, context, rootjQuery ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn rootjQuery.ready( selector );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t},\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn core_slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num == null ?\n\n\t\t\t// Return a 'clean' array\n\t\t\tthis.toArray() :\n\n\t\t\t// Return just the object\n\t\t\t( num < 0 ? this[ this.length + num ] : this[ num ] );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tready: function( fn ) {\n\t\t// Add the callback\n\t\tjQuery.ready.promise().done( fn );\n\n\t\treturn this;\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( core_slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: core_push,\n\tsort: [].sort,\n\tsplice: [].splice\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length === i ) {\n\t\ttarget = this;\n\t\t--i;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( core_version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\tnoConflict: function( deep ) {\n\t\tif ( window.$ === jQuery ) {\n\t\t\twindow.$ = _$;\n\t\t}\n\n\t\tif ( deep && window.jQuery === jQuery ) {\n\t\t\twindow.jQuery = _jQuery;\n\t\t}\n\n\t\treturn jQuery;\n\t},\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.trigger ) {\n\t\t\tjQuery( document ).trigger(\"ready\").off(\"ready\");\n\t\t}\n\t},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\treturn !isNaN( parseFloat(obj) ) && isFinite( obj );\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn String( obj );\n\t\t}\n\t\t// Support: Safari <= 5.1 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ core_toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Support: Firefox <20\n\t\t// The try/catch suppresses exceptions thrown when attempting to access\n\t\t// the \"constructor\" property of certain host objects, ie. |window.location|\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=814622\n\t\ttry {\n\t\t\tif ( obj.constructor &&\n\t\t\t\t\t!core_hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\t// data: string of html\n\t// context (optional): If specified, the fragment will be created in this context, defaults to document\n\t// keepScripts (optional): If true, will include scripts passed in the html string\n\tparseHTML: function( data, context, keepScripts ) {\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\t\tif ( typeof context === \"boolean\" ) {\n\t\t\tkeepScripts = context;\n\t\t\tcontext = false;\n\t\t}\n\t\tcontext = context || document;\n\n\t\tvar parsed = rsingleTag.exec( data ),\n\t\t\tscripts = !keepScripts && [];\n\n\t\t// Single tag\n\t\tif ( parsed ) {\n\t\t\treturn [ context.createElement( parsed[1] ) ];\n\t\t}\n\n\t\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\t\tif ( scripts ) {\n\t\t\tjQuery( scripts ).remove();\n\t\t}\n\n\t\treturn jQuery.merge( [], parsed.childNodes );\n\t},\n\n\tparseJSON: JSON.parse,\n\n\t// Cross-browser xml parsing\n\tparseXML: function( data ) {\n\t\tvar xml, tmp;\n\t\tif ( !data || typeof data !== \"string\" ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Support: IE9\n\t\ttry {\n\t\t\ttmp = new DOMParser();\n\t\t\txml = tmp.parseFromString( data , \"text/xml\" );\n\t\t} catch ( e ) {\n\t\t\txml = undefined;\n\t\t}\n\n\t\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\t\tjQuery.error( \"Invalid XML: \" + data );\n\t\t}\n\t\treturn xml;\n\t},\n\n\tnoop: function() {},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\ttrim: function( text ) {\n\t\treturn text == null ? \"\" : core_trim.call( text );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcore_push.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : core_indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar l = second.length,\n\t\t\ti = first.length,\n\t\t\tj = 0;\n\n\t\tif ( typeof l === \"number\" ) {\n\t\t\tfor ( ; j < l; j++ ) {\n\t\t\t\tfirst[ i++ ] = second[ j ];\n\t\t\t}\n\t\t} else {\n\t\t\twhile ( second[j] !== undefined ) {\n\t\t\t\tfirst[ i++ ] = second[ j++ ];\n\t\t\t}\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, inv ) {\n\t\tvar retVal,\n\t\t\tret = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length;\n\t\tinv = !!inv;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tretVal = !!callback( elems[ i ], i );\n\t\t\tif ( inv !== retVal ) {\n\t\t\t\tret.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret[ ret.length ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn core_concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = core_slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\t// Multifunctional method to get and set values of a collection\n\t// The value/s can optionally be executed if it's a function\n\taccess: function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\t\tvar i = 0,\n\t\t\tlength = elems.length,\n\t\t\tbulk = key == null;\n\n\t\t// Sets many values\n\t\tif ( jQuery.type( key ) === \"object\" ) {\n\t\t\tchainable = true;\n\t\t\tfor ( i in key ) {\n\t\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t\t}\n\n\t\t// Sets one value\n\t\t} else if ( value !== undefined ) {\n\t\t\tchainable = true;\n\n\t\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\t\traw = true;\n\t\t\t}\n\n\t\t\tif ( bulk ) {\n\t\t\t\t// Bulk operations run against the entire set\n\t\t\t\tif ( raw ) {\n\t\t\t\t\tfn.call( elems, value );\n\t\t\t\t\tfn = null;\n\n\t\t\t\t// ...except when executing function values\n\t\t\t\t} else {\n\t\t\t\t\tbulk = fn;\n\t\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( fn ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn chainable ?\n\t\t\telems :\n\n\t\t\t// Gets\n\t\t\tbulk ?\n\t\t\t\tfn.call( elems ) :\n\t\t\t\tlength ? fn( elems[0], key ) : emptyGet;\n\t},\n\n\tnow: Date.now,\n\n\t// A method for quickly swapping in/out CSS properties to get correct calculations.\n\t// Note: this method belongs to the css module but it's needed here for the support module.\n\t// If support gets modularized, this method should be moved back to the css module.\n\tswap: function( elem, options, callback, args ) {\n\t\tvar ret, name,\n\t\t\told = {};\n\n\t\t// Remember the old values, and insert the new ones\n\t\tfor ( name in options ) {\n\t\t\told[ name ] = elem.style[ name ];\n\t\t\telem.style[ name ] = options[ name ];\n\t\t}\n\n\t\tret = callback.apply( elem, args || [] );\n\n\t\t// Revert the old values\n\t\tfor ( name in options ) {\n\t\t\telem.style[ name ] = old[ name ];\n\t\t}\n\n\t\treturn ret;\n\t}\n});\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || type !== \"function\" &&\n\t\t( length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\n}\n\n// All jQuery objects should point back to these\nrootjQuery = jQuery(document);\n/*!\n * Sizzle CSS Selector Engine v1.9.4-pre\n * http://sizzlejs.com/\n *\n * Copyright 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2013-06-03\n */\n(function( window, undefined ) {\n\nvar i,\n\tsupport,\n\tcachedruns,\n\tExpr,\n\tgetText,\n\tisXML,\n\tcompile,\n\toutermostContext,\n\tsortInput,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + -(new Date()),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\thasDuplicate = false,\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tstrundefined = typeof undefined,\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf if we can't use a native one\n\tindexOf = arr.indexOf || function( elem ) {\n\t\tvar i = 0,\n\t\t\tlen = this.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( this[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")\" + whitespace +\n\t\t\"*(?:([*^$|!~]?=)\" + whitespace + \"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\" + identifier + \")|)|)\" + whitespace + \"*\\\\]\",\n\n\t// Prefer arguments quoted,\n\t//   then not containing pseudos/brackets,\n\t//   then attribute selectors/non-parenthetical expressions,\n\t//   then anything else\n\t// These preferences are here to reduce the number of selectors\n\t//   needing tokenize in the PSEUDO preFilter\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes.replace( 3, 8 ) + \")*)|.*)\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trsibling = new RegExp( whitespace + \"*[+~]\" ),\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\t// BMP codepoint\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\n\tif ( !selector || typeof selector !== \"string\" ) {\n\t\treturn results;\n\t}\n\n\tif ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\n\t\treturn [];\n\t}\n\n\tif ( documentIsHTML && !seed ) {\n\n\t\t// Shortcuts\n\t\tif ( (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType === 9 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && context.parentNode || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key += \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect xml\n * @param {Element|Object} elem An element or a document\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar doc = node ? node.ownerDocument || node : preferredDoc,\n\t\tparent = doc.defaultView;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\n\t// Support tests\n\tdocumentIsHTML = !isXML( doc );\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent.attachEvent && parent !== parent.top ) {\n\t\tparent.attachEvent( \"onbeforeunload\", function() {\n\t\t\tsetDocument();\n\t\t});\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Check if getElementsByClassName can be trusted\n\tsupport.getElementsByClassName = assert(function( div ) {\n\t\tdiv.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n\n\t\t// Support: Safari<4\n\t\t// Catch class over-caching\n\t\tdiv.firstChild.className = \"i\";\n\t\t// Support: Opera<10\n\t\t// Catch gEBCN failure to find non-leading classes\n\t\treturn div.getElementsByClassName(\"i\").length === 2;\n\t});\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== strundefined && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [m] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== strundefined ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\t\t\t}\n\t\t} :\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdiv.innerHTML = \"<select><option selected=''></option></select>\";\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\n\t\t\t// Support: Opera 10-12/IE8\n\t\t\t// ^= $= *= and empty values\n\t\t\t// Should not select anything\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type attribute is restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"t\", \"\" );\n\n\t\t\tif ( div.querySelectorAll(\"[t^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = docElem.compareDocumentPosition ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );\n\n\t\tif ( compare ) {\n\t\t\t// Disconnected nodes\n\t\t\tif ( compare & 1 ||\n\t\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t\tif ( a === doc || contains(preferredDoc, a) ) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif ( b === doc || contains(preferredDoc, b) ) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\t// Maintain original order\n\t\t\t\treturn sortInput ?\n\t\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t\t0;\n\t\t\t}\n\n\t\t\treturn compare & 4 ? -1 : 1;\n\t\t}\n\n\t\t// Not directly comparable, sort on existence of method\n\t\treturn a.compareDocumentPosition ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\t} else if ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch(e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [elem] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val === undefined ?\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull :\n\t\tval;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\tfor ( ; (node = elem[i]); i++ ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (see #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[5] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] && match[4] !== undefined ) {\n\t\t\t\tmatch[2] = match[4];\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf.call( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),\n\t\t\t//   not comment, processing instructions, or others\n\t\t\t// Thanks to Diego Perini for the nodeName shortcut\n\t\t\t//   Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeName > \"@\" || elem.nodeType === 3 || elem.nodeType === 4 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\t// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)\n\t\t\t// use getAttribute instead to test this case\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === elem.type );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\nfunction tokenize( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( tokens = [] );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n}\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar data, cache, outerCache,\n\t\t\t\tdirkey = dirruns + \" \" + doneName;\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {\n\t\t\t\t\t\t\tif ( (data = cache[1]) === true || data === cachedruns ) {\n\t\t\t\t\t\t\t\treturn data === true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcache = outerCache[ dir ] = [ dirkey ];\n\t\t\t\t\t\t\tcache[1] = matcher( elem, context, xml ) || cachedruns;\n\t\t\t\t\t\t\tif ( cache[1] === true ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf.call( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\treturn ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\t// A counter to specify which element is currently being matched\n\tvar matcherCachedRuns = 0,\n\t\tbySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, expandContext ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tsetMatched = [],\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\toutermost = expandContext != null,\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", expandContext && context.parentNode || context ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t\tcachedruns = matcherCachedRuns;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t\tcachedruns = ++matcherCachedRuns;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !group ) {\n\t\t\tgroup = tokenize( selector );\n\t\t}\n\t\ti = group.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( group[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\t}\n\treturn cached;\n};\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction select( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tmatch = tokenize( selector );\n\n\tif ( !seed ) {\n\t\t// Try to minimize operations if there is only one group\n\t\tif ( match.length === 1 ) {\n\n\t\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\t\ttokens = match[0] = match[0].slice( 0 );\n\t\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\t\tif ( !context ) {\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t\t}\n\n\t\t\t// Fetch a seed set for right-to-left matching\n\t\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\ttoken = tokens[i];\n\n\t\t\t\t// Abort if we hit a combinator\n\t\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\t\tif ( (seed = find(\n\t\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\t\trsibling.test( tokens[0].type ) && context.parentNode || context\n\t\t\t\t\t)) ) {\n\n\t\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\tcompile( selector, match )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector )\n\t);\n\treturn results;\n}\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome<14\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn (val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\telem[ name ] === true ? name.toLowerCase() : null;\n\t\t}\n\t});\n}\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n})( window );\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar action = tuple[ 0 ],\n\t\t\t\t\t\t\t\tfn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ action + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = core_slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;\n\t\t\t\t\tif( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\njQuery.support = (function( support ) {\n\tvar input = document.createElement(\"input\"),\n\t\tfragment = document.createDocumentFragment(),\n\t\tdiv = document.createElement(\"div\"),\n\t\tselect = document.createElement(\"select\"),\n\t\topt = select.appendChild( document.createElement(\"option\") );\n\n\t// Finish early in limited environments\n\tif ( !input.type ) {\n\t\treturn support;\n\t}\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n\t// Check the default checkbox/radio value (\"\" on old WebKit; \"on\" elsewhere)\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Must access the parent to make an option select properly\n\t// Support: IE9, IE10\n\tsupport.optSelected = opt.selected;\n\n\t// Will be defined later\n\tsupport.reliableMarginRight = true;\n\tsupport.boxSizingReliable = true;\n\tsupport.pixelPosition = false;\n\n\t// Make sure checked status is properly cloned\n\t// Support: IE9, IE10\n\tinput.checked = true;\n\tsupport.noCloneChecked = input.cloneNode( true ).checked;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Check if an input maintains its value after becoming a radio\n\t// Support: IE9, IE10\n\tinput = document.createElement(\"input\");\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\tinput.setAttribute( \"checked\", \"t\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tfragment.appendChild( input );\n\n\t// Support: Safari 5.1, Android 4.x, Android 2.3\n\t// old WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: Firefox, Chrome, Safari\n\t// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)\n\tsupport.focusinBubbles = \"onfocusin\" in window;\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\t// Run tests that need a body at doc ready\n\tjQuery(function() {\n\t\tvar container, marginDiv,\n\t\t\t// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).\n\t\t\tdivReset = \"padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box\",\n\t\t\tbody = document.getElementsByTagName(\"body\")[ 0 ];\n\n\t\tif ( !body ) {\n\t\t\t// Return for frameset docs that don't have a body\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer = document.createElement(\"div\");\n\t\tcontainer.style.cssText = \"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\";\n\n\t\t// Check box-sizing and margin behavior.\n\t\tbody.appendChild( container ).appendChild( div );\n\t\tdiv.innerHTML = \"\";\n\t\t// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).\n\t\tdiv.style.cssText = \"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%\";\n\n\t\t// Workaround failing boxSizing test due to offsetWidth returning wrong value\n\t\t// with some non-1 values of body zoom, ticket #13543\n\t\tjQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {\n\t\t\tsupport.boxSizing = div.offsetWidth === 4;\n\t\t});\n\n\t\t// Use window.getComputedStyle because jsdom on node.js will break without it.\n\t\tif ( window.getComputedStyle ) {\n\t\t\tsupport.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== \"1%\";\n\t\t\tsupport.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: \"4px\" } ).width === \"4px\";\n\n\t\t\t// Support: Android 2.3\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\tmarginDiv = div.appendChild( document.createElement(\"div\") );\n\t\t\tmarginDiv.style.cssText = div.style.cssText = divReset;\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\tdiv.style.width = \"1px\";\n\n\t\t\tsupport.reliableMarginRight =\n\t\t\t\t!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );\n\t\t}\n\n\t\tbody.removeChild( container );\n\t});\n\n\treturn support;\n})( {} );\n\n/*\n\tImplementation Summary\n\n\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t2. Improve the module's maintainability by reducing the storage\n\t\tpaths to a single mechanism.\n\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n*/\nvar data_user, data_priv,\n\trbrace = /(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction Data() {\n\t// Support: Android < 4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Math.random();\n}\n\nData.uid = 1;\n\nData.accepts = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType ?\n\t\towner.nodeType === 1 || owner.nodeType === 9 : true;\n};\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android < 4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( core_rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\n\n// These may be used throughout the jQuery core codebase\ndata_user = new Data();\ndata_priv = new Data();\n\n\njQuery.extend({\n\tacceptData: Data.accepts,\n\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar attrs, name,\n\t\t\telem = this[ 0 ],\n\t\t\ti = 0,\n\t\t\tdata = null;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\tattrs = elem.attributes;\n\t\t\t\t\tfor ( ; i < attrs.length; i++ ) {\n\t\t\t\t\t\tname = attrs[ i ].name;\n\n\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? JSON.parse( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tdelay: function( time, type ) {\n\t\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\t\ttype = type || \"fx\";\n\n\t\treturn this.queue( type, function( next, hooks ) {\n\t\t\tvar timeout = setTimeout( next, time );\n\t\t\thooks.stop = function() {\n\t\t\t\tclearTimeout( timeout );\n\t\t\t};\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar nodeHook, boolHook,\n\trclass = /[\\t\\r\\n\\f]/g,\n\trreturn = /\\r/g,\n\trfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t},\n\n\tprop: function( name, value ) {\n\t\treturn jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t},\n\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = jQuery.trim( cur );\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j,\n\t\t\ti = 0,\n\t\t\tlen = this.length,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telem.className = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( core_rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === core_strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map(val, function ( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\t// attributes.value is undefined in Blackberry 4.7 but\n\t\t\t\t// uses .value. See #6932\n\t\t\t\tvar val = elem.attributes.value;\n\t\t\t\treturn !val || val.specified ? elem.value : elem.text;\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( jQuery.support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t},\n\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === core_strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( core_rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !jQuery.support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\") ) {\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;\n\n\tjQuery.expr.attrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar fn = jQuery.expr.attrHandle[ name ],\n\t\t\tret = isXML ?\n\t\t\t\tundefined :\n\t\t\t\t/* jshint eqeqeq: false */\n\t\t\t\t// Temporarily disable this handler to check existence\n\t\t\t\t(jQuery.expr.attrHandle[ name ] = undefined) !=\n\t\t\t\t\tgetter( elem, name, isXML ) ?\n\n\t\t\t\t\tname.toLowerCase() :\n\t\t\t\t\tnull;\n\n\t\t// Restore handler\n\t\tjQuery.expr.attrHandle[ name ] = fn;\n\n\t\treturn ret;\n\t};\n});\n\n// Support: IE9+\n// Selectedness for an option in an optgroup can be inaccurate\nif ( !jQuery.support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !jQuery.support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t// Support: Webkit\n\t\t\t// \"\" is returned instead of \"on\" if a value isn't specified\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\nvar rkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?\n\t\t\t\t\tjQuery.event.dispatch.apply( eventHandle.elem, arguments ) :\n\t\t\t\t\tundefined;\n\t\t\t};\n\t\t\t// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events\n\t\t\teventHandle.elem = elem;\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = core_hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = core_hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = core_slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome < 28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = ( src.defaultPrevented ||\n\t\t\tsrc.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Create \"bubbling\" focus and blur events\n// Support: Firefox, Chrome, Safari\nif ( !jQuery.support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler while someone wants focusin/focusout\n\t\tvar attaches = 0,\n\t\t\thandler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tif ( attaches++ === 0 ) {\n\t\t\t\t\tdocument.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tif ( --attaches === 0 ) {\n\t\t\t\t\tdocument.removeEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\nvar isSimple = /^.[^:#\\[\\.,]*$/,\n\trparentsprev = /^(?:parents|prev(?:Until|All))/,\n\trneedsContext = jQuery.expr.match.needsContext,\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tret = [],\n\t\t\tself = this,\n\t\t\tlen = self.length;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = ( rneedsContext.test( selectors ) || typeof selectors !== \"string\" ) ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tcur = matched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn core_indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn core_indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\tvar set = typeof selector === \"string\" ?\n\t\t\t\tjQuery( selector, context ) :\n\t\t\t\tjQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),\n\t\t\tall = jQuery.merge( this.get(), set );\n\n\t\treturn this.pushStack( jQuery.unique(all) );\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\n\njQuery.extend({\n\tfilter: function( expr, elems, not ) {\n\t\tvar elem = elems[ 0 ];\n\n\t\tif ( not ) {\n\t\t\texpr = \":not(\" + expr + \")\";\n\t\t}\n\n\t\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\t\treturn elem.nodeType === 1;\n\t\t\t}));\n\t},\n\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( isSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( core_indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\nvar rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\tmanipulation_rcheckableType = /^(?:checkbox|radio)$/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE 9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE 9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().append( ( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value ) );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\t// keepData is for internal use only--do not document\n\tremove: function( selector, keepData ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function () {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn jQuery.access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar\n\t\t\t// Snapshot the DOM in case .domManip sweeps something relevant into its fragment\n\t\t\targs = jQuery.map( this, function( elem ) {\n\t\t\t\treturn [ elem.nextSibling, elem.parentNode ];\n\t\t\t}),\n\t\t\ti = 0;\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\tvar next = args[ i++ ],\n\t\t\t\tparent = args[ i++ ];\n\n\t\t\tif ( parent ) {\n\t\t\t\t// Don't use the snapshot next if it has moved (#13810)\n\t\t\t\tif ( next && next.parentNode !== parent ) {\n\t\t\t\t\tnext = this.nextSibling;\n\t\t\t\t}\n\t\t\t\tjQuery( this ).remove();\n\t\t\t\tparent.insertBefore( elem, next );\n\t\t\t}\n\t\t// Allow new content to include elements from the context set\n\t\t}, true );\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn i ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback, allowIntersection ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = core_concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction || !( l <= 1 || typeof value !== \"string\" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback, allowIntersection );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Hope ajax is available...\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because core_push.apply(_, arraylike) throws\n\t\t\tcore_push.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Support: IE >= 9\n\t\t// Fix Cloning issues\n\t\tif ( !jQuery.support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\ti = 0,\n\t\t\tl = elems.length,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [];\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [\"\", \"\"] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because core_push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Fixes #12346\n\t\t\t\t\t// Support: Webkit, IE\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, events, type, key, j,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( Data.accepts( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tevents = Object.keys( data.events || {} );\n\t\t\t\t\tif ( events.length ) {\n\t\t\t\t\t\tfor ( j = 0; (type = events[j]) !== undefined; j++ ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t},\n\n\t_evalUrl: function( url ) {\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: \"GET\",\n\t\t\tdataType: \"script\",\n\t\t\tasync: false,\n\t\t\tglobal: false,\n\t\t\t\"throws\": true\n\t\t});\n\t}\n});\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar l = elems.length,\n\t\ti = 0;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Support: IE >= 9\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && manipulation_rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\nvar curCSS, iframe,\n\t// swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trmargin = /^margin/,\n\trnumsplit = new RegExp( \"^(\" + core_pnum + \")(.*)$\", \"i\" ),\n\trnumnonpx = new RegExp( \"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + core_pnum + \")\", \"i\" ),\n\telemdisplay = { BODY: \"block\" },\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: 0,\n\t\tfontWeight: 400\n\t},\n\n\tcssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ],\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name.charAt(0).toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction isHidden( elem, el ) {\n\t// isHidden might be called from jQuery#filter function;\n\t// in that case, element will be second argument\n\telem = el || elem;\n\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n}\n\n// NOTE: we've included the \"window\" in window.getComputedStyle\n// because jsdom on node.js will break without it.\nfunction getStyles( elem ) {\n\treturn window.getComputedStyle( elem, null );\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", css_defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\n\t\t\tif ( !values[ index ] ) {\n\t\t\t\thidden = isHidden( elem );\n\n\t\t\t\tif ( display && display !== \"none\" || !hidden ) {\n\t\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css(elem, \"display\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn jQuery.access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t// normalize float css property\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that NaN and null values aren't set. See: #7116\n\t\t\tif ( value == null || type === \"number\" && isNaN( value ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,\n\t\t\t// but it would mean to define eight (for every problematic property) identical functions\n\t\t\tif ( !jQuery.support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\ncurCSS = function( elem, name, _computed ) {\n\tvar width, minWidth, maxWidth,\n\t\tcomputed = _computed || getStyles( elem ),\n\n\t\t// Support: IE9\n\t\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\t\tret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,\n\t\tstyle = elem.style;\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: Safari 5.1\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\n// Try to determine the default display value of an element\nfunction css_defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = ( iframe ||\n\t\t\t\tjQuery(\"<iframe frameborder='0' width='0' height='0'/>\")\n\t\t\t\t.css( \"cssText\", \"display:block !important\" )\n\t\t\t).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;\n\t\t\tdoc.write(\"<!doctype html><html><body>\");\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\n\n// Called ONLY from within css_defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\t\tdisplay = jQuery.css( elem[0], \"display\" );\n\telem.remove();\n\treturn display;\n}\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, \"display\" ) ) ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// These hooks cannot be added until DOM ready because the support test\n// for it is not run until after DOM ready\njQuery(function() {\n\t// Support: Android 2.3\n\tif ( !jQuery.support.reliableMarginRight ) {\n\t\tjQuery.cssHooks.marginRight = {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// Support: Android 2.3\n\t\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t\t// Work around by temporarily setting element display to inline-block\n\t\t\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n\t// getComputedStyle returns percent when specified for top/left/bottom/right\n\t// rather than make the css module depend on the offset module, we just check for it here\n\tif ( !jQuery.support.pixelPosition && jQuery.fn.position ) {\n\t\tjQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\t\t\tjQuery.cssHooks[ prop ] = {\n\t\t\t\tget: function( elem, computed ) {\n\t\t\t\t\tif ( computed ) {\n\t\t\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\t\t\tcomputed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n\n});\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.hidden = function( elem ) {\n\t\t// Support: Opera <= 12.12\n\t\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\t\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n\t};\n\n\tjQuery.expr.filters.visible = function( elem ) {\n\t\treturn !jQuery.expr.filters.hidden( elem );\n\t};\n}\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\tvar type = this.type;\n\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !manipulation_rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ){\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ){\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n//Serialize an array of form elements or a set of\n//key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\nvar\n\t// Document location\n\tajaxLocParts,\n\tajaxLocation,\n\n\tajax_nonce = jQuery.now(),\n\n\tajax_rquery = /\\?/,\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t// Keep a copy of the old load method\n\t_load = jQuery.fn.load,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat(\"*\");\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n\tajaxLocation = location.href;\n} catch( e ) {\n\t// Use the href attribute of an A element\n\t// since IE will modify it given document.location\n\tajaxLocation = document.createElement( \"a\" );\n\tajaxLocation.href = \"\";\n\tajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = url.slice( off );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ){\n\tjQuery.fn[ type ] = function( fn ){\n\t\treturn this.on( type, fn );\n\t};\n});\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( core_rnotwhite ) || [\"\"];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\tfireGlobals = s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + ajax_nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( ajax_rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ajax_nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( ajax_nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( ajax_rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrSupported = jQuery.ajaxSettings.xhr(),\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\t// Support: IE9\n\t// We need to keep track of outbound xhr and abort them manually\n\t// because IE is not smart enough to do it all by itself\n\txhrId = 0,\n\txhrCallbacks = {};\n\nif ( window.ActiveXObject ) {\n\tjQuery( window ).on( \"unload\", function() {\n\t\tfor( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t\txhrCallbacks = undefined;\n\t});\n}\n\njQuery.support.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\njQuery.support.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( jQuery.support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i, id,\n\t\t\t\t\txhr = options.xhr();\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file protocol always yields status 0, assume 404\n\t\t\t\t\t\t\t\t\txhr.status || 404,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// #11426: When requesting binary data, IE9 will throw an exception\n\t\t\t\t\t\t\t\t\t// on any attempt to access responseText\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[( id = xhrId++ )] = callback(\"abort\");\n\t\t\t\t// Do send the request\n\t\t\t\t// This may raise an exception which is actually\n\t\t\t\t// handled in jQuery.ajax (so no try/catch here)\n\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\nvar fxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + core_pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n\t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t}]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// we're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tif ( jQuery.css( elem, \"display\" ) === \"inline\" &&\n\t\t\t\tjQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\tattrs = { height: type },\n\t\ti = 0;\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth? 1 : 0;\n\tfor( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p*Math.PI ) / 2;\n\t}\n};\n\njQuery.timers = [];\njQuery.fx = Tween.prototype.init;\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ttimers = jQuery.timers,\n\t\ti = 0;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tif ( timer() && jQuery.timers.push( timer ) ) {\n\t\tjQuery.fx.start();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\nif ( jQuery.expr && jQuery.expr.filters ) {\n\tjQuery.expr.filters.animated = function( elem ) {\n\t\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\t\treturn elem === fn.elem;\n\t\t}).length;\n\t};\n}\njQuery.fn.offset = function( options ) {\n\tif ( arguments.length ) {\n\t\treturn options === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function( i ) {\n\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t});\n\t}\n\n\tvar docElem, win,\n\t\telem = this[ 0 ],\n\t\tbox = { top: 0, left: 0 },\n\t\tdoc = elem && elem.ownerDocument;\n\n\tif ( !doc ) {\n\t\treturn;\n\t}\n\n\tdocElem = doc.documentElement;\n\n\t// Make sure it's not a disconnected DOM node\n\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\treturn box;\n\t}\n\n\t// If we don't have gBCR, just use 0,0 rather than error\n\t// BlackBerry 5, iOS 3 (original iPhone)\n\tif ( typeof elem.getBoundingClientRect !== core_strundefined ) {\n\t\tbox = elem.getBoundingClientRect();\n\t}\n\twin = getWindow( doc );\n\treturn {\n\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t};\n};\n\njQuery.offset = {\n\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) && ( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\n\njQuery.fn.extend({\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// We assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\") === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n\n// Create scrollLeft and scrollTop methods\njQuery.each( {scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\"}, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn jQuery.access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn jQuery.access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n// Limit scope pollution from any deprecated API\n// (function() {\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n// })();\nif ( typeof module === \"object\" && module && typeof module.exports === \"object\" ) {\n\t// Expose jQuery as module.exports in loaders that implement the Node\n\t// module pattern (including browserify). Do not create the global, since\n\t// the user will be storing it themselves locally, and globals are frowned\n\t// upon in the Node module world.\n\tmodule.exports = jQuery;\n} else {\n\t// Register as a named AMD module, since jQuery can be concatenated with other\n\t// files that may use define, but not via a proper concatenation script that\n\t// understands anonymous AMD modules. A named AMD is safest and most robust\n\t// way to register. Lowercase jquery is used because AMD module names are\n\t// derived from file names, and jQuery is normally delivered in a lowercase\n\t// file name. Do this after creating the global so that if an AMD module wants\n\t// to call noConflict to hide this version of jQuery, it will work.\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine( \"jquery\", [], function () { return jQuery; } );\n\t}\n}\n\n// If there is a window object, that at least has a document property,\n// define jQuery and $ identifiers\nif ( typeof window === \"object\" && typeof window.document === \"object\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n})( window );\n\n","/*! JSON v3.2.6 | http://bestiejs.github.io/json3 | Copyright 2012-2013, Kit Cambridge | http://kit.mit-license.org */\n;(function (window) {\n  // Convenience aliases.\n  var getClass = {}.toString, isProperty, forEach, undef;\n\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // Detect native implementations.\n  var nativeJSON = typeof JSON == \"object\" && JSON;\n\n  // Set up the JSON 3 namespace, preferring the CommonJS `exports` object if\n  // available.\n  var JSON3 = typeof exports == \"object\" && exports && !exports.nodeType && exports;\n\n  if (JSON3 && nativeJSON) {\n    // Explicitly delegate to the native `stringify` and `parse`\n    // implementations in CommonJS environments.\n    JSON3.stringify = nativeJSON.stringify;\n    JSON3.parse = nativeJSON.parse;\n  } else {\n    // Export for web browsers, JavaScript engines, and asynchronous module\n    // loaders, using the global `JSON` object if available.\n    JSON3 = window.JSON = nativeJSON || {};\n  }\n\n  // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n  var isExtended = new Date(-3509827334573292);\n  try {\n    // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n    // results for certain dates in Opera >= 10.53.\n    isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n      // Safari < 2.0.2 stores the internal millisecond time value correctly,\n      // but clips the values returned by the date methods to the range of\n      // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n      isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n  } catch (exception) {}\n\n  // Internal: Determines whether the native `JSON.stringify` and `parse`\n  // implementations are spec-compliant. Based on work by Ken Snyder.\n  function has(name) {\n    if (has[name] !== undef) {\n      // Return cached feature test result.\n      return has[name];\n    }\n\n    var isSupported;\n    if (name == \"bug-string-char-index\") {\n      // IE <= 7 doesn't support accessing string characters using square\n      // bracket notation. IE 8 only supports this for primitives.\n      isSupported = \"a\"[0] != \"a\";\n    } else if (name == \"json\") {\n      // Indicates whether both `JSON.stringify` and `JSON.parse` are\n      // supported.\n      isSupported = has(\"json-stringify\") && has(\"json-parse\");\n    } else {\n      var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n      // Test `JSON.stringify`.\n      if (name == \"json-stringify\") {\n        var stringify = JSON3.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n        if (stringifySupported) {\n          // A test function object with a custom `toJSON` method.\n          (value = function () {\n            return 1;\n          }).toJSON = value;\n          try {\n            stringifySupported =\n              // Firefox 3.1b1 and b2 serialize string, number, and boolean\n              // primitives as object literals.\n              stringify(0) === \"0\" &&\n              // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n              // literals.\n              stringify(new Number()) === \"0\" &&\n              stringify(new String()) == '\"\"' &&\n              // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n              // does not define a canonical JSON representation (this applies to\n              // objects with `toJSON` properties as well, *unless* they are nested\n              // within an object or array).\n              stringify(getClass) === undef &&\n              // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n              // FF 3.1b3 pass this test.\n              stringify(undef) === undef &&\n              // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n              // respectively, if the value is omitted entirely.\n              stringify() === undef &&\n              // FF 3.1b1, 2 throw an error if the given value is not a number,\n              // string, array, object, Boolean, or `null` literal. This applies to\n              // objects with custom `toJSON` methods as well, unless they are nested\n              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n              // methods entirely.\n              stringify(value) === \"1\" &&\n              stringify([value]) == \"[1]\" &&\n              // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n              // `\"[null]\"`.\n              stringify([undef]) == \"[null]\" &&\n              // YUI 3.0.0b1 fails to serialize `null` literals.\n              stringify(null) == \"null\" &&\n              // FF 3.1b1, 2 halts serialization if an array contains a function:\n              // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n              // elides non-JSON values from objects and arrays, unless they\n              // define custom `toJSON` methods.\n              stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n              // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n              // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n              stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n              // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n              stringify(null, value) === \"1\" &&\n              stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n              // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n              // serialize extended years.\n              stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n              // The milliseconds are optional in ES 5, but required in 5.1.\n              stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n              // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n              // four-digit years instead of six-digit years. Credits: @Yaffle.\n              stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n              // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n              // values less than 1000. Credits: @Yaffle.\n              stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n          } catch (exception) {\n            stringifySupported = false;\n          }\n        }\n        isSupported = stringifySupported;\n      }\n      // Test `JSON.parse`.\n      if (name == \"json-parse\") {\n        var parse = JSON3.parse;\n        if (typeof parse == \"function\") {\n          try {\n            // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n            // Conforming implementations should also coerce the initial argument to\n            // a string prior to parsing.\n            if (parse(\"0\") === 0 && !parse(false)) {\n              // Simple parsing test.\n              value = parse(serialized);\n              var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n              if (parseSupported) {\n                try {\n                  // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                  parseSupported = !parse('\"\\t\"');\n                } catch (exception) {}\n                if (parseSupported) {\n                  try {\n                    // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                    // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                    // certain octal literals.\n                    parseSupported = parse(\"01\") !== 1;\n                  } catch (exception) {}\n                }\n                if (parseSupported) {\n                  try {\n                    // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                    // points. These environments, along with FF 3.1b1 and 2,\n                    // also allow trailing commas in JSON objects and arrays.\n                    parseSupported = parse(\"1.\") !== 1;\n                  } catch (exception) {}\n                }\n              }\n            }\n          } catch (exception) {\n            parseSupported = false;\n          }\n        }\n        isSupported = parseSupported;\n      }\n    }\n    return has[name] = !!isSupported;\n  }\n\n  if (!has(\"json\")) {\n    // Common `[[Class]]` name aliases.\n    var functionClass = \"[object Function]\";\n    var dateClass = \"[object Date]\";\n    var numberClass = \"[object Number]\";\n    var stringClass = \"[object String]\";\n    var arrayClass = \"[object Array]\";\n    var booleanClass = \"[object Boolean]\";\n\n    // Detect incomplete support for accessing string characters by index.\n    var charIndexBuggy = has(\"bug-string-char-index\");\n\n    // Define additional utility methods if the `Date` methods are buggy.\n    if (!isExtended) {\n      var floor = Math.floor;\n      // A mapping between the months of the year and the number of days between\n      // January 1st and the first of the respective month.\n      var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n      // Internal: Calculates the number of days between the Unix epoch and the\n      // first day of the given month.\n      var getDay = function (year, month) {\n        return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n      };\n    }\n\n    // Internal: Determines if a property is a direct property of the given\n    // object. Delegates to the native `Object#hasOwnProperty` method.\n    if (!(isProperty = {}.hasOwnProperty)) {\n      isProperty = function (property) {\n        var members = {}, constructor;\n        if ((members.__proto__ = null, members.__proto__ = {\n          // The *proto* property cannot be set multiple times in recent\n          // versions of Firefox and SeaMonkey.\n          \"toString\": 1\n        }, members).toString != getClass) {\n          // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n          // supports the mutable *proto* property.\n          isProperty = function (property) {\n            // Capture and break the object's prototype chain (see section 8.6.2\n            // of the ES 5.1 spec). The parenthesized expression prevents an\n            // unsafe transformation by the Closure Compiler.\n            var original = this.__proto__, result = property in (this.__proto__ = null, this);\n            // Restore the original prototype chain.\n            this.__proto__ = original;\n            return result;\n          };\n        } else {\n          // Capture a reference to the top-level `Object` constructor.\n          constructor = members.constructor;\n          // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n          // other environments.\n          isProperty = function (property) {\n            var parent = (this.constructor || constructor).prototype;\n            return property in this && !(property in parent && this[property] === parent[property]);\n          };\n        }\n        members = null;\n        return isProperty.call(this, property);\n      };\n    }\n\n    // Internal: A set of primitive types used by `isHostType`.\n    var PrimitiveTypes = {\n      'boolean': 1,\n      'number': 1,\n      'string': 1,\n      'undefined': 1\n    };\n\n    // Internal: Determines if the given object `property` value is a\n    // non-primitive.\n    var isHostType = function (object, property) {\n      var type = typeof object[property];\n      return type == 'object' ? !!object[property] : !PrimitiveTypes[type];\n    };\n\n    // Internal: Normalizes the `for...in` iteration algorithm across\n    // environments. Each enumerated key is yielded to a `callback` function.\n    forEach = function (object, callback) {\n      var size = 0, Properties, members, property;\n\n      // Tests for bugs in the current environment's `for...in` algorithm. The\n      // `valueOf` property inherits the non-enumerable flag from\n      // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n      (Properties = function () {\n        this.valueOf = 0;\n      }).prototype.valueOf = 0;\n\n      // Iterate over a new instance of the `Properties` class.\n      members = new Properties();\n      for (property in members) {\n        // Ignore all properties inherited from `Object.prototype`.\n        if (isProperty.call(members, property)) {\n          size++;\n        }\n      }\n      Properties = members = null;\n\n      // Normalize the iteration algorithm.\n      if (!size) {\n        // A list of non-enumerable properties inherited from `Object.prototype`.\n        members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n        // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n        // properties.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, length;\n          var hasProperty = !isFunction && typeof object.constructor != 'function' && isHostType(object, 'hasOwnProperty') ? object.hasOwnProperty : isProperty;\n          for (property in object) {\n            // Gecko <= 1.0 enumerates the `prototype` property of functions under\n            // certain conditions; IE does not.\n            if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for each non-enumerable property.\n          for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n        };\n      } else if (size == 2) {\n        // Safari <= 2.0.4 enumerates shadowed properties twice.\n        forEach = function (object, callback) {\n          // Create a set of iterated properties.\n          var members = {}, isFunction = getClass.call(object) == functionClass, property;\n          for (property in object) {\n            // Store each property name to prevent double enumeration. The\n            // `prototype` property of functions is not enumerated due to cross-\n            // environment inconsistencies.\n            if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n              callback(property);\n            }\n          }\n        };\n      } else {\n        // No bugs detected; use the standard `for...in` algorithm.\n        forEach = function (object, callback) {\n          var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n          for (property in object) {\n            if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n              callback(property);\n            }\n          }\n          // Manually invoke the callback for the `constructor` property due to\n          // cross-environment inconsistencies.\n          if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n            callback(property);\n          }\n        };\n      }\n      return forEach(object, callback);\n    };\n\n    // Public: Serializes a JavaScript `value` as a JSON string. The optional\n    // `filter` argument may specify either a function that alters how object and\n    // array members are serialized, or an array of strings and numbers that\n    // indicates which properties should be serialized. The optional `width`\n    // argument may be either a string or number that specifies the indentation\n    // level of the output.\n    if (!has(\"json-stringify\")) {\n      // Internal: A map of control characters and their escaped equivalents.\n      var Escapes = {\n        92: \"\\\\\\\\\",\n        34: '\\\\\"',\n        8: \"\\\\b\",\n        12: \"\\\\f\",\n        10: \"\\\\n\",\n        13: \"\\\\r\",\n        9: \"\\\\t\"\n      };\n\n      // Internal: Converts `value` into a zero-padded string such that its\n      // length is at least equal to `width`. The `width` must be <= 6.\n      var leadingZeroes = \"000000\";\n      var toPaddedString = function (width, value) {\n        // The `|| 0` expression is necessary to work around a bug in\n        // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n        return (leadingZeroes + (value || 0)).slice(-width);\n      };\n\n      // Internal: Double-quotes a string `value`, replacing all ASCII control\n      // characters (characters with code unit values between 0 and 31) with\n      // their escaped equivalents. This is an implementation of the\n      // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n      var unicodePrefix = \"\\\\u00\";\n      var quote = function (value) {\n        var result = '\"', index = 0, length = value.length, isLarge = length > 10 && charIndexBuggy, symbols;\n        if (isLarge) {\n          symbols = value.split(\"\");\n        }\n        for (; index < length; index++) {\n          var charCode = value.charCodeAt(index);\n          // If the character is a control character, append its Unicode or\n          // shorthand escape sequence; otherwise, append the character as-is.\n          switch (charCode) {\n            case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n              result += Escapes[charCode];\n              break;\n            default:\n              if (charCode < 32) {\n                result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                break;\n              }\n              result += isLarge ? symbols[index] : charIndexBuggy ? value.charAt(index) : value[index];\n          }\n        }\n        return result + '\"';\n      };\n\n      // Internal: Recursively serializes an object. Implements the\n      // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n      var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n        var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n        try {\n          // Necessary for host object support.\n          value = object[property];\n        } catch (exception) {}\n        if (typeof value == \"object\" && value) {\n          className = getClass.call(value);\n          if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n            if (value > -1 / 0 && value < 1 / 0) {\n              // Dates are serialized according to the `Date#toJSON` method\n              // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n              // for the ISO 8601 date time string format.\n              if (getDay) {\n                // Manually compute the year, month, date, hours, minutes,\n                // seconds, and milliseconds if the `getUTC*` methods are\n                // buggy. Adapted from @Yaffle's `date-shim` project.\n                date = floor(value / 864e5);\n                for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                date = 1 + date - getDay(year, month);\n                // The `time` value specifies the time within the day (see ES\n                // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                // to compute `A modulo B`, as the `%` operator does not\n                // correspond to the `modulo` operation for negative numbers.\n                time = (value % 864e5 + 864e5) % 864e5;\n                // The hours, minutes, seconds, and milliseconds are obtained by\n                // decomposing the time within the day. See section 15.9.1.10.\n                hours = floor(time / 36e5) % 24;\n                minutes = floor(time / 6e4) % 60;\n                seconds = floor(time / 1e3) % 60;\n                milliseconds = time % 1e3;\n              } else {\n                year = value.getUTCFullYear();\n                month = value.getUTCMonth();\n                date = value.getUTCDate();\n                hours = value.getUTCHours();\n                minutes = value.getUTCMinutes();\n                seconds = value.getUTCSeconds();\n                milliseconds = value.getUTCMilliseconds();\n              }\n              // Serialize extended years correctly.\n              value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                // Months, dates, hours, minutes, and seconds should have two\n                // digits; milliseconds should have three.\n                \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                // Milliseconds are optional in ES 5.0, but required in 5.1.\n                \".\" + toPaddedString(3, milliseconds) + \"Z\";\n            } else {\n              value = null;\n            }\n          } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n            // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n            // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n            // ignores all `toJSON` methods on these objects unless they are\n            // defined directly on an instance.\n            value = value.toJSON(property);\n          }\n        }\n        if (callback) {\n          // If a replacement function was provided, call it to obtain the value\n          // for serialization.\n          value = callback.call(object, property, value);\n        }\n        if (value === null) {\n          return \"null\";\n        }\n        className = getClass.call(value);\n        if (className == booleanClass) {\n          // Booleans are represented literally.\n          return \"\" + value;\n        } else if (className == numberClass) {\n          // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n          // `\"null\"`.\n          return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n        } else if (className == stringClass) {\n          // Strings are double-quoted and escaped.\n          return quote(\"\" + value);\n        }\n        // Recursively serialize objects and arrays.\n        if (typeof value == \"object\") {\n          // Check for cyclic structures. This is a linear search; performance\n          // is inversely proportional to the number of unique nested objects.\n          for (length = stack.length; length--;) {\n            if (stack[length] === value) {\n              // Cyclic structures cannot be serialized by `JSON.stringify`.\n              throw TypeError();\n            }\n          }\n          // Add the object to the stack of traversed objects.\n          stack.push(value);\n          results = [];\n          // Save the current indentation level and indent one additional level.\n          prefix = indentation;\n          indentation += whitespace;\n          if (className == arrayClass) {\n            // Recursively serialize array elements.\n            for (index = 0, length = value.length; index < length; index++) {\n              element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n              results.push(element === undef ? \"null\" : element);\n            }\n            result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n          } else {\n            // Recursively serialize object members. Members are selected from\n            // either a user-specified list of property names, or the object\n            // itself.\n            forEach(properties || value, function (property) {\n              var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n              if (element !== undef) {\n                // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                // is not the empty string, let `member` {quote(property) + \":\"}\n                // be the concatenation of `member` and the `space` character.\"\n                // The \"`space` character\" refers to the literal space\n                // character, not the `space` {width} argument provided to\n                // `JSON.stringify`.\n                results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n              }\n            });\n            result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n          }\n          // Remove the object from the traversed object stack.\n          stack.pop();\n          return result;\n        }\n      };\n\n      // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n      JSON3.stringify = function (source, filter, width) {\n        var whitespace, callback, properties, className;\n        if (typeof filter == \"function\" || typeof filter == \"object\" && filter) {\n          if ((className = getClass.call(filter)) == functionClass) {\n            callback = filter;\n          } else if (className == arrayClass) {\n            // Convert the property names array into a makeshift set.\n            properties = {};\n            for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n          }\n        }\n        if (width) {\n          if ((className = getClass.call(width)) == numberClass) {\n            // Convert the `width` to an integer and create a string containing\n            // `width` number of space characters.\n            if ((width -= width % 1) > 0) {\n              for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n            }\n          } else if (className == stringClass) {\n            whitespace = width.length <= 10 ? width : width.slice(0, 10);\n          }\n        }\n        // Opera <= 7.54u2 discards the values associated with empty string keys\n        // (`\"\"`) only if they are used directly within an object member list\n        // (e.g., `!(\"\" in { \"\": 1})`).\n        return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n      };\n    }\n\n    // Public: Parses a JSON source string.\n    if (!has(\"json-parse\")) {\n      var fromCharCode = String.fromCharCode;\n\n      // Internal: A map of escaped control characters and their unescaped\n      // equivalents.\n      var Unescapes = {\n        92: \"\\\\\",\n        34: '\"',\n        47: \"/\",\n        98: \"\\b\",\n        116: \"\\t\",\n        110: \"\\n\",\n        102: \"\\f\",\n        114: \"\\r\"\n      };\n\n      // Internal: Stores the parser state.\n      var Index, Source;\n\n      // Internal: Resets the parser state and throws a `SyntaxError`.\n      var abort = function() {\n        Index = Source = null;\n        throw SyntaxError();\n      };\n\n      // Internal: Returns the next token, or `\"$\"` if the parser has reached\n      // the end of the source string. A token may be a string, number, `null`\n      // literal, or Boolean literal.\n      var lex = function () {\n        var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n        while (Index < length) {\n          charCode = source.charCodeAt(Index);\n          switch (charCode) {\n            case 9: case 10: case 13: case 32:\n              // Skip whitespace tokens, including tabs, carriage returns, line\n              // feeds, and space characters.\n              Index++;\n              break;\n            case 123: case 125: case 91: case 93: case 58: case 44:\n              // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n              // the current position.\n              value = charIndexBuggy ? source.charAt(Index) : source[Index];\n              Index++;\n              return value;\n            case 34:\n              // `\"` delimits a JSON string; advance to the next character and\n              // begin parsing the string. String tokens are prefixed with the\n              // sentinel `@` character to distinguish them from punctuators and\n              // end-of-string tokens.\n              for (value = \"@\", Index++; Index < length;) {\n                charCode = source.charCodeAt(Index);\n                if (charCode < 32) {\n                  // Unescaped ASCII control characters (those with a code unit\n                  // less than the space character) are not permitted.\n                  abort();\n                } else if (charCode == 92) {\n                  // A reverse solidus (`\\`) marks the beginning of an escaped\n                  // control character (including `\"`, `\\`, and `/`) or Unicode\n                  // escape sequence.\n                  charCode = source.charCodeAt(++Index);\n                  switch (charCode) {\n                    case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                      // Revive escaped control characters.\n                      value += Unescapes[charCode];\n                      Index++;\n                      break;\n                    case 117:\n                      // `\\u` marks the beginning of a Unicode escape sequence.\n                      // Advance to the first character and validate the\n                      // four-digit code point.\n                      begin = ++Index;\n                      for (position = Index + 4; Index < position; Index++) {\n                        charCode = source.charCodeAt(Index);\n                        // A valid sequence comprises four hexdigits (case-\n                        // insensitive) that form a single hexadecimal value.\n                        if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                          // Invalid Unicode escape sequence.\n                          abort();\n                        }\n                      }\n                      // Revive the escaped character.\n                      value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                      break;\n                    default:\n                      // Invalid escape sequence.\n                      abort();\n                  }\n                } else {\n                  if (charCode == 34) {\n                    // An unescaped double-quote character marks the end of the\n                    // string.\n                    break;\n                  }\n                  charCode = source.charCodeAt(Index);\n                  begin = Index;\n                  // Optimize for the common case where a string is valid.\n                  while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                    charCode = source.charCodeAt(++Index);\n                  }\n                  // Append the string as-is.\n                  value += source.slice(begin, Index);\n                }\n              }\n              if (source.charCodeAt(Index) == 34) {\n                // Advance to the next character and return the revived string.\n                Index++;\n                return value;\n              }\n              // Unterminated string.\n              abort();\n            default:\n              // Parse numbers and literals.\n              begin = Index;\n              // Advance past the negative sign, if one is specified.\n              if (charCode == 45) {\n                isSigned = true;\n                charCode = source.charCodeAt(++Index);\n              }\n              // Parse an integer or floating-point value.\n              if (charCode >= 48 && charCode <= 57) {\n                // Leading zeroes are interpreted as octal literals.\n                if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                  // Illegal octal literal.\n                  abort();\n                }\n                isSigned = false;\n                // Parse the integer component.\n                for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                // Floats cannot contain a leading decimal point; however, this\n                // case is already accounted for by the parser.\n                if (source.charCodeAt(Index) == 46) {\n                  position = ++Index;\n                  // Parse the decimal component.\n                  for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal trailing decimal.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Parse exponents. The `e` denoting the exponent is\n                // case-insensitive.\n                charCode = source.charCodeAt(Index);\n                if (charCode == 101 || charCode == 69) {\n                  charCode = source.charCodeAt(++Index);\n                  // Skip past the sign following the exponent, if one is\n                  // specified.\n                  if (charCode == 43 || charCode == 45) {\n                    Index++;\n                  }\n                  // Parse the exponential component.\n                  for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                  if (position == Index) {\n                    // Illegal empty exponent.\n                    abort();\n                  }\n                  Index = position;\n                }\n                // Coerce the parsed value to a JavaScript number.\n                return +source.slice(begin, Index);\n              }\n              // A negative sign may only precede numbers.\n              if (isSigned) {\n                abort();\n              }\n              // `true`, `false`, and `null` literals.\n              if (source.slice(Index, Index + 4) == \"true\") {\n                Index += 4;\n                return true;\n              } else if (source.slice(Index, Index + 5) == \"false\") {\n                Index += 5;\n                return false;\n              } else if (source.slice(Index, Index + 4) == \"null\") {\n                Index += 4;\n                return null;\n              }\n              // Unrecognized token.\n              abort();\n          }\n        }\n        // Return the sentinel `$` character if the parser has reached the end\n        // of the source string.\n        return \"$\";\n      };\n\n      // Internal: Parses a JSON `value` token.\n      var get = function (value) {\n        var results, hasMembers;\n        if (value == \"$\") {\n          // Unexpected end of input.\n          abort();\n        }\n        if (typeof value == \"string\") {\n          if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n            // Remove the sentinel `@` character.\n            return value.slice(1);\n          }\n          // Parse object and array literals.\n          if (value == \"[\") {\n            // Parses a JSON array, returning a new JavaScript array.\n            results = [];\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing square bracket marks the end of the array literal.\n              if (value == \"]\") {\n                break;\n              }\n              // If the array literal contains elements, the current token\n              // should be a comma separating the previous element from the\n              // next.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"]\") {\n                    // Unexpected trailing `,` in array literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each array element.\n                  abort();\n                }\n              }\n              // Elisions and leading commas are not permitted.\n              if (value == \",\") {\n                abort();\n              }\n              results.push(get(value));\n            }\n            return results;\n          } else if (value == \"{\") {\n            // Parses a JSON object, returning a new JavaScript object.\n            results = {};\n            for (;; hasMembers || (hasMembers = true)) {\n              value = lex();\n              // A closing curly brace marks the end of the object literal.\n              if (value == \"}\") {\n                break;\n              }\n              // If the object literal contains members, the current token\n              // should be a comma separator.\n              if (hasMembers) {\n                if (value == \",\") {\n                  value = lex();\n                  if (value == \"}\") {\n                    // Unexpected trailing `,` in object literal.\n                    abort();\n                  }\n                } else {\n                  // A `,` must separate each object member.\n                  abort();\n                }\n              }\n              // Leading commas are not permitted, object property names must be\n              // double-quoted strings, and a `:` must separate each property\n              // name and value.\n              if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                abort();\n              }\n              results[value.slice(1)] = get(lex());\n            }\n            return results;\n          }\n          // Unexpected token encountered.\n          abort();\n        }\n        return value;\n      };\n\n      // Internal: Updates a traversed object member.\n      var update = function(source, property, callback) {\n        var element = walk(source, property, callback);\n        if (element === undef) {\n          delete source[property];\n        } else {\n          source[property] = element;\n        }\n      };\n\n      // Internal: Recursively traverses a parsed JSON object, invoking the\n      // `callback` function for each value. This is an implementation of the\n      // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n      var walk = function (source, property, callback) {\n        var value = source[property], length;\n        if (typeof value == \"object\" && value) {\n          // `forEach` can't be used to traverse an array in Opera <= 8.54\n          // because its `Object#hasOwnProperty` implementation returns `false`\n          // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n          if (getClass.call(value) == arrayClass) {\n            for (length = value.length; length--;) {\n              update(value, length, callback);\n            }\n          } else {\n            forEach(value, function (property) {\n              update(value, property, callback);\n            });\n          }\n        }\n        return callback.call(source, property, value);\n      };\n\n      // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n      JSON3.parse = function (source, callback) {\n        var result, value;\n        Index = 0;\n        Source = \"\" + source;\n        result = get(lex());\n        // If a JSON string contains multiple tokens, it is invalid.\n        if (lex() != \"$\") {\n          abort();\n        }\n        // Reset the parser state.\n        Index = Source = null;\n        return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n      };\n    }\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define('json3',[],function () {\n      return JSON3;\n    });\n  }\n}(this));\n\n","/**\n * @license AngularJS v1.0.8\n * (c) 2010-2012 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, document, undefined) {\n'use strict';\n\n////////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.lowercase\n * @function\n *\n * @description Converts the specified string to lowercase.\n * @param {string} string String to be converted to lowercase.\n * @returns {string} Lowercased string.\n */\nvar lowercase = function(string){return isString(string) ? string.toLowerCase() : string;};\n\n\n/**\n * @ngdoc function\n * @name angular.uppercase\n * @function\n *\n * @description Converts the specified string to uppercase.\n * @param {string} string String to be converted to uppercase.\n * @returns {string} Uppercased string.\n */\nvar uppercase = function(string){return isString(string) ? string.toUpperCase() : string;};\n\n\nvar manualLowercase = function(s) {\n  return isString(s)\n      ? s.replace(/[A-Z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) | 32);})\n      : s;\n};\nvar manualUppercase = function(s) {\n  return isString(s)\n      ? s.replace(/[a-z]/g, function(ch) {return String.fromCharCode(ch.charCodeAt(0) & ~32);})\n      : s;\n};\n\n\n// String#toLowerCase and String#toUpperCase don't produce correct results in browsers with Turkish\n// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods\n// with correct but slower alternatives.\nif ('i' !== 'I'.toLowerCase()) {\n  lowercase = manualLowercase;\n  uppercase = manualUppercase;\n}\n\n\nvar /** holds major version number for IE or NaN for real browsers */\n    msie              = int((/msie (\\d+)/.exec(lowercase(navigator.userAgent)) || [])[1]),\n    jqLite,           // delay binding since jQuery could be loaded after us.\n    jQuery,           // delay binding\n    slice             = [].slice,\n    push              = [].push,\n    toString          = Object.prototype.toString,\n\n    /** @name angular */\n    angular           = window.angular || (window.angular = {}),\n    angularModule,\n    nodeName_,\n    uid               = ['0', '0', '0'];\n\n\n/**\n * @private\n * @param {*} obj\n * @return {boolean} Returns true if `obj` is an array or array-like object (NodeList, Arguments, ...)\n */\nfunction isArrayLike(obj) {\n  if (!obj || (typeof obj.length !== 'number')) return false;\n\n  // We have on object which has length property. Should we treat it as array?\n  if (typeof obj.hasOwnProperty != 'function' &&\n      typeof obj.constructor != 'function') {\n    // This is here for IE8: it is a bogus object treat it as array;\n    return true;\n  } else  {\n    return obj instanceof JQLite ||                      // JQLite\n           (jQuery && obj instanceof jQuery) ||          // jQuery\n           toString.call(obj) !== '[object Object]' ||   // some browser native object\n           typeof obj.callee === 'function';              // arguments (on IE8 looks like regular obj)\n  }\n}\n\n\n/**\n * @ngdoc function\n * @name angular.forEach\n * @function\n *\n * @description\n * Invokes the `iterator` function once for each item in `obj` collection, which can be either an\n * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`\n * is the value of an object property or an array element and `key` is the object property key or\n * array element index. Specifying a `context` for the function is optional.\n *\n * Note: this function was previously known as `angular.foreach`.\n *\n   <pre>\n     var values = {name: 'misko', gender: 'male'};\n     var log = [];\n     angular.forEach(values, function(value, key){\n       this.push(key + ': ' + value);\n     }, log);\n     expect(log).toEqual(['name: misko', 'gender:male']);\n   </pre>\n *\n * @param {Object|Array} obj Object to iterate over.\n * @param {Function} iterator Iterator function.\n * @param {Object=} context Object to become context (`this`) for the iterator function.\n * @returns {Object|Array} Reference to `obj`.\n */\nfunction forEach(obj, iterator, context) {\n  var key;\n  if (obj) {\n    if (isFunction(obj)){\n      for (key in obj) {\n        if (key != 'prototype' && key != 'length' && key != 'name' && obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    } else if (obj.forEach && obj.forEach !== forEach) {\n      obj.forEach(iterator, context);\n    } else if (isArrayLike(obj)) {\n      for (key = 0; key < obj.length; key++)\n        iterator.call(context, obj[key], key);\n    } else {\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          iterator.call(context, obj[key], key);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nfunction sortedKeys(obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      keys.push(key);\n    }\n  }\n  return keys.sort();\n}\n\nfunction forEachSorted(obj, iterator, context) {\n  var keys = sortedKeys(obj);\n  for ( var i = 0; i < keys.length; i++) {\n    iterator.call(context, obj[keys[i]], keys[i]);\n  }\n  return keys;\n}\n\n\n/**\n * when using forEach the params are value, key, but it is often useful to have key, value.\n * @param {function(string, *)} iteratorFn\n * @returns {function(*, string)}\n */\nfunction reverseParams(iteratorFn) {\n  return function(value, key) { iteratorFn(key, value) };\n}\n\n/**\n * A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric\n * characters such as '012ABC'. The reason why we are not using simply a number counter is that\n * the number string gets longer over time, and it can also overflow, where as the nextId\n * will grow much slower, it is a string, and it will never overflow.\n *\n * @returns an unique alpha-numeric string\n */\nfunction nextUid() {\n  var index = uid.length;\n  var digit;\n\n  while(index) {\n    index--;\n    digit = uid[index].charCodeAt(0);\n    if (digit == 57 /*'9'*/) {\n      uid[index] = 'A';\n      return uid.join('');\n    }\n    if (digit == 90  /*'Z'*/) {\n      uid[index] = '0';\n    } else {\n      uid[index] = String.fromCharCode(digit + 1);\n      return uid.join('');\n    }\n  }\n  uid.unshift('0');\n  return uid.join('');\n}\n\n\n/**\n * Set or clear the hashkey for an object.\n * @param obj object \n * @param h the hashkey (!truthy to delete the hashkey)\n */\nfunction setHashKey(obj, h) {\n  if (h) {\n    obj.$$hashKey = h;\n  }\n  else {\n    delete obj.$$hashKey;\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.extend\n * @function\n *\n * @description\n * Extends the destination object `dst` by copying all of the properties from the `src` object(s)\n * to `dst`. You can specify multiple `src` objects.\n *\n * @param {Object} dst Destination object.\n * @param {...Object} src Source object(s).\n * @returns {Object} Reference to `dst`.\n */\nfunction extend(dst) {\n  var h = dst.$$hashKey;\n  forEach(arguments, function(obj){\n    if (obj !== dst) {\n      forEach(obj, function(value, key){\n        dst[key] = value;\n      });\n    }\n  });\n\n  setHashKey(dst,h);\n  return dst;\n}\n\nfunction int(str) {\n  return parseInt(str, 10);\n}\n\n\nfunction inherit(parent, extra) {\n  return extend(new (extend(function() {}, {prototype:parent}))(), extra);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.noop\n * @function\n *\n * @description\n * A function that performs no operations. This function can be useful when writing code in the\n * functional style.\n   <pre>\n     function foo(callback) {\n       var result = calculateResult();\n       (callback || angular.noop)(result);\n     }\n   </pre>\n */\nfunction noop() {}\nnoop.$inject = [];\n\n\n/**\n * @ngdoc function\n * @name angular.identity\n * @function\n *\n * @description\n * A function that returns its first argument. This function is useful when writing code in the\n * functional style.\n *\n   <pre>\n     function transformer(transformationFn, value) {\n       return (transformationFn || angular.identity)(value);\n     };\n   </pre>\n */\nfunction identity($) {return $;}\nidentity.$inject = [];\n\n\nfunction valueFn(value) {return function() {return value;};}\n\n/**\n * @ngdoc function\n * @name angular.isUndefined\n * @function\n *\n * @description\n * Determines if a reference is undefined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is undefined.\n */\nfunction isUndefined(value){return typeof value == 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDefined\n * @function\n *\n * @description\n * Determines if a reference is defined.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is defined.\n */\nfunction isDefined(value){return typeof value != 'undefined';}\n\n\n/**\n * @ngdoc function\n * @name angular.isObject\n * @function\n *\n * @description\n * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not\n * considered to be objects.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Object` but not `null`.\n */\nfunction isObject(value){return value != null && typeof value == 'object';}\n\n\n/**\n * @ngdoc function\n * @name angular.isString\n * @function\n *\n * @description\n * Determines if a reference is a `String`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `String`.\n */\nfunction isString(value){return typeof value == 'string';}\n\n\n/**\n * @ngdoc function\n * @name angular.isNumber\n * @function\n *\n * @description\n * Determines if a reference is a `Number`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Number`.\n */\nfunction isNumber(value){return typeof value == 'number';}\n\n\n/**\n * @ngdoc function\n * @name angular.isDate\n * @function\n *\n * @description\n * Determines if a value is a date.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Date`.\n */\nfunction isDate(value){\n  return toString.apply(value) == '[object Date]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isArray\n * @function\n *\n * @description\n * Determines if a reference is an `Array`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is an `Array`.\n */\nfunction isArray(value) {\n  return toString.apply(value) == '[object Array]';\n}\n\n\n/**\n * @ngdoc function\n * @name angular.isFunction\n * @function\n *\n * @description\n * Determines if a reference is a `Function`.\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `Function`.\n */\nfunction isFunction(value){return typeof value == 'function';}\n\n\n/**\n * Determines if a value is a regular expression object.\n *\n * @private\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a `RegExp`.\n */\nfunction isRegExp(value) {\n  return toString.apply(value) == '[object RegExp]';\n}\n\n\n/**\n * Checks if `obj` is a window object.\n *\n * @private\n * @param {*} obj Object to check\n * @returns {boolean} True if `obj` is a window obj.\n */\nfunction isWindow(obj) {\n  return obj && obj.document && obj.location && obj.alert && obj.setInterval;\n}\n\n\nfunction isScope(obj) {\n  return obj && obj.$evalAsync && obj.$watch;\n}\n\n\nfunction isFile(obj) {\n  return toString.apply(obj) === '[object File]';\n}\n\n\nfunction isBoolean(value) {\n  return typeof value == 'boolean';\n}\n\n\nvar trim = (function() {\n  // native trim is way faster: http://jsperf.com/angular-trim-test\n  // but IE doesn't have it... :-(\n  // TODO: we should move this into IE/ES5 polyfill\n  if (!String.prototype.trim) {\n    return function(value) {\n      return isString(value) ? value.replace(/^\\s*/, '').replace(/\\s*$/, '') : value;\n    };\n  }\n  return function(value) {\n    return isString(value) ? value.trim() : value;\n  };\n})();\n\n\n/**\n * @ngdoc function\n * @name angular.isElement\n * @function\n *\n * @description\n * Determines if a reference is a DOM element (or wrapped jQuery element).\n *\n * @param {*} value Reference to check.\n * @returns {boolean} True if `value` is a DOM element (or wrapped jQuery element).\n */\nfunction isElement(node) {\n  return node &&\n    (node.nodeName  // we are a direct element\n    || (node.bind && node.find));  // we have a bind and find method part of jQuery API\n}\n\n/**\n * @param str 'key1,key2,...'\n * @returns {object} in the form of {key1:true, key2:true, ...}\n */\nfunction makeMap(str){\n  var obj = {}, items = str.split(\",\"), i;\n  for ( i = 0; i < items.length; i++ )\n    obj[ items[i] ] = true;\n  return obj;\n}\n\n\nif (msie < 9) {\n  nodeName_ = function(element) {\n    element = element.nodeName ? element : element[0];\n    return (element.scopeName && element.scopeName != 'HTML')\n      ? uppercase(element.scopeName + ':' + element.nodeName) : element.nodeName;\n  };\n} else {\n  nodeName_ = function(element) {\n    return element.nodeName ? element.nodeName : element[0].nodeName;\n  };\n}\n\n\nfunction map(obj, iterator, context) {\n  var results = [];\n  forEach(obj, function(value, index, list) {\n    results.push(iterator.call(context, value, index, list));\n  });\n  return results;\n}\n\n\n/**\n * @description\n * Determines the number of elements in an array, the number of properties an object has, or\n * the length of a string.\n *\n * Note: This function is used to augment the Object type in Angular expressions. See\n * {@link angular.Object} for more information about Angular arrays.\n *\n * @param {Object|Array|string} obj Object, array, or string to inspect.\n * @param {boolean} [ownPropsOnly=false] Count only \"own\" properties in an object\n * @returns {number} The size of `obj` or `0` if `obj` is neither an object nor an array.\n */\nfunction size(obj, ownPropsOnly) {\n  var size = 0, key;\n\n  if (isArray(obj) || isString(obj)) {\n    return obj.length;\n  } else if (isObject(obj)){\n    for (key in obj)\n      if (!ownPropsOnly || obj.hasOwnProperty(key))\n        size++;\n  }\n\n  return size;\n}\n\n\nfunction includes(array, obj) {\n  return indexOf(array, obj) != -1;\n}\n\nfunction indexOf(array, obj) {\n  if (array.indexOf) return array.indexOf(obj);\n\n  for ( var i = 0; i < array.length; i++) {\n    if (obj === array[i]) return i;\n  }\n  return -1;\n}\n\nfunction arrayRemove(array, value) {\n  var index = indexOf(array, value);\n  if (index >=0)\n    array.splice(index, 1);\n  return value;\n}\n\nfunction isLeafNode (node) {\n  if (node) {\n    switch (node.nodeName) {\n    case \"OPTION\":\n    case \"PRE\":\n    case \"TITLE\":\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @ngdoc function\n * @name angular.copy\n * @function\n *\n * @description\n * Creates a deep copy of `source`, which should be an object or an array.\n *\n * * If no destination is supplied, a copy of the object or array is created.\n * * If a destination is provided, all of its elements (for array) or properties (for objects)\n *   are deleted and then all elements/properties from the source are copied to it.\n * * If  `source` is not an object or array, `source` is returned.\n *\n * Note: this function is used to augment the Object type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {*} source The source that will be used to make a copy.\n *                   Can be any type, including primitives, `null`, and `undefined`.\n * @param {(Object|Array)=} destination Destination into which the source is copied. If\n *     provided, must be of the same type as `source`.\n * @returns {*} The copy or updated `destination`, if `destination` was specified.\n */\nfunction copy(source, destination){\n  if (isWindow(source) || isScope(source)) throw Error(\"Can't copy Window or Scope\");\n  if (!destination) {\n    destination = source;\n    if (source) {\n      if (isArray(source)) {\n        destination = copy(source, []);\n      } else if (isDate(source)) {\n        destination = new Date(source.getTime());\n      } else if (isRegExp(source)) {\n        destination = new RegExp(source.source);\n      } else if (isObject(source)) {\n        destination = copy(source, {});\n      }\n    }\n  } else {\n    if (source === destination) throw Error(\"Can't copy equivalent objects or arrays\");\n    if (isArray(source)) {\n      destination.length = 0;\n      for ( var i = 0; i < source.length; i++) {\n        destination.push(copy(source[i]));\n      }\n    } else {\n      var h = destination.$$hashKey;\n      forEach(destination, function(value, key){\n        delete destination[key];\n      });\n      for ( var key in source) {\n        destination[key] = copy(source[key]);\n      }\n      setHashKey(destination,h);\n    }\n  }\n  return destination;\n}\n\n/**\n * Create a shallow copy of an object\n */\nfunction shallowCopy(src, dst) {\n  dst = dst || {};\n\n  for(var key in src) {\n    if (src.hasOwnProperty(key) && key.substr(0, 2) !== '$$') {\n      dst[key] = src[key];\n    }\n  }\n\n  return dst;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.equals\n * @function\n *\n * @description\n * Determines if two objects or two values are equivalent. Supports value types, regular expressions, arrays and\n * objects.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties pass `===` comparison.\n * * Both values are NaN. (In JavasScript, NaN == NaN => false. But we consider two NaN as equal)\n * * Both values represent the same regular expression (In JavasScript,\n *   /abc/ == /abc/ => false. But we consider two regular expressions as equal when their textual\n *   representation matches).\n *\n * During a property comparision, properties of `function` type and properties with names\n * that begin with `$` are ignored.\n *\n * Scope and DOMWindow objects are being compared only by identify (`===`).\n *\n * @param {*} o1 Object or value to compare.\n * @param {*} o2 Object or value to compare.\n * @returns {boolean} True if arguments are equal.\n */\nfunction equals(o1, o2) {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  var t1 = typeof o1, t2 = typeof o2, length, key, keySet;\n  if (t1 == t2) {\n    if (t1 == 'object') {\n      if (isArray(o1)) {\n        if (!isArray(o2)) return false;\n        if ((length = o1.length) == o2.length) {\n          for(key=0; key<length; key++) {\n            if (!equals(o1[key], o2[key])) return false;\n          }\n          return true;\n        }\n      } else if (isDate(o1)) {\n        return isDate(o2) && o1.getTime() == o2.getTime();\n      } else if (isRegExp(o1) && isRegExp(o2)) {\n        return o1.toString() == o2.toString();\n      } else {\n        if (isScope(o1) || isScope(o2) || isWindow(o1) || isWindow(o2) || isArray(o2)) return false;\n        keySet = {};\n        for(key in o1) {\n          if (key.charAt(0) === '$' || isFunction(o1[key])) continue;\n          if (!equals(o1[key], o2[key])) return false;\n          keySet[key] = true;\n        }\n        for(key in o2) {\n          if (!keySet[key] &&\n              key.charAt(0) !== '$' &&\n              o2[key] !== undefined &&\n              !isFunction(o2[key])) return false;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n\nfunction concat(array1, array2, index) {\n  return array1.concat(slice.call(array2, index));\n}\n\nfunction sliceArgs(args, startIndex) {\n  return slice.call(args, startIndex || 0);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.bind\n * @function\n *\n * @description\n * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for\n * `fn`). You can supply optional `args` that are prebound to the function. This feature is also\n * known as [function currying](http://en.wikipedia.org/wiki/Currying).\n *\n * @param {Object} self Context which `fn` should be evaluated in.\n * @param {function()} fn Function to be bound.\n * @param {...*} args Optional arguments to be prebound to the `fn` function call.\n * @returns {function()} Function that wraps the `fn` with all the specified bindings.\n */\nfunction bind(self, fn) {\n  var curryArgs = arguments.length > 2 ? sliceArgs(arguments, 2) : [];\n  if (isFunction(fn) && !(fn instanceof RegExp)) {\n    return curryArgs.length\n      ? function() {\n          return arguments.length\n            ? fn.apply(self, curryArgs.concat(slice.call(arguments, 0)))\n            : fn.apply(self, curryArgs);\n        }\n      : function() {\n          return arguments.length\n            ? fn.apply(self, arguments)\n            : fn.call(self);\n        };\n  } else {\n    // in IE, native methods are not functions so they cannot be bound (note: they don't need to be)\n    return fn;\n  }\n}\n\n\nfunction toJsonReplacer(key, value) {\n  var val = value;\n\n  if (/^\\$+/.test(key)) {\n    val = undefined;\n  } else if (isWindow(value)) {\n    val = '$WINDOW';\n  } else if (value &&  document === value) {\n    val = '$DOCUMENT';\n  } else if (isScope(value)) {\n    val = '$SCOPE';\n  }\n\n  return val;\n}\n\n\n/**\n * @ngdoc function\n * @name angular.toJson\n * @function\n *\n * @description\n * Serializes input into a JSON-formatted string. Properties with leading $ characters will be\n * stripped since angular uses this notation internally.\n *\n * @param {Object|Array|Date|string|number} obj Input to be serialized into JSON.\n * @param {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.\n * @returns {string|undefined} Jsonified string representing `obj`.\n */\nfunction toJson(obj, pretty) {\n  if (typeof obj === 'undefined') return undefined;\n  return JSON.stringify(obj, toJsonReplacer, pretty ? '  ' : null);\n}\n\n\n/**\n * @ngdoc function\n * @name angular.fromJson\n * @function\n *\n * @description\n * Deserializes a JSON string.\n *\n * @param {string} json JSON string to deserialize.\n * @returns {Object|Array|Date|string|number} Deserialized thingy.\n */\nfunction fromJson(json) {\n  return isString(json)\n      ? JSON.parse(json)\n      : json;\n}\n\n\nfunction toBoolean(value) {\n  if (value && value.length !== 0) {\n    var v = lowercase(\"\" + value);\n    value = !(v == 'f' || v == '0' || v == 'false' || v == 'no' || v == 'n' || v == '[]');\n  } else {\n    value = false;\n  }\n  return value;\n}\n\n/**\n * @returns {string} Returns the string representation of the element.\n */\nfunction startingTag(element) {\n  element = jqLite(element).clone();\n  try {\n    // turns out IE does not let you set .html() on elements which\n    // are not allowed to have children. So we just ignore it.\n    element.html('');\n  } catch(e) {}\n  // As Per DOM Standards\n  var TEXT_NODE = 3;\n  var elemHtml = jqLite('<div>').append(element).html();\n  try {\n    return element[0].nodeType === TEXT_NODE ? lowercase(elemHtml) :\n        elemHtml.\n          match(/^(<[^>]+>)/)[1].\n          replace(/^<([\\w\\-]+)/, function(match, nodeName) { return '<' + lowercase(nodeName); });\n  } catch(e) {\n    return lowercase(elemHtml);\n  }\n\n}\n\n\n/////////////////////////////////////////////////\n\n/**\n * Tries to decode the URI component without throwing an exception.\n *\n * @private\n * @param str value potential URI component to check.\n * @returns {boolean} True if `value` can be decoded\n * with the decodeURIComponent function.\n */\nfunction tryDecodeURIComponent(value) {\n  try {\n    return decodeURIComponent(value);\n  } catch(e) {\n    // Ignore any invalid uri component\n  }\n}\n\n\n/**\n * Parses an escaped url query string into key-value pairs.\n * @returns Object.<(string|boolean)>\n */\nfunction parseKeyValue(/**string*/keyValue) {\n  var obj = {}, key_value, key;\n  forEach((keyValue || \"\").split('&'), function(keyValue){\n    if ( keyValue ) {\n      key_value = keyValue.split('=');\n      key = tryDecodeURIComponent(key_value[0]);\n      if ( isDefined(key) ) {\n        obj[key] = isDefined(key_value[1]) ? tryDecodeURIComponent(key_value[1]) : true;\n      }\n    }\n  });\n  return obj;\n}\n\nfunction toKeyValue(obj) {\n  var parts = [];\n  forEach(obj, function(value, key) {\n    parts.push(encodeUriQuery(key, true) + (value === true ? '' : '=' + encodeUriQuery(value, true)));\n  });\n  return parts.length ? parts.join('&') : '';\n}\n\n\n/**\n * We need our custom method because encodeURIComponent is too agressive and doesn't follow\n * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\n * segments:\n *    segment       = *pchar\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriSegment(val) {\n  return encodeUriQuery(val, true).\n             replace(/%26/gi, '&').\n             replace(/%3D/gi, '=').\n             replace(/%2B/gi, '+');\n}\n\n\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method becuase encodeURIComponent is too agressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query       = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n */\nfunction encodeUriQuery(val, pctEncodeSpaces) {\n  return encodeURIComponent(val).\n             replace(/%40/gi, '@').\n             replace(/%3A/gi, ':').\n             replace(/%24/g, '$').\n             replace(/%2C/gi, ',').\n             replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngApp\n *\n * @element ANY\n * @param {angular.Module} ngApp an optional application\n *   {@link angular.module module} name to load.\n *\n * @description\n *\n * Use this directive to auto-bootstrap an application. Only\n * one ngApp directive can be used per HTML document. The directive\n * designates the root of the application and is typically placed\n * at the root of the page.\n *\n * The first ngApp found in the document will be auto-bootstrapped. To use multiple applications in an\n * HTML document you must manually bootstrap them using {@link angular.bootstrap}.\n * Applications cannot be nested.\n *\n * In the example below if the `ngApp` directive would not be placed\n * on the `html` element then the document would not be compiled\n * and the `{{ 1+2 }}` would not be resolved to `3`.\n *\n * `ngApp` is the easiest way to bootstrap an application.\n *\n <doc:example>\n   <doc:source>\n    I can add: 1 + 2 =  {{ 1+2 }}\n   </doc:source>\n </doc:example>\n *\n */\nfunction angularInit(element, bootstrap) {\n  var elements = [element],\n      appElement,\n      module,\n      names = ['ng:app', 'ng-app', 'x-ng-app', 'data-ng-app'],\n      NG_APP_CLASS_REGEXP = /\\sng[:\\-]app(:\\s*([\\w\\d_]+);?)?\\s/;\n\n  function append(element) {\n    element && elements.push(element);\n  }\n\n  forEach(names, function(name) {\n    names[name] = true;\n    append(document.getElementById(name));\n    name = name.replace(':', '\\\\:');\n    if (element.querySelectorAll) {\n      forEach(element.querySelectorAll('.' + name), append);\n      forEach(element.querySelectorAll('.' + name + '\\\\:'), append);\n      forEach(element.querySelectorAll('[' + name + ']'), append);\n    }\n  });\n\n  forEach(elements, function(element) {\n    if (!appElement) {\n      var className = ' ' + element.className + ' ';\n      var match = NG_APP_CLASS_REGEXP.exec(className);\n      if (match) {\n        appElement = element;\n        module = (match[2] || '').replace(/\\s+/g, ',');\n      } else {\n        forEach(element.attributes, function(attr) {\n          if (!appElement && names[attr.name]) {\n            appElement = element;\n            module = attr.value;\n          }\n        });\n      }\n    }\n  });\n  if (appElement) {\n    bootstrap(appElement, module ? [module] : []);\n  }\n}\n\n/**\n * @ngdoc function\n * @name angular.bootstrap\n * @description\n * Use this function to manually start up angular application.\n *\n * See: {@link guide/bootstrap Bootstrap}\n *\n * Note that ngScenario-based end-to-end tests cannot use this function to bootstrap manually.\n * They must use {@link api/ng.directive:ngApp ngApp}.\n *\n * @param {Element} element DOM element which is the root of angular application.\n * @param {Array<String|Function>=} modules an array of module declarations. See: {@link angular.module modules}\n * @returns {AUTO.$injector} Returns the newly created injector for this app.\n */\nfunction bootstrap(element, modules) {\n  var doBootstrap = function() {\n    element = jqLite(element);\n    modules = modules || [];\n    modules.unshift(['$provide', function($provide) {\n      $provide.value('$rootElement', element);\n    }]);\n    modules.unshift('ng');\n    var injector = createInjector(modules);\n    injector.invoke(['$rootScope', '$rootElement', '$compile', '$injector',\n       function(scope, element, compile, injector) {\n        scope.$apply(function() {\n          element.data('$injector', injector);\n          compile(element)(scope);\n        });\n      }]\n    );\n    return injector;\n  };\n\n  var NG_DEFER_BOOTSTRAP = /^NG_DEFER_BOOTSTRAP!/;\n\n  if (window && !NG_DEFER_BOOTSTRAP.test(window.name)) {\n    return doBootstrap();\n  }\n\n  window.name = window.name.replace(NG_DEFER_BOOTSTRAP, '');\n  angular.resumeBootstrap = function(extraModules) {\n    forEach(extraModules, function(module) {\n      modules.push(module);\n    });\n    doBootstrap();\n  };\n}\n\nvar SNAKE_CASE_REGEXP = /[A-Z]/g;\nfunction snake_case(name, separator){\n  separator = separator || '_';\n  return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n    return (pos ? separator : '') + letter.toLowerCase();\n  });\n}\n\nfunction bindJQuery() {\n  // bind to jQuery if present;\n  jQuery = window.jQuery;\n  // reset to jQuery or default to us.\n  if (jQuery) {\n    jqLite = jQuery;\n    extend(jQuery.fn, {\n      scope: JQLitePrototype.scope,\n      controller: JQLitePrototype.controller,\n      injector: JQLitePrototype.injector,\n      inheritedData: JQLitePrototype.inheritedData\n    });\n    // Method signature: JQLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments)\n    JQLitePatchJQueryRemove('remove', true, true, false);\n    JQLitePatchJQueryRemove('empty', false, false, false);\n    JQLitePatchJQueryRemove('html', false, false, true);\n  } else {\n    jqLite = JQLite;\n  }\n  angular.element = jqLite;\n}\n\n/**\n * throw error if the argument is falsy.\n */\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw new Error(\"Argument '\" + (name || '?') + \"' is \" + (reason || \"required\"));\n  }\n  return arg;\n}\n\nfunction assertArgFn(arg, name, acceptArrayAnnotation) {\n  if (acceptArrayAnnotation && isArray(arg)) {\n      arg = arg[arg.length - 1];\n  }\n\n  assertArg(isFunction(arg), name, 'not a function, got ' +\n      (arg && typeof arg == 'object' ? arg.constructor.name || 'Object' : typeof arg));\n  return arg;\n}\n\n/**\n * Return the value accessible from the object by path. Any undefined traversals are ignored\n * @param {Object} obj starting object\n * @param {string} path path to traverse\n * @param {boolean=true} bindFnToScope\n * @returns value as accessible by path\n */\n//TODO(misko): this function needs to be removed\nfunction getter(obj, path, bindFnToScope) {\n  if (!path) return obj;\n  var keys = path.split('.');\n  var key;\n  var lastInstance = obj;\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    key = keys[i];\n    if (obj) {\n      obj = (lastInstance = obj)[key];\n    }\n  }\n  if (!bindFnToScope && isFunction(obj)) {\n    return bind(lastInstance, obj);\n  }\n  return obj;\n}\n\n/**\n * @ngdoc interface\n * @name angular.Module\n * @description\n *\n * Interface for configuring angular {@link angular.module modules}.\n */\n\nfunction setupModuleLoader(window) {\n\n  function ensure(obj, name, factory) {\n    return obj[name] || (obj[name] = factory());\n  }\n\n  return ensure(ensure(window, 'angular', Object), 'module', function() {\n    /** @type {Object.<string, angular.Module>} */\n    var modules = {};\n\n    /**\n     * @ngdoc function\n     * @name angular.module\n     * @description\n     *\n     * The `angular.module` is a global place for creating and registering Angular modules. All\n     * modules (angular core or 3rd party) that should be available to an application must be\n     * registered using this mechanism.\n     *\n     *\n     * # Module\n     *\n     * A module is a collection of services, directives, filters, and configuration information.\n     * `angular.module` is used to configure the {@link AUTO.$injector $injector}.\n     *\n     * <pre>\n     * // Create a new module\n     * var myModule = angular.module('myModule', []);\n     *\n     * // register a new service\n     * myModule.value('appName', 'MyCoolApp');\n     *\n     * // configure existing services inside initialization blocks.\n     * myModule.config(function($locationProvider) {\n     *   // Configure existing providers\n     *   $locationProvider.hashPrefix('!');\n     * });\n     * </pre>\n     *\n     * Then you can create an injector and load your modules like this:\n     *\n     * <pre>\n     * var injector = angular.injector(['ng', 'MyModule'])\n     * </pre>\n     *\n     * However it's more likely that you'll just use\n     * {@link ng.directive:ngApp ngApp} or\n     * {@link angular.bootstrap} to simplify this process for you.\n     *\n     * @param {!string} name The name of the module to create or retrieve.\n     * @param {Array.<string>=} requires If specified then new module is being created. If unspecified then the\n     *        the module is being retrieved for further configuration.\n     * @param {Function} configFn Optional configuration function for the module. Same as\n     *        {@link angular.Module#config Module#config()}.\n     * @returns {module} new module with the {@link angular.Module} api.\n     */\n    return function module(name, requires, configFn) {\n      if (requires && modules.hasOwnProperty(name)) {\n        modules[name] = null;\n      }\n      return ensure(modules, name, function() {\n        if (!requires) {\n          throw Error('No module: ' + name);\n        }\n\n        /** @type {!Array.<Array.<*>>} */\n        var invokeQueue = [];\n\n        /** @type {!Array.<Function>} */\n        var runBlocks = [];\n\n        var config = invokeLater('$injector', 'invoke');\n\n        /** @type {angular.Module} */\n        var moduleInstance = {\n          // Private state\n          _invokeQueue: invokeQueue,\n          _runBlocks: runBlocks,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#requires\n           * @propertyOf angular.Module\n           * @returns {Array.<string>} List of module names which must be loaded before this module.\n           * @description\n           * Holds the list of modules which the injector will load before the current module is loaded.\n           */\n          requires: requires,\n\n          /**\n           * @ngdoc property\n           * @name angular.Module#name\n           * @propertyOf angular.Module\n           * @returns {string} Name of the module.\n           * @description\n           */\n          name: name,\n\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#provider\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} providerType Construction function for creating new instance of the service.\n           * @description\n           * See {@link AUTO.$provide#provider $provide.provider()}.\n           */\n          provider: invokeLater('$provide', 'provider'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#factory\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} providerFunction Function for creating new instance of the service.\n           * @description\n           * See {@link AUTO.$provide#factory $provide.factory()}.\n           */\n          factory: invokeLater('$provide', 'factory'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#service\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {Function} constructor A constructor function that will be instantiated.\n           * @description\n           * See {@link AUTO.$provide#service $provide.service()}.\n           */\n          service: invokeLater('$provide', 'service'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#value\n           * @methodOf angular.Module\n           * @param {string} name service name\n           * @param {*} object Service instance object.\n           * @description\n           * See {@link AUTO.$provide#value $provide.value()}.\n           */\n          value: invokeLater('$provide', 'value'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#constant\n           * @methodOf angular.Module\n           * @param {string} name constant name\n           * @param {*} object Constant value.\n           * @description\n           * Because the constant are fixed, they get applied before other provide methods.\n           * See {@link AUTO.$provide#constant $provide.constant()}.\n           */\n          constant: invokeLater('$provide', 'constant', 'unshift'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#filter\n           * @methodOf angular.Module\n           * @param {string} name Filter name.\n           * @param {Function} filterFactory Factory function for creating new instance of filter.\n           * @description\n           * See {@link ng.$filterProvider#register $filterProvider.register()}.\n           */\n          filter: invokeLater('$filterProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#controller\n           * @methodOf angular.Module\n           * @param {string} name Controller name.\n           * @param {Function} constructor Controller constructor function.\n           * @description\n           * See {@link ng.$controllerProvider#register $controllerProvider.register()}.\n           */\n          controller: invokeLater('$controllerProvider', 'register'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#directive\n           * @methodOf angular.Module\n           * @param {string} name directive name\n           * @param {Function} directiveFactory Factory function for creating new instance of\n           * directives.\n           * @description\n           * See {@link ng.$compileProvider#directive $compileProvider.directive()}.\n           */\n          directive: invokeLater('$compileProvider', 'directive'),\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#config\n           * @methodOf angular.Module\n           * @param {Function} configFn Execute this function on module load. Useful for service\n           *    configuration.\n           * @description\n           * Use this method to register work which needs to be performed on module loading.\n           */\n          config: config,\n\n          /**\n           * @ngdoc method\n           * @name angular.Module#run\n           * @methodOf angular.Module\n           * @param {Function} initializationFn Execute this function after injector creation.\n           *    Useful for application initialization.\n           * @description\n           * Use this method to register work which should be performed when the injector is done\n           * loading all modules.\n           */\n          run: function(block) {\n            runBlocks.push(block);\n            return this;\n          }\n        };\n\n        if (configFn) {\n          config(configFn);\n        }\n\n        return  moduleInstance;\n\n        /**\n         * @param {string} provider\n         * @param {string} method\n         * @param {String=} insertMethod\n         * @returns {angular.Module}\n         */\n        function invokeLater(provider, method, insertMethod) {\n          return function() {\n            invokeQueue[insertMethod || 'push']([provider, method, arguments]);\n            return moduleInstance;\n          }\n        }\n      });\n    };\n  });\n\n}\n\n/**\n * @ngdoc property\n * @name angular.version\n * @description\n * An object that contains information about the current AngularJS version. This object has the\n * following properties:\n *\n * - `full` – `{string}` – Full version string, such as \"0.9.18\".\n * - `major` – `{number}` – Major version number, such as \"0\".\n * - `minor` – `{number}` – Minor version number, such as \"9\".\n * - `dot` – `{number}` – Dot version number, such as \"18\".\n * - `codeName` – `{string}` – Code name of the release, such as \"jiggling-armfat\".\n */\nvar version = {\n  full: '1.0.8',    // all of these placeholder strings will be replaced by grunt's\n  major: 1,    // package task\n  minor: 0,\n  dot: 8,\n  codeName: 'bubble-burst'\n};\n\n\nfunction publishExternalAPI(angular){\n  extend(angular, {\n    'bootstrap': bootstrap,\n    'copy': copy,\n    'extend': extend,\n    'equals': equals,\n    'element': jqLite,\n    'forEach': forEach,\n    'injector': createInjector,\n    'noop':noop,\n    'bind':bind,\n    'toJson': toJson,\n    'fromJson': fromJson,\n    'identity':identity,\n    'isUndefined': isUndefined,\n    'isDefined': isDefined,\n    'isString': isString,\n    'isFunction': isFunction,\n    'isObject': isObject,\n    'isNumber': isNumber,\n    'isElement': isElement,\n    'isArray': isArray,\n    'version': version,\n    'isDate': isDate,\n    'lowercase': lowercase,\n    'uppercase': uppercase,\n    'callbacks': {counter: 0}\n  });\n\n  angularModule = setupModuleLoader(window);\n  try {\n    angularModule('ngLocale');\n  } catch (e) {\n    angularModule('ngLocale', []).provider('$locale', $LocaleProvider);\n  }\n\n  angularModule('ng', ['ngLocale'], ['$provide',\n    function ngModule($provide) {\n      $provide.provider('$compile', $CompileProvider).\n        directive({\n            a: htmlAnchorDirective,\n            input: inputDirective,\n            textarea: inputDirective,\n            form: formDirective,\n            script: scriptDirective,\n            select: selectDirective,\n            style: styleDirective,\n            option: optionDirective,\n            ngBind: ngBindDirective,\n            ngBindHtmlUnsafe: ngBindHtmlUnsafeDirective,\n            ngBindTemplate: ngBindTemplateDirective,\n            ngClass: ngClassDirective,\n            ngClassEven: ngClassEvenDirective,\n            ngClassOdd: ngClassOddDirective,\n            ngCsp: ngCspDirective,\n            ngCloak: ngCloakDirective,\n            ngController: ngControllerDirective,\n            ngForm: ngFormDirective,\n            ngHide: ngHideDirective,\n            ngInclude: ngIncludeDirective,\n            ngInit: ngInitDirective,\n            ngNonBindable: ngNonBindableDirective,\n            ngPluralize: ngPluralizeDirective,\n            ngRepeat: ngRepeatDirective,\n            ngShow: ngShowDirective,\n            ngStyle: ngStyleDirective,\n            ngSwitch: ngSwitchDirective,\n            ngSwitchWhen: ngSwitchWhenDirective,\n            ngSwitchDefault: ngSwitchDefaultDirective,\n            ngOptions: ngOptionsDirective,\n            ngView: ngViewDirective,\n            ngTransclude: ngTranscludeDirective,\n            ngModel: ngModelDirective,\n            ngList: ngListDirective,\n            ngChange: ngChangeDirective,\n            required: requiredDirective,\n            ngRequired: requiredDirective,\n            ngValue: ngValueDirective\n        }).\n        directive(ngAttributeAliasDirectives).\n        directive(ngEventDirectives);\n      $provide.provider({\n        $anchorScroll: $AnchorScrollProvider,\n        $browser: $BrowserProvider,\n        $cacheFactory: $CacheFactoryProvider,\n        $controller: $ControllerProvider,\n        $document: $DocumentProvider,\n        $exceptionHandler: $ExceptionHandlerProvider,\n        $filter: $FilterProvider,\n        $interpolate: $InterpolateProvider,\n        $http: $HttpProvider,\n        $httpBackend: $HttpBackendProvider,\n        $location: $LocationProvider,\n        $log: $LogProvider,\n        $parse: $ParseProvider,\n        $route: $RouteProvider,\n        $routeParams: $RouteParamsProvider,\n        $rootScope: $RootScopeProvider,\n        $q: $QProvider,\n        $sniffer: $SnifferProvider,\n        $templateCache: $TemplateCacheProvider,\n        $timeout: $TimeoutProvider,\n        $window: $WindowProvider\n      });\n    }\n  ]);\n}\n\n//////////////////////////////////\n//JQLite\n//////////////////////////////////\n\n/**\n * @ngdoc function\n * @name angular.element\n * @function\n *\n * @description\n * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.\n * `angular.element` can be either an alias for [jQuery](http://api.jquery.com/jQuery/) function, if\n * jQuery is available, or a function that wraps the element or string in Angular's jQuery lite\n * implementation (commonly referred to as jqLite).\n *\n * Real jQuery always takes precedence over jqLite, provided it was loaded before `DOMContentLoaded`\n * event fired.\n *\n * jqLite is a tiny, API-compatible subset of jQuery that allows\n * Angular to manipulate the DOM. jqLite implements only the most commonly needed functionality\n * within a very small footprint, so only a subset of the jQuery API - methods, arguments and\n * invocation styles - are supported.\n *\n * Note: All element references in Angular are always wrapped with jQuery or jqLite; they are never\n * raw DOM references.\n *\n * ## Angular's jqLite\n * Angular's lite version of jQuery provides only the following jQuery methods:\n *\n * - [addClass()](http://api.jquery.com/addClass/)\n * - [after()](http://api.jquery.com/after/)\n * - [append()](http://api.jquery.com/append/)\n * - [attr()](http://api.jquery.com/attr/)\n * - [bind()](http://api.jquery.com/bind/) - Does not support namespaces\n * - [children()](http://api.jquery.com/children/) - Does not support selectors\n * - [clone()](http://api.jquery.com/clone/)\n * - [contents()](http://api.jquery.com/contents/)\n * - [css()](http://api.jquery.com/css/)\n * - [data()](http://api.jquery.com/data/)\n * - [eq()](http://api.jquery.com/eq/)\n * - [find()](http://api.jquery.com/find/) - Limited to lookups by tag name\n * - [hasClass()](http://api.jquery.com/hasClass/)\n * - [html()](http://api.jquery.com/html/)\n * - [next()](http://api.jquery.com/next/) - Does not support selectors\n * - [parent()](http://api.jquery.com/parent/) - Does not support selectors\n * - [prepend()](http://api.jquery.com/prepend/)\n * - [prop()](http://api.jquery.com/prop/)\n * - [ready()](http://api.jquery.com/ready/)\n * - [remove()](http://api.jquery.com/remove/)\n * - [removeAttr()](http://api.jquery.com/removeAttr/)\n * - [removeClass()](http://api.jquery.com/removeClass/)\n * - [removeData()](http://api.jquery.com/removeData/)\n * - [replaceWith()](http://api.jquery.com/replaceWith/)\n * - [text()](http://api.jquery.com/text/)\n * - [toggleClass()](http://api.jquery.com/toggleClass/)\n * - [triggerHandler()](http://api.jquery.com/triggerHandler/) - Doesn't pass native event objects to handlers.\n * - [unbind()](http://api.jquery.com/unbind/) - Does not support namespaces\n * - [val()](http://api.jquery.com/val/)\n * - [wrap()](http://api.jquery.com/wrap/)\n *\n * ## jQuery/jqLite Extras\n * Angular also provides the following additional methods and events to both jQuery and jqLite:\n *\n * ### Events\n * - `$destroy` - AngularJS intercepts all jqLite/jQuery's DOM destruction apis and fires this event\n *    on all DOM nodes being removed.  This can be used to clean up and 3rd party bindings to the DOM\n *    element before it is removed.\n * ### Methods\n * - `controller(name)` - retrieves the controller of the current element or its parent. By default\n *   retrieves controller associated with the `ngController` directive. If `name` is provided as\n *   camelCase directive name, then the controller for this directive will be retrieved (e.g.\n *   `'ngModel'`).\n * - `injector()` - retrieves the injector of the current element or its parent.\n * - `scope()` - retrieves the {@link api/ng.$rootScope.Scope scope} of the current\n *   element or its parent.\n * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top\n *   parent element is reached.\n *\n * @param {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.\n * @returns {Object} jQuery object.\n */\n\nvar jqCache = JQLite.cache = {},\n    jqName = JQLite.expando = 'ng-' + new Date().getTime(),\n    jqId = 1,\n    addEventListenerFn = (window.document.addEventListener\n      ? function(element, type, fn) {element.addEventListener(type, fn, false);}\n      : function(element, type, fn) {element.attachEvent('on' + type, fn);}),\n    removeEventListenerFn = (window.document.removeEventListener\n      ? function(element, type, fn) {element.removeEventListener(type, fn, false); }\n      : function(element, type, fn) {element.detachEvent('on' + type, fn); });\n\nfunction jqNextId() { return ++jqId; }\n\n\nvar SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\nvar MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n/**\n * Converts snake_case to camelCase.\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction camelCase(name) {\n  return name.\n    replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n      return offset ? letter.toUpperCase() : letter;\n    }).\n    replace(MOZ_HACK_REGEXP, 'Moz$1');\n}\n\n/////////////////////////////////////////////\n// jQuery mutation patch\n//\n// In conjunction with bindJQuery intercepts all jQuery's DOM destruction apis and fires a\n// $destroy event on all DOM nodes being removed.\n//\n/////////////////////////////////////////////\n\nfunction JQLitePatchJQueryRemove(name, dispatchThis, filterElems, getterIfNoArguments) {\n  var originalJqFn = jQuery.fn[name];\n  originalJqFn = originalJqFn.$original || originalJqFn;\n  removePatch.$original = originalJqFn;\n  jQuery.fn[name] = removePatch;\n\n  function removePatch(param) {\n    var list = filterElems && param ? [this.filter(param)] : [this],\n        fireEvent = dispatchThis,\n        set, setIndex, setLength,\n        element, childIndex, childLength, children;\n\n    if (!getterIfNoArguments || param != null) {\n      while(list.length) {\n        set = list.shift();\n        for(setIndex = 0, setLength = set.length; setIndex < setLength; setIndex++) {\n          element = jqLite(set[setIndex]);\n          if (fireEvent) {\n            element.triggerHandler('$destroy');\n          } else {\n            fireEvent = !fireEvent;\n          }\n          for(childIndex = 0, childLength = (children = element.children()).length;\n              childIndex < childLength;\n              childIndex++) {\n            list.push(jQuery(children[childIndex]));\n          }\n        }\n      }\n    }\n    return originalJqFn.apply(this, arguments);\n  }\n}\n\n/////////////////////////////////////////////\nfunction JQLite(element) {\n  if (element instanceof JQLite) {\n    return element;\n  }\n  if (!(this instanceof JQLite)) {\n    if (isString(element) && element.charAt(0) != '<') {\n      throw Error('selectors not implemented');\n    }\n    return new JQLite(element);\n  }\n\n  if (isString(element)) {\n    var div = document.createElement('div');\n    // Read about the NoScope elements here:\n    // http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    div.innerHTML = '<div>&#160;</div>' + element; // IE insanity to make NoScope elements work!\n    div.removeChild(div.firstChild); // remove the superfluous div\n    JQLiteAddNodes(this, div.childNodes);\n    this.remove(); // detach the elements from the temporary DOM div.\n  } else {\n    JQLiteAddNodes(this, element);\n  }\n}\n\nfunction JQLiteClone(element) {\n  return element.cloneNode(true);\n}\n\nfunction JQLiteDealoc(element){\n  JQLiteRemoveData(element);\n  for ( var i = 0, children = element.childNodes || []; i < children.length; i++) {\n    JQLiteDealoc(children[i]);\n  }\n}\n\nfunction JQLiteUnbind(element, type, fn) {\n  var events = JQLiteExpandoStore(element, 'events'),\n      handle = JQLiteExpandoStore(element, 'handle');\n\n  if (!handle) return; //no listeners registered\n\n  if (isUndefined(type)) {\n    forEach(events, function(eventHandler, type) {\n      removeEventListenerFn(element, type, eventHandler);\n      delete events[type];\n    });\n  } else {\n    if (isUndefined(fn)) {\n      removeEventListenerFn(element, type, events[type]);\n      delete events[type];\n    } else {\n      arrayRemove(events[type] || [], fn);\n    }\n  }\n}\n\nfunction JQLiteRemoveData(element) {\n  var expandoId = element[jqName],\n      expandoStore = jqCache[expandoId];\n\n  if (expandoStore) {\n    if (expandoStore.handle) {\n      expandoStore.events.$destroy && expandoStore.handle({}, '$destroy');\n      JQLiteUnbind(element);\n    }\n    delete jqCache[expandoId];\n    element[jqName] = undefined; // ie does not allow deletion of attributes on elements.\n  }\n}\n\nfunction JQLiteExpandoStore(element, key, value) {\n  var expandoId = element[jqName],\n      expandoStore = jqCache[expandoId || -1];\n\n  if (isDefined(value)) {\n    if (!expandoStore) {\n      element[jqName] = expandoId = jqNextId();\n      expandoStore = jqCache[expandoId] = {};\n    }\n    expandoStore[key] = value;\n  } else {\n    return expandoStore && expandoStore[key];\n  }\n}\n\nfunction JQLiteData(element, key, value) {\n  var data = JQLiteExpandoStore(element, 'data'),\n      isSetter = isDefined(value),\n      keyDefined = !isSetter && isDefined(key),\n      isSimpleGetter = keyDefined && !isObject(key);\n\n  if (!data && !isSimpleGetter) {\n    JQLiteExpandoStore(element, 'data', data = {});\n  }\n\n  if (isSetter) {\n    data[key] = value;\n  } else {\n    if (keyDefined) {\n      if (isSimpleGetter) {\n        // don't create data in this case.\n        return data && data[key];\n      } else {\n        extend(data, key);\n      }\n    } else {\n      return data;\n    }\n  }\n}\n\nfunction JQLiteHasClass(element, selector) {\n  return ((\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").\n      indexOf( \" \" + selector + \" \" ) > -1);\n}\n\nfunction JQLiteRemoveClass(element, cssClasses) {\n  if (cssClasses) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      element.className = trim(\n          (\" \" + element.className + \" \")\n          .replace(/[\\n\\t]/g, \" \")\n          .replace(\" \" + trim(cssClass) + \" \", \" \")\n      );\n    });\n  }\n}\n\nfunction JQLiteAddClass(element, cssClasses) {\n  if (cssClasses) {\n    forEach(cssClasses.split(' '), function(cssClass) {\n      if (!JQLiteHasClass(element, cssClass)) {\n        element.className = trim(element.className + ' ' + trim(cssClass));\n      }\n    });\n  }\n}\n\nfunction JQLiteAddNodes(root, elements) {\n  if (elements) {\n    elements = (!elements.nodeName && isDefined(elements.length) && !isWindow(elements))\n      ? elements\n      : [ elements ];\n    for(var i=0; i < elements.length; i++) {\n      root.push(elements[i]);\n    }\n  }\n}\n\nfunction JQLiteController(element, name) {\n  return JQLiteInheritedData(element, '$' + (name || 'ngController' ) + 'Controller');\n}\n\nfunction JQLiteInheritedData(element, name, value) {\n  element = jqLite(element);\n\n  // if element is the document object work with the html element instead\n  // this makes $(document).scope() possible\n  if(element[0].nodeType == 9) {\n    element = element.find('html');\n  }\n\n  while (element.length) {\n    if (value = element.data(name)) return value;\n    element = element.parent();\n  }\n}\n\n//////////////////////////////////////////\n// Functions which are declared directly.\n//////////////////////////////////////////\nvar JQLitePrototype = JQLite.prototype = {\n  ready: function(fn) {\n    var fired = false;\n\n    function trigger() {\n      if (fired) return;\n      fired = true;\n      fn();\n    }\n\n    this.bind('DOMContentLoaded', trigger); // works for modern browsers and IE9\n    // we can not use jqLite since we are not done loading and jQuery could be loaded later.\n    JQLite(window).bind('load', trigger); // fallback to window.onload for others\n  },\n  toString: function() {\n    var value = [];\n    forEach(this, function(e){ value.push('' + e);});\n    return '[' + value.join(', ') + ']';\n  },\n\n  eq: function(index) {\n      return (index >= 0) ? jqLite(this[index]) : jqLite(this[this.length + index]);\n  },\n\n  length: 0,\n  push: push,\n  sort: [].sort,\n  splice: [].splice\n};\n\n//////////////////////////////////////////\n// Functions iterating getter/setters.\n// these functions return self on setter and\n// value on get.\n//////////////////////////////////////////\nvar BOOLEAN_ATTR = {};\nforEach('multiple,selected,checked,disabled,readOnly,required'.split(','), function(value) {\n  BOOLEAN_ATTR[lowercase(value)] = value;\n});\nvar BOOLEAN_ELEMENTS = {};\nforEach('input,select,option,textarea,button,form'.split(','), function(value) {\n  BOOLEAN_ELEMENTS[uppercase(value)] = true;\n});\n\nfunction getBooleanAttrName(element, name) {\n  // check dom last since we will most likely fail on name\n  var booleanAttr = BOOLEAN_ATTR[name.toLowerCase()];\n\n  // booleanAttr is here twice to minimize DOM access\n  return booleanAttr && BOOLEAN_ELEMENTS[element.nodeName] && booleanAttr;\n}\n\nforEach({\n  data: JQLiteData,\n  inheritedData: JQLiteInheritedData,\n\n  scope: function(element) {\n    return JQLiteInheritedData(element, '$scope');\n  },\n\n  controller: JQLiteController ,\n\n  injector: function(element) {\n    return JQLiteInheritedData(element, '$injector');\n  },\n\n  removeAttr: function(element,name) {\n    element.removeAttribute(name);\n  },\n\n  hasClass: JQLiteHasClass,\n\n  css: function(element, name, value) {\n    name = camelCase(name);\n\n    if (isDefined(value)) {\n      element.style[name] = value;\n    } else {\n      var val;\n\n      if (msie <= 8) {\n        // this is some IE specific weirdness that jQuery 1.6.4 does not sure why\n        val = element.currentStyle && element.currentStyle[name];\n        if (val === '') val = 'auto';\n      }\n\n      val = val || element.style[name];\n\n      if (msie <= 8) {\n        // jquery weirdness :-/\n        val = (val === '') ? undefined : val;\n      }\n\n      return  val;\n    }\n  },\n\n  attr: function(element, name, value){\n    var lowercasedName = lowercase(name);\n    if (BOOLEAN_ATTR[lowercasedName]) {\n      if (isDefined(value)) {\n        if (!!value) {\n          element[name] = true;\n          element.setAttribute(name, lowercasedName);\n        } else {\n          element[name] = false;\n          element.removeAttribute(lowercasedName);\n        }\n      } else {\n        return (element[name] ||\n                 (element.attributes.getNamedItem(name)|| noop).specified)\n               ? lowercasedName\n               : undefined;\n      }\n    } else if (isDefined(value)) {\n      element.setAttribute(name, value);\n    } else if (element.getAttribute) {\n      // the extra argument \"2\" is to get the right thing for a.href in IE, see jQuery code\n      // some elements (e.g. Document) don't have get attribute, so return undefined\n      var ret = element.getAttribute(name, 2);\n      // normalize non-existing attributes to undefined (as jQuery)\n      return ret === null ? undefined : ret;\n    }\n  },\n\n  prop: function(element, name, value) {\n    if (isDefined(value)) {\n      element[name] = value;\n    } else {\n      return element[name];\n    }\n  },\n\n  text: extend((msie < 9)\n      ? function(element, value) {\n        if (element.nodeType == 1 /** Element */) {\n          if (isUndefined(value))\n            return element.innerText;\n          element.innerText = value;\n        } else {\n          if (isUndefined(value))\n            return element.nodeValue;\n          element.nodeValue = value;\n        }\n      }\n      : function(element, value) {\n        if (isUndefined(value)) {\n          return element.textContent;\n        }\n        element.textContent = value;\n      }, {$dv:''}),\n\n  val: function(element, value) {\n    if (isUndefined(value)) {\n      if (nodeName_(element) === 'SELECT' && element.multiple) {\n        var result = [];\n        forEach(element.options, function (option) {\n          if (option.selected) {\n            result.push(option.value || option.text);\n          }\n        });\n        return result.length === 0 ? null : result;\n      }\n      return element.value;\n    }\n    element.value = value;\n  },\n\n  html: function(element, value) {\n    if (isUndefined(value)) {\n      return element.innerHTML;\n    }\n    for (var i = 0, childNodes = element.childNodes; i < childNodes.length; i++) {\n      JQLiteDealoc(childNodes[i]);\n    }\n    element.innerHTML = value;\n  }\n}, function(fn, name){\n  /**\n   * Properties: writes return selection, reads return first value\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var i, key;\n\n    // JQLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it\n    // in a way that survives minification.\n    if (((fn.length == 2 && (fn !== JQLiteHasClass && fn !== JQLiteController)) ? arg1 : arg2) === undefined) {\n      if (isObject(arg1)) {\n\n        // we are a write, but the object properties are the key/values\n        for(i=0; i < this.length; i++) {\n          if (fn === JQLiteData) {\n            // data() takes the whole object in jQuery\n            fn(this[i], arg1);\n          } else {\n            for (key in arg1) {\n              fn(this[i], key, arg1[key]);\n            }\n          }\n        }\n        // return self for chaining\n        return this;\n      } else {\n        // we are a read, so read the first child.\n        if (this.length)\n          return fn(this[0], arg1, arg2);\n      }\n    } else {\n      // we are a write, so apply to all children\n      for(i=0; i < this.length; i++) {\n        fn(this[i], arg1, arg2);\n      }\n      // return self for chaining\n      return this;\n    }\n    return fn.$dv;\n  };\n});\n\nfunction createEventHandler(element, events) {\n  var eventHandler = function (event, type) {\n    if (!event.preventDefault) {\n      event.preventDefault = function() {\n        event.returnValue = false; //ie\n      };\n    }\n\n    if (!event.stopPropagation) {\n      event.stopPropagation = function() {\n        event.cancelBubble = true; //ie\n      };\n    }\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    if (isUndefined(event.defaultPrevented)) {\n      var prevent = event.preventDefault;\n      event.preventDefault = function() {\n        event.defaultPrevented = true;\n        prevent.call(event);\n      };\n      event.defaultPrevented = false;\n    }\n\n    event.isDefaultPrevented = function() {\n      return event.defaultPrevented;\n    };\n\n    forEach(events[type || event.type], function(fn) {\n      fn.call(element, event);\n    });\n\n    // Remove monkey-patched methods (IE),\n    // as they would cause memory leaks in IE8.\n    if (msie <= 8) {\n      // IE7/8 does not allow to delete property on native object\n      event.preventDefault = null;\n      event.stopPropagation = null;\n      event.isDefaultPrevented = null;\n    } else {\n      // It shouldn't affect normal browsers (native methods are defined on prototype).\n      delete event.preventDefault;\n      delete event.stopPropagation;\n      delete event.isDefaultPrevented;\n    }\n  };\n  eventHandler.elem = element;\n  return eventHandler;\n}\n\n//////////////////////////////////////////\n// Functions iterating traversal.\n// These functions chain results into a single\n// selector.\n//////////////////////////////////////////\nforEach({\n  removeData: JQLiteRemoveData,\n\n  dealoc: JQLiteDealoc,\n\n  bind: function bindFn(element, type, fn){\n    var events = JQLiteExpandoStore(element, 'events'),\n        handle = JQLiteExpandoStore(element, 'handle');\n\n    if (!events) JQLiteExpandoStore(element, 'events', events = {});\n    if (!handle) JQLiteExpandoStore(element, 'handle', handle = createEventHandler(element, events));\n\n    forEach(type.split(' '), function(type){\n      var eventFns = events[type];\n\n      if (!eventFns) {\n        if (type == 'mouseenter' || type == 'mouseleave') {\n          var contains = document.body.contains || document.body.compareDocumentPosition ?\n          function( a, b ) {\n            var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a === bup || !!( bup && bup.nodeType === 1 && (\n              adown.contains ?\n              adown.contains( bup ) :\n              a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n              ));\n            } :\n            function( a, b ) {\n              if ( b ) {\n                while ( (b = b.parentNode) ) {\n                  if ( b === a ) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            };\t\n\n          events[type] = [];\n\t\t\n\t\t  // Refer to jQuery's implementation of mouseenter & mouseleave\n          // Read about mouseenter and mouseleave:\n          // http://www.quirksmode.org/js/events_mouse.html#link8\n          var eventmap = { mouseleave : \"mouseout\", mouseenter : \"mouseover\"}          \n          bindFn(element, eventmap[type], function(event) {\n            var ret, target = this, related = event.relatedTarget;\n            // For mousenter/leave call the handler if related is outside the target.\n            // NB: No relatedTarget if the mouse left/entered the browser window\n            if ( !related || (related !== target && !contains(target, related)) ){\n              handle(event, type);\n            }\t\n\n          });\n\n        } else {\n          addEventListenerFn(element, type, handle);\n          events[type] = [];\n        }\n        eventFns = events[type]\n      }\n      eventFns.push(fn);\n    });\n  },\n\n  unbind: JQLiteUnbind,\n\n  replaceWith: function(element, replaceNode) {\n    var index, parent = element.parentNode;\n    JQLiteDealoc(element);\n    forEach(new JQLite(replaceNode), function(node){\n      if (index) {\n        parent.insertBefore(node, index.nextSibling);\n      } else {\n        parent.replaceChild(node, element);\n      }\n      index = node;\n    });\n  },\n\n  children: function(element) {\n    var children = [];\n    forEach(element.childNodes, function(element){\n      if (element.nodeType === 1)\n        children.push(element);\n    });\n    return children;\n  },\n\n  contents: function(element) {\n    return element.childNodes || [];\n  },\n\n  append: function(element, node) {\n    forEach(new JQLite(node), function(child){\n      if (element.nodeType === 1)\n        element.appendChild(child);\n    });\n  },\n\n  prepend: function(element, node) {\n    if (element.nodeType === 1) {\n      var index = element.firstChild;\n      forEach(new JQLite(node), function(child){\n        element.insertBefore(child, index);\n      });\n    }\n  },\n\n  wrap: function(element, wrapNode) {\n    wrapNode = jqLite(wrapNode)[0];\n    var parent = element.parentNode;\n    if (parent) {\n      parent.replaceChild(wrapNode, element);\n    }\n    wrapNode.appendChild(element);\n  },\n\n  remove: function(element) {\n    JQLiteDealoc(element);\n    var parent = element.parentNode;\n    if (parent) parent.removeChild(element);\n  },\n\n  after: function(element, newElement) {\n    var index = element, parent = element.parentNode;\n    forEach(new JQLite(newElement), function(node){\n      parent.insertBefore(node, index.nextSibling);\n      index = node;\n    });\n  },\n\n  addClass: JQLiteAddClass,\n  removeClass: JQLiteRemoveClass,\n\n  toggleClass: function(element, selector, condition) {\n    if (isUndefined(condition)) {\n      condition = !JQLiteHasClass(element, selector);\n    }\n    (condition ? JQLiteAddClass : JQLiteRemoveClass)(element, selector);\n  },\n\n  parent: function(element) {\n    var parent = element.parentNode;\n    return parent && parent.nodeType !== 11 ? parent : null;\n  },\n\n  next: function(element) {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    }\n\n    // IE8 doesn't have nextElementSibling\n    var elm = element.nextSibling;\n    while (elm != null && elm.nodeType !== 1) {\n      elm = elm.nextSibling;\n    }\n    return elm;\n  },\n\n  find: function(element, selector) {\n    return element.getElementsByTagName(selector);\n  },\n\n  clone: JQLiteClone,\n\n  triggerHandler: function(element, eventName) {\n    var eventFns = (JQLiteExpandoStore(element, 'events') || {})[eventName];\n\n    forEach(eventFns, function(fn) {\n      fn.call(element, null);\n    });\n  }\n}, function(fn, name){\n  /**\n   * chaining functions\n   */\n  JQLite.prototype[name] = function(arg1, arg2) {\n    var value;\n    for(var i=0; i < this.length; i++) {\n      if (value == undefined) {\n        value = fn(this[i], arg1, arg2);\n        if (value !== undefined) {\n          // any function which returns a value needs to be wrapped\n          value = jqLite(value);\n        }\n      } else {\n        JQLiteAddNodes(value, fn(this[i], arg1, arg2));\n      }\n    }\n    return value == undefined ? this : value;\n  };\n});\n\n/**\n * Computes a hash of an 'obj'.\n * Hash of a:\n *  string is string\n *  number is number as string\n *  object is either result of calling $$hashKey function on the object or uniquely generated id,\n *         that is also assigned to the $$hashKey property of the object.\n *\n * @param obj\n * @returns {string} hash string such that the same input will have the same hash string.\n *         The resulting string key is in 'type:hashKey' format.\n */\nfunction hashKey(obj) {\n  var objType = typeof obj,\n      key;\n\n  if (objType == 'object' && obj !== null) {\n    if (typeof (key = obj.$$hashKey) == 'function') {\n      // must invoke on object to keep the right this\n      key = obj.$$hashKey();\n    } else if (key === undefined) {\n      key = obj.$$hashKey = nextUid();\n    }\n  } else {\n    key = obj;\n  }\n\n  return objType + ':' + key;\n}\n\n/**\n * HashMap which can use objects as keys\n */\nfunction HashMap(array){\n  forEach(array, this.put, this);\n}\nHashMap.prototype = {\n  /**\n   * Store key value pair\n   * @param key key to store can be any type\n   * @param value value to store can be any type\n   */\n  put: function(key, value) {\n    this[hashKey(key)] = value;\n  },\n\n  /**\n   * @param key\n   * @returns the value for the key\n   */\n  get: function(key) {\n    return this[hashKey(key)];\n  },\n\n  /**\n   * Remove the key/value pair\n   * @param key\n   */\n  remove: function(key) {\n    var value = this[key = hashKey(key)];\n    delete this[key];\n    return value;\n  }\n};\n\n/**\n * A map where multiple values can be added to the same key such that they form a queue.\n * @returns {HashQueueMap}\n */\nfunction HashQueueMap() {}\nHashQueueMap.prototype = {\n  /**\n   * Same as array push, but using an array as the value for the hash\n   */\n  push: function(key, value) {\n    var array = this[key = hashKey(key)];\n    if (!array) {\n      this[key] = [value];\n    } else {\n      array.push(value);\n    }\n  },\n\n  /**\n   * Same as array shift, but using an array as the value for the hash\n   */\n  shift: function(key) {\n    var array = this[key = hashKey(key)];\n    if (array) {\n      if (array.length == 1) {\n        delete this[key];\n        return array[0];\n      } else {\n        return array.shift();\n      }\n    }\n  },\n\n  /**\n   * return the first item without deleting it\n   */\n  peek: function(key) {\n    var array = this[hashKey(key)];\n    if (array) {\n    return array[0];\n    }\n  }\n};\n\n/**\n * @ngdoc function\n * @name angular.injector\n * @function\n *\n * @description\n * Creates an injector function that can be used for retrieving services as well as for\n * dependency injection (see {@link guide/di dependency injection}).\n *\n\n * @param {Array.<string|Function>} modules A list of module functions or their aliases. See\n *        {@link angular.module}. The `ng` module must be explicitly added.\n * @returns {function()} Injector function. See {@link AUTO.$injector $injector}.\n *\n * @example\n * Typical usage\n * <pre>\n *   // create an injector\n *   var $injector = angular.injector(['ng']);\n *\n *   // use the injector to kick off your application\n *   // use the type inference to auto inject arguments, or use implicit injection\n *   $injector.invoke(function($rootScope, $compile, $document){\n *     $compile($document)($rootScope);\n *     $rootScope.$digest();\n *   });\n * </pre>\n */\n\n\n/**\n * @ngdoc overview\n * @name AUTO\n * @description\n *\n * Implicit module which gets automatically added to each {@link AUTO.$injector $injector}.\n */\n\nvar FN_ARGS = /^function\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /^\\s*(_?)(\\S+?)\\1\\s*$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nfunction annotate(fn) {\n  var $inject,\n      fnText,\n      argDecl,\n      last;\n\n  if (typeof fn == 'function') {\n    if (!($inject = fn.$inject)) {\n      $inject = [];\n      fnText = fn.toString().replace(STRIP_COMMENTS, '');\n      argDecl = fnText.match(FN_ARGS);\n      forEach(argDecl[1].split(FN_ARG_SPLIT), function(arg){\n        arg.replace(FN_ARG, function(all, underscore, name){\n          $inject.push(name);\n        });\n      });\n      fn.$inject = $inject;\n    }\n  } else if (isArray(fn)) {\n    last = fn.length - 1;\n    assertArgFn(fn[last], 'fn');\n    $inject = fn.slice(0, last);\n  } else {\n    assertArgFn(fn, 'fn', true);\n  }\n  return $inject;\n}\n\n///////////////////////////////////////\n\n/**\n * @ngdoc object\n * @name AUTO.$injector\n * @function\n *\n * @description\n *\n * `$injector` is used to retrieve object instances as defined by\n * {@link AUTO.$provide provider}, instantiate types, invoke methods,\n * and load modules.\n *\n * The following always holds true:\n *\n * <pre>\n *   var $injector = angular.injector();\n *   expect($injector.get('$injector')).toBe($injector);\n *   expect($injector.invoke(function($injector){\n *     return $injector;\n *   }).toBe($injector);\n * </pre>\n *\n * # Injection Function Annotation\n *\n * JavaScript does not have annotations, and annotations are needed for dependency injection. The\n * following are all valid ways of annotating function with injection arguments and are equivalent.\n *\n * <pre>\n *   // inferred (only works if code not minified/obfuscated)\n *   $injector.invoke(function(serviceA){});\n *\n *   // annotated\n *   function explicit(serviceA) {};\n *   explicit.$inject = ['serviceA'];\n *   $injector.invoke(explicit);\n *\n *   // inline\n *   $injector.invoke(['serviceA', function(serviceA){}]);\n * </pre>\n *\n * ## Inference\n *\n * In JavaScript calling `toString()` on a function returns the function definition. The definition can then be\n * parsed and the function arguments can be extracted. *NOTE:* This does not work with minification, and obfuscation\n * tools since these tools change the argument names.\n *\n * ## `$inject` Annotation\n * By adding a `$inject` property onto a function the injection parameters can be specified.\n *\n * ## Inline\n * As an array of injection names, where the last item in the array is the function to call.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#get\n * @methodOf AUTO.$injector\n *\n * @description\n * Return an instance of the service.\n *\n * @param {string} name The name of the instance to retrieve.\n * @return {*} The instance.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#invoke\n * @methodOf AUTO.$injector\n *\n * @description\n * Invoke the method and supply the method arguments from the `$injector`.\n *\n * @param {!function} fn The function to invoke. The function arguments come form the function annotation.\n * @param {Object=} self The `this` for the invoked method.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\n *   the `$injector` is consulted.\n * @returns {*} the value returned by the invoked `fn` function.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#instantiate\n * @methodOf AUTO.$injector\n * @description\n * Create a new instance of JS type. The method takes a constructor function invokes the new operator and supplies\n * all of the arguments to the constructor function as specified by the constructor annotation.\n *\n * @param {function} Type Annotated constructor function.\n * @param {Object=} locals Optional object. If preset then any argument names are read from this object first, before\n *   the `$injector` is consulted.\n * @returns {Object} new instance of `Type`.\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$injector#annotate\n * @methodOf AUTO.$injector\n *\n * @description\n * Returns an array of service names which the function is requesting for injection. This API is used by the injector\n * to determine which services need to be injected into the function when the function is invoked. There are three\n * ways in which the function can be annotated with the needed dependencies.\n *\n * # Argument names\n *\n * The simplest form is to extract the dependencies from the arguments of the function. This is done by converting\n * the function into a string using `toString()` method and extracting the argument names.\n * <pre>\n *   // Given\n *   function MyController($scope, $route) {\n *     // ...\n *   }\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * </pre>\n *\n * This method does not work with code minfication / obfuscation. For this reason the following annotation strategies\n * are supported.\n *\n * # The `$inject` property\n *\n * If a function has an `$inject` property and its value is an array of strings, then the strings represent names of\n * services to be injected into the function.\n * <pre>\n *   // Given\n *   var MyController = function(obfuscatedScope, obfuscatedRoute) {\n *     // ...\n *   }\n *   // Define function dependencies\n *   MyController.$inject = ['$scope', '$route'];\n *\n *   // Then\n *   expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n * </pre>\n *\n * # The array notation\n *\n * It is often desirable to inline Injected functions and that's when setting the `$inject` property is very\n * inconvenient. In these situations using the array notation to specify the dependencies in a way that survives\n * minification is a better choice:\n *\n * <pre>\n *   // We wish to write this (not minification / obfuscation safe)\n *   injector.invoke(function($compile, $rootScope) {\n *     // ...\n *   });\n *\n *   // We are forced to write break inlining\n *   var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n *     // ...\n *   };\n *   tmpFn.$inject = ['$compile', '$rootScope'];\n *   injector.invoke(tmpFn);\n *\n *   // To better support inline function the inline annotation is supported\n *   injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n *     // ...\n *   }]);\n *\n *   // Therefore\n *   expect(injector.annotate(\n *      ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n *    ).toEqual(['$compile', '$rootScope']);\n * </pre>\n *\n * @param {function|Array.<string|Function>} fn Function for which dependent service names need to be retrieved as described\n *   above.\n *\n * @returns {Array.<string>} The names of the services which the function requires.\n */\n\n\n\n\n/**\n * @ngdoc object\n * @name AUTO.$provide\n *\n * @description\n *\n * Use `$provide` to register new providers with the `$injector`. The providers are the factories for the instance.\n * The providers share the same name as the instance they create with `Provider` suffixed to them.\n *\n * A provider is an object with a `$get()` method. The injector calls the `$get` method to create a new instance of\n * a service. The Provider can have additional methods which would allow for configuration of the provider.\n *\n * <pre>\n *   function GreetProvider() {\n *     var salutation = 'Hello';\n *\n *     this.salutation = function(text) {\n *       salutation = text;\n *     };\n *\n *     this.$get = function() {\n *       return function (name) {\n *         return salutation + ' ' + name + '!';\n *       };\n *     };\n *   }\n *\n *   describe('Greeter', function(){\n *\n *     beforeEach(module(function($provide) {\n *       $provide.provider('greet', GreetProvider);\n *     }));\n *\n *     it('should greet', inject(function(greet) {\n *       expect(greet('angular')).toEqual('Hello angular!');\n *     }));\n *\n *     it('should allow configuration of salutation', function() {\n *       module(function(greetProvider) {\n *         greetProvider.salutation('Ahoj');\n *       });\n *       inject(function(greet) {\n *         expect(greet('angular')).toEqual('Ahoj angular!');\n *       });\n *     });\n * </pre>\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#provider\n * @methodOf AUTO.$provide\n * @description\n *\n * Register a provider for a service. The providers can be retrieved and can have additional configuration methods.\n *\n * @param {string} name The name of the instance. NOTE: the provider will be available under `name + 'Provider'` key.\n * @param {(Object|function())} provider If the provider is:\n *\n *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n *               {@link AUTO.$injector#invoke $injector.invoke()} when an instance needs to be created.\n *   - `Constructor`: a new instance of the provider will be created using\n *               {@link AUTO.$injector#instantiate $injector.instantiate()}, then treated as `object`.\n *\n * @returns {Object} registered provider instance\n */\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#factory\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for configuring services if only `$get` method is required.\n *\n * @param {string} name The name of the instance.\n * @param {function()} $getFn The $getFn for the instance creation. Internally this is a short hand for\n * `$provide.provider(name, {$get: $getFn})`.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#service\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for registering service of given class.\n *\n * @param {string} name The name of the instance.\n * @param {Function} constructor A class (constructor function) that will be instantiated.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#value\n * @methodOf AUTO.$provide\n * @description\n *\n * A short hand for configuring services if the `$get` method is a constant.\n *\n * @param {string} name The name of the instance.\n * @param {*} value The value.\n * @returns {Object} registered provider instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#constant\n * @methodOf AUTO.$provide\n * @description\n *\n * A constant value, but unlike {@link AUTO.$provide#value value} it can be injected\n * into configuration function (other modules) and it is not interceptable by\n * {@link AUTO.$provide#decorator decorator}.\n *\n * @param {string} name The name of the constant.\n * @param {*} value The constant value.\n * @returns {Object} registered instance\n */\n\n\n/**\n * @ngdoc method\n * @name AUTO.$provide#decorator\n * @methodOf AUTO.$provide\n * @description\n *\n * Decoration of service, allows the decorator to intercept the service instance creation. The\n * returned instance may be the original instance, or a new instance which delegates to the\n * original instance.\n *\n * @param {string} name The name of the service to decorate.\n * @param {function()} decorator This function will be invoked when the service needs to be\n *    instantiated. The function is called using the {@link AUTO.$injector#invoke\n *    injector.invoke} method and is therefore fully injectable. Local injection arguments:\n *\n *    * `$delegate` - The original service instance, which can be monkey patched, configured,\n *      decorated or delegated to.\n */\n\n\nfunction createInjector(modulesToLoad) {\n  var INSTANTIATING = {},\n      providerSuffix = 'Provider',\n      path = [],\n      loadedModules = new HashMap(),\n      providerCache = {\n        $provide: {\n            provider: supportObject(provider),\n            factory: supportObject(factory),\n            service: supportObject(service),\n            value: supportObject(value),\n            constant: supportObject(constant),\n            decorator: decorator\n          }\n      },\n      providerInjector = createInternalInjector(providerCache, function() {\n        throw Error(\"Unknown provider: \" + path.join(' <- '));\n      }),\n      instanceCache = {},\n      instanceInjector = (instanceCache.$injector =\n          createInternalInjector(instanceCache, function(servicename) {\n            var provider = providerInjector.get(servicename + providerSuffix);\n            return instanceInjector.invoke(provider.$get, provider);\n          }));\n\n\n  forEach(loadModules(modulesToLoad), function(fn) { instanceInjector.invoke(fn || noop); });\n\n  return instanceInjector;\n\n  ////////////////////////////////////\n  // $provider\n  ////////////////////////////////////\n\n  function supportObject(delegate) {\n    return function(key, value) {\n      if (isObject(key)) {\n        forEach(key, reverseParams(delegate));\n      } else {\n        return delegate(key, value);\n      }\n    }\n  }\n\n  function provider(name, provider_) {\n    if (isFunction(provider_) || isArray(provider_)) {\n      provider_ = providerInjector.instantiate(provider_);\n    }\n    if (!provider_.$get) {\n      throw Error('Provider ' + name + ' must define $get factory method.');\n    }\n    return providerCache[name + providerSuffix] = provider_;\n  }\n\n  function factory(name, factoryFn) { return provider(name, { $get: factoryFn }); }\n\n  function service(name, constructor) {\n    return factory(name, ['$injector', function($injector) {\n      return $injector.instantiate(constructor);\n    }]);\n  }\n\n  function value(name, value) { return factory(name, valueFn(value)); }\n\n  function constant(name, value) {\n    providerCache[name] = value;\n    instanceCache[name] = value;\n  }\n\n  function decorator(serviceName, decorFn) {\n    var origProvider = providerInjector.get(serviceName + providerSuffix),\n        orig$get = origProvider.$get;\n\n    origProvider.$get = function() {\n      var origInstance = instanceInjector.invoke(orig$get, origProvider);\n      return instanceInjector.invoke(decorFn, null, {$delegate: origInstance});\n    };\n  }\n\n  ////////////////////////////////////\n  // Module Loading\n  ////////////////////////////////////\n  function loadModules(modulesToLoad){\n    var runBlocks = [];\n    forEach(modulesToLoad, function(module) {\n      if (loadedModules.get(module)) return;\n      loadedModules.put(module, true);\n      if (isString(module)) {\n        var moduleFn = angularModule(module);\n        runBlocks = runBlocks.concat(loadModules(moduleFn.requires)).concat(moduleFn._runBlocks);\n\n        try {\n          for(var invokeQueue = moduleFn._invokeQueue, i = 0, ii = invokeQueue.length; i < ii; i++) {\n            var invokeArgs = invokeQueue[i],\n                provider = invokeArgs[0] == '$injector'\n                    ? providerInjector\n                    : providerInjector.get(invokeArgs[0]);\n\n            provider[invokeArgs[1]].apply(provider, invokeArgs[2]);\n          }\n        } catch (e) {\n          if (e.message) e.message += ' from ' + module;\n          throw e;\n        }\n      } else if (isFunction(module)) {\n        try {\n          runBlocks.push(providerInjector.invoke(module));\n        } catch (e) {\n          if (e.message) e.message += ' from ' + module;\n          throw e;\n        }\n      } else if (isArray(module)) {\n        try {\n          runBlocks.push(providerInjector.invoke(module));\n        } catch (e) {\n          if (e.message) e.message += ' from ' + String(module[module.length - 1]);\n          throw e;\n        }\n      } else {\n        assertArgFn(module, 'module');\n      }\n    });\n    return runBlocks;\n  }\n\n  ////////////////////////////////////\n  // internal Injector\n  ////////////////////////////////////\n\n  function createInternalInjector(cache, factory) {\n\n    function getService(serviceName) {\n      if (typeof serviceName !== 'string') {\n        throw Error('Service name expected');\n      }\n      if (cache.hasOwnProperty(serviceName)) {\n        if (cache[serviceName] === INSTANTIATING) {\n          throw Error('Circular dependency: ' + path.join(' <- '));\n        }\n        return cache[serviceName];\n      } else {\n        try {\n          path.unshift(serviceName);\n          cache[serviceName] = INSTANTIATING;\n          return cache[serviceName] = factory(serviceName);\n        } finally {\n          path.shift();\n        }\n      }\n    }\n\n    function invoke(fn, self, locals){\n      var args = [],\n          $inject = annotate(fn),\n          length, i,\n          key;\n\n      for(i = 0, length = $inject.length; i < length; i++) {\n        key = $inject[i];\n        args.push(\n          locals && locals.hasOwnProperty(key)\n          ? locals[key]\n          : getService(key)\n        );\n      }\n      if (!fn.$inject) {\n        // this means that we must be an array.\n        fn = fn[length];\n      }\n\n\n      // Performance optimization: http://jsperf.com/apply-vs-call-vs-invoke\n      switch (self ? -1 : args.length) {\n        case  0: return fn();\n        case  1: return fn(args[0]);\n        case  2: return fn(args[0], args[1]);\n        case  3: return fn(args[0], args[1], args[2]);\n        case  4: return fn(args[0], args[1], args[2], args[3]);\n        case  5: return fn(args[0], args[1], args[2], args[3], args[4]);\n        case  6: return fn(args[0], args[1], args[2], args[3], args[4], args[5]);\n        case  7: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        case  8: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);\n        case  9: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8]);\n        case 10: return fn(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7], args[8], args[9]);\n        default: return fn.apply(self, args);\n      }\n    }\n\n    function instantiate(Type, locals) {\n      var Constructor = function() {},\n          instance, returnedValue;\n\n      // Check if Type is annotated and use just the given function at n-1 as parameter\n      // e.g. someModule.factory('greeter', ['$window', function(renamed$window) {}]);\n      Constructor.prototype = (isArray(Type) ? Type[Type.length - 1] : Type).prototype;\n      instance = new Constructor();\n      returnedValue = invoke(Type, instance, locals);\n\n      return isObject(returnedValue) ? returnedValue : instance;\n    }\n\n    return {\n      invoke: invoke,\n      instantiate: instantiate,\n      get: getService,\n      annotate: annotate\n    };\n  }\n}\n\n/**\n * @ngdoc function\n * @name ng.$anchorScroll\n * @requires $window\n * @requires $location\n * @requires $rootScope\n *\n * @description\n * When called, it checks current value of `$location.hash()` and scroll to related element,\n * according to rules specified in\n * {@link http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document Html5 spec}.\n *\n * It also watches the `$location.hash()` and scroll whenever it changes to match any anchor.\n * This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.\n */\nfunction $AnchorScrollProvider() {\n\n  var autoScrollingEnabled = true;\n\n  this.disableAutoScrolling = function() {\n    autoScrollingEnabled = false;\n  };\n\n  this.$get = ['$window', '$location', '$rootScope', function($window, $location, $rootScope) {\n    var document = $window.document;\n\n    // helper function to get first anchor from a NodeList\n    // can't use filter.filter, as it accepts only instances of Array\n    // and IE can't convert NodeList to an array using [].slice\n    // TODO(vojta): use filter if we change it to accept lists as well\n    function getFirstAnchor(list) {\n      var result = null;\n      forEach(list, function(element) {\n        if (!result && lowercase(element.nodeName) === 'a') result = element;\n      });\n      return result;\n    }\n\n    function scroll() {\n      var hash = $location.hash(), elm;\n\n      // empty hash, scroll to the top of the page\n      if (!hash) $window.scrollTo(0, 0);\n\n      // element with given id\n      else if ((elm = document.getElementById(hash))) elm.scrollIntoView();\n\n      // first anchor with given name :-D\n      else if ((elm = getFirstAnchor(document.getElementsByName(hash)))) elm.scrollIntoView();\n\n      // no element and hash == 'top', scroll to the top of the page\n      else if (hash === 'top') $window.scrollTo(0, 0);\n    }\n\n    // does not scroll when user clicks on anchor link that is currently on\n    // (no url change, no $location.hash() change), browser native does scroll\n    if (autoScrollingEnabled) {\n      $rootScope.$watch(function autoScrollWatch() {return $location.hash();},\n        function autoScrollWatchAction() {\n          $rootScope.$evalAsync(scroll);\n        });\n    }\n\n    return scroll;\n  }];\n}\n\n/**\n * ! This is a private undocumented service !\n *\n * @name ng.$browser\n * @requires $log\n * @description\n * This object has two goals:\n *\n * - hide all the global state in the browser caused by the window object\n * - abstract away all the browser specific features and inconsistencies\n *\n * For tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\n * service, which can be used for convenient testing of the application without the interaction with\n * the real browser apis.\n */\n/**\n * @param {object} window The global window object.\n * @param {object} document jQuery wrapped document.\n * @param {function()} XHR XMLHttpRequest constructor.\n * @param {object} $log console.log or an object with the same interface.\n * @param {object} $sniffer $sniffer service\n */\nfunction Browser(window, document, $log, $sniffer) {\n  var self = this,\n      rawDocument = document[0],\n      location = window.location,\n      history = window.history,\n      setTimeout = window.setTimeout,\n      clearTimeout = window.clearTimeout,\n      pendingDeferIds = {};\n\n  self.isMock = false;\n\n  var outstandingRequestCount = 0;\n  var outstandingRequestCallbacks = [];\n\n  // TODO(vojta): remove this temporary api\n  self.$$completeOutstandingRequest = completeOutstandingRequest;\n  self.$$incOutstandingRequestCount = function() { outstandingRequestCount++; };\n\n  /**\n   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\n   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.\n   */\n  function completeOutstandingRequest(fn) {\n    try {\n      fn.apply(null, sliceArgs(arguments, 1));\n    } finally {\n      outstandingRequestCount--;\n      if (outstandingRequestCount === 0) {\n        while(outstandingRequestCallbacks.length) {\n          try {\n            outstandingRequestCallbacks.pop()();\n          } catch (e) {\n            $log.error(e);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Note: this method is used only by scenario runner\n   * TODO(vojta): prefix this method with $$ ?\n   * @param {function()} callback Function that will be called when no outstanding request\n   */\n  self.notifyWhenNoOutstandingRequests = function(callback) {\n    // force browser to execute all pollFns - this is needed so that cookies and other pollers fire\n    // at some deterministic time in respect to the test runner's actions. Leaving things up to the\n    // regular poller would result in flaky tests.\n    forEach(pollFns, function(pollFn){ pollFn(); });\n\n    if (outstandingRequestCount === 0) {\n      callback();\n    } else {\n      outstandingRequestCallbacks.push(callback);\n    }\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Poll Watcher API\n  //////////////////////////////////////////////////////////////\n  var pollFns = [],\n      pollTimeout;\n\n  /**\n   * @name ng.$browser#addPollFn\n   * @methodOf ng.$browser\n   *\n   * @param {function()} fn Poll function to add\n   *\n   * @description\n   * Adds a function to the list of functions that poller periodically executes,\n   * and starts polling if not started yet.\n   *\n   * @returns {function()} the added function\n   */\n  self.addPollFn = function(fn) {\n    if (isUndefined(pollTimeout)) startPoller(100, setTimeout);\n    pollFns.push(fn);\n    return fn;\n  };\n\n  /**\n   * @param {number} interval How often should browser call poll functions (ms)\n   * @param {function()} setTimeout Reference to a real or fake `setTimeout` function.\n   *\n   * @description\n   * Configures the poller to run in the specified intervals, using the specified\n   * setTimeout fn and kicks it off.\n   */\n  function startPoller(interval, setTimeout) {\n    (function check() {\n      forEach(pollFns, function(pollFn){ pollFn(); });\n      pollTimeout = setTimeout(check, interval);\n    })();\n  }\n\n  //////////////////////////////////////////////////////////////\n  // URL API\n  //////////////////////////////////////////////////////////////\n\n  var lastBrowserUrl = location.href,\n      baseElement = document.find('base'),\n      replacedUrl = null;\n\n  /**\n   * @name ng.$browser#url\n   * @methodOf ng.$browser\n   *\n   * @description\n   * GETTER:\n   * Without any argument, this method just returns current value of location.href.\n   *\n   * SETTER:\n   * With at least one argument, this method sets url to new value.\n   * If html5 history api supported, pushState/replaceState is used, otherwise\n   * location.href/location.replace is used.\n   * Returns its own instance to allow chaining\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to change url.\n   *\n   * @param {string} url New url (when used as setter)\n   * @param {boolean=} replace Should new url replace current history record ?\n   */\n  self.url = function(url, replace) {\n    // setter\n    if (url) {\n      if (lastBrowserUrl == url) return;\n      lastBrowserUrl = url;\n      if ($sniffer.history) {\n        if (replace) history.replaceState(null, '', url);\n        else {\n          history.pushState(null, '', url);\n          // Crazy Opera Bug: http://my.opera.com/community/forums/topic.dml?id=1185462\n          baseElement.attr('href', baseElement.attr('href'));\n        }\n      } else {\n        if (replace) {\n          location.replace(url);\n          replacedUrl = url;\n        } else {\n          location.href = url;\n          replacedUrl = null;\n        }\n      }\n      return self;\n    // getter\n    } else {\n      // - the replacedUrl is a workaround for an IE8-9 issue with location.replace method that doesn't update\n      //   location.href synchronously\n      // - the replacement is a workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=407172\n      return replacedUrl || location.href.replace(/%27/g,\"'\");\n    }\n  };\n\n  var urlChangeListeners = [],\n      urlChangeInit = false;\n\n  function fireUrlChange() {\n    if (lastBrowserUrl == self.url()) return;\n\n    lastBrowserUrl = self.url();\n    forEach(urlChangeListeners, function(listener) {\n      listener(self.url());\n    });\n  }\n\n  /**\n   * @name ng.$browser#onUrlChange\n   * @methodOf ng.$browser\n   * @TODO(vojta): refactor to use node's syntax for events\n   *\n   * @description\n   * Register callback function that will be called, when url changes.\n   *\n   * It's only called when the url is changed by outside of angular:\n   * - user types different url into address bar\n   * - user clicks on history (forward/back) button\n   * - user clicks on a link\n   *\n   * It's not called when url is changed by $browser.url() method\n   *\n   * The listener gets called with new url as parameter.\n   *\n   * NOTE: this api is intended for use only by the $location service. Please use the\n   * {@link ng.$location $location service} to monitor url changes in angular apps.\n   *\n   * @param {function(string)} listener Listener function to be called when url changes.\n   * @return {function(string)} Returns the registered listener fn - handy if the fn is anonymous.\n   */\n  self.onUrlChange = function(callback) {\n    if (!urlChangeInit) {\n      // We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)\n      // don't fire popstate when user change the address bar and don't fire hashchange when url\n      // changed by push/replaceState\n\n      // html5 history api - popstate event\n      if ($sniffer.history) jqLite(window).bind('popstate', fireUrlChange);\n      // hashchange event\n      if ($sniffer.hashchange) jqLite(window).bind('hashchange', fireUrlChange);\n      // polling\n      else self.addPollFn(fireUrlChange);\n\n      urlChangeInit = true;\n    }\n\n    urlChangeListeners.push(callback);\n    return callback;\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Misc API\n  //////////////////////////////////////////////////////////////\n\n  /**\n   * Returns current <base href>\n   * (always relative - without domain)\n   *\n   * @returns {string=}\n   */\n  self.baseHref = function() {\n    var href = baseElement.attr('href');\n    return href ? href.replace(/^https?\\:\\/\\/[^\\/]*/, '') : '';\n  };\n\n  //////////////////////////////////////////////////////////////\n  // Cookies API\n  //////////////////////////////////////////////////////////////\n  var lastCookies = {};\n  var lastCookieString = '';\n  var cookiePath = self.baseHref();\n\n  /**\n   * @name ng.$browser#cookies\n   * @methodOf ng.$browser\n   *\n   * @param {string=} name Cookie name\n   * @param {string=} value Cokkie value\n   *\n   * @description\n   * The cookies method provides a 'private' low level access to browser cookies.\n   * It is not meant to be used directly, use the $cookie service instead.\n   *\n   * The return values vary depending on the arguments that the method was called with as follows:\n   * <ul>\n   *   <li>cookies() -> hash of all cookies, this is NOT a copy of the internal state, so do not modify it</li>\n   *   <li>cookies(name, value) -> set name to value, if value is undefined delete the cookie</li>\n   *   <li>cookies(name) -> the same as (name, undefined) == DELETES (no one calls it right now that way)</li>\n   * </ul>\n   *\n   * @returns {Object} Hash of all cookies (if called without any parameter)\n   */\n  self.cookies = function(name, value) {\n    var cookieLength, cookieArray, cookie, i, index;\n\n    if (name) {\n      if (value === undefined) {\n        rawDocument.cookie = escape(name) + \"=;path=\" + cookiePath + \";expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n      } else {\n        if (isString(value)) {\n          cookieLength = (rawDocument.cookie = escape(name) + '=' + escape(value) + ';path=' + cookiePath).length + 1;\n\n          // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:\n          // - 300 cookies\n          // - 20 cookies per unique domain\n          // - 4096 bytes per cookie\n          if (cookieLength > 4096) {\n            $log.warn(\"Cookie '\"+ name +\"' possibly not set or overflowed because it was too large (\"+\n              cookieLength + \" > 4096 bytes)!\");\n          }\n        }\n      }\n    } else {\n      if (rawDocument.cookie !== lastCookieString) {\n        lastCookieString = rawDocument.cookie;\n        cookieArray = lastCookieString.split(\"; \");\n        lastCookies = {};\n\n        for (i = 0; i < cookieArray.length; i++) {\n          cookie = cookieArray[i];\n          index = cookie.indexOf('=');\n          if (index > 0) { //ignore nameless cookies\n            var name = unescape(cookie.substring(0, index));\n            // the first value that is seen for a cookie is the most\n            // specific one.  values for the same cookie name that\n            // follow are for less specific paths.\n            if (lastCookies[name] === undefined) {\n              lastCookies[name] = unescape(cookie.substring(index + 1));\n            }\n          }\n        }\n      }\n      return lastCookies;\n    }\n  };\n\n\n  /**\n   * @name ng.$browser#defer\n   * @methodOf ng.$browser\n   * @param {function()} fn A function, who's execution should be defered.\n   * @param {number=} [delay=0] of milliseconds to defer the function execution.\n   * @returns {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.\n   *\n   * @description\n   * Executes a fn asynchroniously via `setTimeout(fn, delay)`.\n   *\n   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\n   * via `$browser.defer.flush()`.\n   *\n   */\n  self.defer = function(fn, delay) {\n    var timeoutId;\n    outstandingRequestCount++;\n    timeoutId = setTimeout(function() {\n      delete pendingDeferIds[timeoutId];\n      completeOutstandingRequest(fn);\n    }, delay || 0);\n    pendingDeferIds[timeoutId] = true;\n    return timeoutId;\n  };\n\n\n  /**\n   * @name ng.$browser#defer.cancel\n   * @methodOf ng.$browser.defer\n   *\n   * @description\n   * Cancels a defered task identified with `deferId`.\n   *\n   * @param {*} deferId Token returned by the `$browser.defer` function.\n   * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfuly canceled.\n   */\n  self.defer.cancel = function(deferId) {\n    if (pendingDeferIds[deferId]) {\n      delete pendingDeferIds[deferId];\n      clearTimeout(deferId);\n      completeOutstandingRequest(noop);\n      return true;\n    }\n    return false;\n  };\n\n}\n\nfunction $BrowserProvider(){\n  this.$get = ['$window', '$log', '$sniffer', '$document',\n      function( $window,   $log,   $sniffer,   $document){\n        return new Browser($window, $document, $log, $sniffer);\n      }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$cacheFactory\n *\n * @description\n * Factory that constructs cache objects and gives access to them.\n * \n * <pre>\n * \n *  var cache = $cacheFactory('cacheId');\n *  expect($cacheFactory.get('cacheId')).toBe(cache);\n *  expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n *\n *  cache.put(\"key\", \"value\");\n *  cache.put(\"another key\", \"another value\");\n * \n *  expect(cache.info()).toEqual({id: 'cacheId', size: 2}); // Since we've specified no options on creation\n * \n * </pre>\n *\n *\n * @param {string} cacheId Name or id of the newly created cache.\n * @param {object=} options Options object that specifies the cache behavior. Properties:\n *\n *   - `{number=}` `capacity` — turns the cache into LRU cache.\n *\n * @returns {object} Newly created cache object with the following set of methods:\n *\n * - `{object}` `info()` — Returns id, size, and options of cache.\n * - `{void}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache.\n * - `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n * - `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n * - `{void}` `removeAll()` — Removes all cached values.\n * - `{void}` `destroy()` — Removes references to this cache from $cacheFactory.\n *\n */\nfunction $CacheFactoryProvider() {\n\n  this.$get = function() {\n    var caches = {};\n\n    function cacheFactory(cacheId, options) {\n      if (cacheId in caches) {\n        throw Error('cacheId ' + cacheId + ' taken');\n      }\n\n      var size = 0,\n          stats = extend({}, options, {id: cacheId}),\n          data = {},\n          capacity = (options && options.capacity) || Number.MAX_VALUE,\n          lruHash = {},\n          freshEnd = null,\n          staleEnd = null;\n\n      return caches[cacheId] = {\n\n        put: function(key, value) {\n          var lruEntry = lruHash[key] || (lruHash[key] = {key: key});\n\n          refresh(lruEntry);\n\n          if (isUndefined(value)) return;\n          if (!(key in data)) size++;\n          data[key] = value;\n\n          if (size > capacity) {\n            this.remove(staleEnd.key);\n          }\n        },\n\n\n        get: function(key) {\n          var lruEntry = lruHash[key];\n\n          if (!lruEntry) return;\n\n          refresh(lruEntry);\n\n          return data[key];\n        },\n\n\n        remove: function(key) {\n          var lruEntry = lruHash[key];\n\n          if (!lruEntry) return;\n\n          if (lruEntry == freshEnd) freshEnd = lruEntry.p;\n          if (lruEntry == staleEnd) staleEnd = lruEntry.n;\n          link(lruEntry.n,lruEntry.p);\n\n          delete lruHash[key];\n          delete data[key];\n          size--;\n        },\n\n\n        removeAll: function() {\n          data = {};\n          size = 0;\n          lruHash = {};\n          freshEnd = staleEnd = null;\n        },\n\n\n        destroy: function() {\n          data = null;\n          stats = null;\n          lruHash = null;\n          delete caches[cacheId];\n        },\n\n\n        info: function() {\n          return extend({}, stats, {size: size});\n        }\n      };\n\n\n      /**\n       * makes the `entry` the freshEnd of the LRU linked list\n       */\n      function refresh(entry) {\n        if (entry != freshEnd) {\n          if (!staleEnd) {\n            staleEnd = entry;\n          } else if (staleEnd == entry) {\n            staleEnd = entry.n;\n          }\n\n          link(entry.n, entry.p);\n          link(entry, freshEnd);\n          freshEnd = entry;\n          freshEnd.n = null;\n        }\n      }\n\n\n      /**\n       * bidirectionally links two entries of the LRU linked list\n       */\n      function link(nextEntry, prevEntry) {\n        if (nextEntry != prevEntry) {\n          if (nextEntry) nextEntry.p = prevEntry; //p stands for previous, 'prev' didn't minify\n          if (prevEntry) prevEntry.n = nextEntry; //n stands for next, 'next' didn't minify\n        }\n      }\n    }\n\n\n  /**\n   * @ngdoc method\n   * @name ng.$cacheFactory#info\n   * @methodOf ng.$cacheFactory\n   *\n   * @description\n   * Get information about all the of the caches that have been created\n   *\n   * @returns {Object} - key-value map of `cacheId` to the result of calling `cache#info`\n   */\n    cacheFactory.info = function() {\n      var info = {};\n      forEach(caches, function(cache, cacheId) {\n        info[cacheId] = cache.info();\n      });\n      return info;\n    };\n\n\n  /**\n   * @ngdoc method\n   * @name ng.$cacheFactory#get\n   * @methodOf ng.$cacheFactory\n   *\n   * @description\n   * Get access to a cache object by the `cacheId` used when it was created.\n   *\n   * @param {string} cacheId Name or id of a cache to access.\n   * @returns {object} Cache object identified by the cacheId or undefined if no such cache.\n   */\n    cacheFactory.get = function(cacheId) {\n      return caches[cacheId];\n    };\n\n\n    return cacheFactory;\n  };\n}\n\n/**\n * @ngdoc object\n * @name ng.$templateCache\n *\n * @description\n * The first time a template is used, it is loaded in the template cache for quick retrieval.  You can \n * load templates directly into the cache in a `script` tag, or by consuming the `$templateCache` \n * service directly.\n * \n * Adding via the `script` tag:\n * <pre>\n * <html ng-app>\n * <head>\n * <script type=\"text/ng-template\" id=\"templateId.html\">\n *   This is the content of the template\n * </script>\n * </head>\n *   ...\n * </html>\n * </pre>\n * \n * **Note:** the `script` tag containing the template does not need to be included in the `head` of the document, but \n * it must be below the `ng-app` definition.\n * \n * Adding via the $templateCache service:\n * \n * <pre>\n * var myApp = angular.module('myApp', []);\n * myApp.run(function($templateCache) {\n *   $templateCache.put('templateId.html', 'This is the content of the template');\n * });\n * </pre>\n * \n * To retrieve the template later, simply use it in your HTML:\n * <pre>\n * <div ng-include=\" 'templateId.html' \"></div>\n * </pre>\n * \n * or get it via Javascript:\n * <pre>\n * $templateCache.get('templateId.html')\n * </pre>\n * \n * See {@link ng.$cacheFactory $cacheFactory}.\n *\n */\nfunction $TemplateCacheProvider() {\n  this.$get = ['$cacheFactory', function($cacheFactory) {\n    return $cacheFactory('templates');\n  }];\n}\n\n/* ! VARIABLE/FUNCTION NAMING CONVENTIONS THAT APPLY TO THIS FILE!\n *\n * DOM-related variables:\n *\n * - \"node\" - DOM Node\n * - \"element\" - DOM Element or Node\n * - \"$node\" or \"$element\" - jqLite-wrapped node or element\n *\n *\n * Compiler related stuff:\n *\n * - \"linkFn\" - linking fn of a single directive\n * - \"nodeLinkFn\" - function that aggregates all linking fns for a particular node\n * - \"childLinkFn\" -  function that aggregates all linking fns for child nodes of a particular node\n * - \"compositeLinkFn\" - function that aggregates all linking fns for a compilation root (nodeList)\n */\n\n\nvar NON_ASSIGNABLE_MODEL_EXPRESSION = 'Non-assignable model expression: ';\n\n\n/**\n * @ngdoc function\n * @name ng.$compile\n * @function\n *\n * @description\n * Compiles a piece of HTML string or DOM into a template and produces a template function, which\n * can then be used to link {@link ng.$rootScope.Scope scope} and the template together.\n *\n * The compilation is a process of walking the DOM tree and trying to match DOM elements to\n * {@link ng.$compileProvider#directive directives}. For each match it\n * executes corresponding template function and collects the\n * instance functions into a single template function which is then returned.\n *\n * The template function can then be used once to produce the view or as it is the case with\n * {@link ng.directive:ngRepeat repeater} many-times, in which\n * case each call results in a view that is a DOM clone of the original template.\n *\n <doc:example module=\"compile\">\n   <doc:source>\n    <script>\n      // declare a new module, and inject the $compileProvider\n      angular.module('compile', [], function($compileProvider) {\n        // configure new 'compile' directive by passing a directive\n        // factory function. The factory function injects the '$compile'\n        $compileProvider.directive('compile', function($compile) {\n          // directive factory creates a link function\n          return function(scope, element, attrs) {\n            scope.$watch(\n              function(scope) {\n                 // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n              },\n              function(value) {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n              }\n            );\n          };\n        })\n      });\n\n      function Ctrl($scope) {\n        $scope.name = 'Angular';\n        $scope.html = 'Hello {{name}}';\n      }\n    </script>\n    <div ng-controller=\"Ctrl\">\n      <input ng-model=\"name\"> <br>\n      <textarea ng-model=\"html\"></textarea> <br>\n      <div compile=\"html\"></div>\n    </div>\n   </doc:source>\n   <doc:scenario>\n     it('should auto compile', function() {\n       expect(element('div[compile]').text()).toBe('Hello Angular');\n       input('html').enter('{{name}}!');\n       expect(element('div[compile]').text()).toBe('Angular!');\n     });\n   </doc:scenario>\n </doc:example>\n\n *\n *\n * @param {string|DOMElement} element Element or HTML string to compile into a template function.\n * @param {function(angular.Scope[, cloneAttachFn]} transclude function available to directives.\n * @param {number} maxPriority only apply directives lower then given priority (Only effects the\n *                 root element(s), not their children)\n * @returns {function(scope[, cloneAttachFn])} a link function which is used to bind template\n * (a DOM element/tree) to a scope. Where:\n *\n *  * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n *               `template` and call the `cloneAttachFn` function allowing the caller to attach the\n *               cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n *               called as: <br> `cloneAttachFn(clonedElement, scope)` where:\n *\n *      * `clonedElement` - is a clone of the original `element` passed into the compiler.\n *      * `scope` - is the current scope with which the linking function is working with.\n *\n * Calling the linking function returns the element of the template. It is either the original element\n * passed in, or the clone of the element if the `cloneAttachFn` is provided.\n *\n * After linking the view is not updated until after a call to $digest which typically is done by\n * Angular automatically.\n *\n * If you need access to the bound view, there are two ways to do it:\n *\n * - If you are not asking the linking function to clone the template, create the DOM element(s)\n *   before you send them to the compiler and keep this reference around.\n *   <pre>\n *     var element = $compile('<p>{{total}}</p>')(scope);\n *   </pre>\n *\n * - if on the other hand, you need the element to be cloned, the view reference from the original\n *   example would not point to the clone, but rather to the original template that was cloned. In\n *   this case, you can access the clone via the cloneAttachFn:\n *   <pre>\n *     var templateHTML = angular.element('<p>{{total}}</p>'),\n *         scope = ....;\n *\n *     var clonedElement = $compile(templateHTML)(scope, function(clonedElement, scope) {\n *       //attach the clone to DOM document at the right place\n *     });\n *\n *     //now we have reference to the cloned DOM via `clone`\n *   </pre>\n *\n *\n * For information on how the compiler works, see the\n * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.\n */\n\n\n/**\n * @ngdoc service\n * @name ng.$compileProvider\n * @function\n *\n * @description\n */\n$CompileProvider.$inject = ['$provide'];\nfunction $CompileProvider($provide) {\n  var hasDirectives = {},\n      Suffix = 'Directive',\n      COMMENT_DIRECTIVE_REGEXP = /^\\s*directive\\:\\s*([\\d\\w\\-_]+)\\s+(.*)$/,\n      CLASS_DIRECTIVE_REGEXP = /(([\\d\\w\\-_]+)(?:\\:([^;]+))?;?)/,\n      MULTI_ROOT_TEMPLATE_ERROR = 'Template must have exactly one root element. was: ',\n      urlSanitizationWhitelist = /^\\s*(https?|ftp|mailto|file):/;\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$compileProvider#directive\n   * @methodOf ng.$compileProvider\n   * @function\n   *\n   * @description\n   * Register a new directive with the compiler.\n   *\n   * @param {string} name Name of the directive in camel-case. (ie <code>ngBind</code> which will match as\n   *                <code>ng-bind</code>).\n   * @param {function|Array} directiveFactory An injectable directive factory function. See {@link guide/directive} for more\n   *                info.\n   * @returns {ng.$compileProvider} Self for chaining.\n   */\n   this.directive = function registerDirective(name, directiveFactory) {\n    if (isString(name)) {\n      assertArg(directiveFactory, 'directive');\n      if (!hasDirectives.hasOwnProperty(name)) {\n        hasDirectives[name] = [];\n        $provide.factory(name + Suffix, ['$injector', '$exceptionHandler',\n          function($injector, $exceptionHandler) {\n            var directives = [];\n            forEach(hasDirectives[name], function(directiveFactory) {\n              try {\n                var directive = $injector.invoke(directiveFactory);\n                if (isFunction(directive)) {\n                  directive = { compile: valueFn(directive) };\n                } else if (!directive.compile && directive.link) {\n                  directive.compile = valueFn(directive.link);\n                }\n                directive.priority = directive.priority || 0;\n                directive.name = directive.name || name;\n                directive.require = directive.require || (directive.controller && directive.name);\n                directive.restrict = directive.restrict || 'A';\n                directives.push(directive);\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            });\n            return directives;\n          }]);\n      }\n      hasDirectives[name].push(directiveFactory);\n    } else {\n      forEach(name, reverseParams(registerDirective));\n    }\n    return this;\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$compileProvider#urlSanitizationWhitelist\n   * @methodOf ng.$compileProvider\n   * @function\n   *\n   * @description\n   * Retrieves or overrides the default regular expression that is used for whitelisting of safe\n   * urls during a[href] sanitization.\n   *\n   * The sanitization is a security measure aimed at prevent XSS attacks via html links.\n   *\n   * Any url about to be assigned to a[href] via data-binding is first normalized and turned into an\n   * absolute url. Afterwards the url is matched against the `urlSanitizationWhitelist` regular\n   * expression. If a match is found the original url is written into the dom. Otherwise the\n   * absolute url is prefixed with `'unsafe:'` string and only then it is written into the DOM.\n   *\n   * @param {RegExp=} regexp New regexp to whitelist urls with.\n   * @returns {RegExp|ng.$compileProvider} Current RegExp if called without value or self for\n   *    chaining otherwise.\n   */\n  this.urlSanitizationWhitelist = function(regexp) {\n    if (isDefined(regexp)) {\n      urlSanitizationWhitelist = regexp;\n      return this;\n    }\n    return urlSanitizationWhitelist;\n  };\n\n\n  this.$get = [\n            '$injector', '$interpolate', '$exceptionHandler', '$http', '$templateCache', '$parse',\n            '$controller', '$rootScope', '$document',\n    function($injector,   $interpolate,   $exceptionHandler,   $http,   $templateCache,   $parse,\n             $controller,   $rootScope,   $document) {\n\n    var Attributes = function(element, attr) {\n      this.$$element = element;\n      this.$attr = attr || {};\n    };\n\n    Attributes.prototype = {\n      $normalize: directiveNormalize,\n\n\n      /**\n       * Set a normalized attribute on the element in a way such that all directives\n       * can share the attribute. This function properly handles boolean attributes.\n       * @param {string} key Normalized key. (ie ngAttribute)\n       * @param {string|boolean} value The value to set. If `null` attribute will be deleted.\n       * @param {boolean=} writeAttr If false, does not write the value to DOM element attribute.\n       *     Defaults to true.\n       * @param {string=} attrName Optional none normalized name. Defaults to key.\n       */\n      $set: function(key, value, writeAttr, attrName) {\n        var booleanKey = getBooleanAttrName(this.$$element[0], key),\n            $$observers = this.$$observers,\n            normalizedVal;\n\n        if (booleanKey) {\n          this.$$element.prop(key, value);\n          attrName = booleanKey;\n        }\n\n        this[key] = value;\n\n        // translate normalized key to actual key\n        if (attrName) {\n          this.$attr[key] = attrName;\n        } else {\n          attrName = this.$attr[key];\n          if (!attrName) {\n            this.$attr[key] = attrName = snake_case(key, '-');\n          }\n        }\n\n\n        // sanitize a[href] values\n        if (nodeName_(this.$$element[0]) === 'A' && key === 'href') {\n          urlSanitizationNode.setAttribute('href', value);\n\n          // href property always returns normalized absolute url, so we can match against that\n          normalizedVal = urlSanitizationNode.href;\n          if (normalizedVal !== '' && !normalizedVal.match(urlSanitizationWhitelist)) {\n            this[key] = value = 'unsafe:' + normalizedVal;\n          }\n        }\n\n\n        if (writeAttr !== false) {\n          if (value === null || value === undefined) {\n            this.$$element.removeAttr(attrName);\n          } else {\n            this.$$element.attr(attrName, value);\n          }\n        }\n\n        // fire observers\n        $$observers && forEach($$observers[key], function(fn) {\n          try {\n            fn(value);\n          } catch (e) {\n            $exceptionHandler(e);\n          }\n        });\n      },\n\n\n      /**\n       * Observe an interpolated attribute.\n       * The observer will never be called, if given attribute is not interpolated.\n       *\n       * @param {string} key Normalized key. (ie ngAttribute) .\n       * @param {function(*)} fn Function that will be called whenever the attribute value changes.\n       * @returns {function(*)} the `fn` Function passed in.\n       */\n      $observe: function(key, fn) {\n        var attrs = this,\n            $$observers = (attrs.$$observers || (attrs.$$observers = {})),\n            listeners = ($$observers[key] || ($$observers[key] = []));\n\n        listeners.push(fn);\n        $rootScope.$evalAsync(function() {\n          if (!listeners.$$inter) {\n            // no one registered attribute interpolation function, so lets call it manually\n            fn(attrs[key]);\n          }\n        });\n        return fn;\n      }\n    };\n\n    var urlSanitizationNode = $document[0].createElement('a'),\n        startSymbol = $interpolate.startSymbol(),\n        endSymbol = $interpolate.endSymbol(),\n        denormalizeTemplate = (startSymbol == '{{' || endSymbol  == '}}')\n            ? identity\n            : function denormalizeTemplate(template) {\n              return template.replace(/\\{\\{/g, startSymbol).replace(/}}/g, endSymbol);\n            };\n\n\n    return compile;\n\n    //================================\n\n    function compile($compileNodes, transcludeFn, maxPriority) {\n      if (!($compileNodes instanceof jqLite)) {\n        // jquery always rewraps, whereas we need to preserve the original selector so that we can modify it.\n        $compileNodes = jqLite($compileNodes);\n      }\n      // We can not compile top level text elements since text nodes can be merged and we will\n      // not be able to attach scope data to them, so we will wrap them in <span>\n      forEach($compileNodes, function(node, index){\n        if (node.nodeType == 3 /* text node */ && node.nodeValue.match(/\\S+/) /* non-empty */ ) {\n          $compileNodes[index] = jqLite(node).wrap('<span></span>').parent()[0];\n        }\n      });\n      var compositeLinkFn = compileNodes($compileNodes, transcludeFn, $compileNodes, maxPriority);\n      return function publicLinkFn(scope, cloneConnectFn){\n        assertArg(scope, 'scope');\n        // important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart\n        // and sometimes changes the structure of the DOM.\n        var $linkNode = cloneConnectFn\n          ? JQLitePrototype.clone.call($compileNodes) // IMPORTANT!!!\n          : $compileNodes;\n\n        // Attach scope only to non-text nodes.\n        for(var i = 0, ii = $linkNode.length; i<ii; i++) {\n          var node = $linkNode[i];\n          if (node.nodeType == 1 /* element */ || node.nodeType == 9 /* document */) {\n            $linkNode.eq(i).data('$scope', scope);\n          }\n        }\n        safeAddClass($linkNode, 'ng-scope');\n        if (cloneConnectFn) cloneConnectFn($linkNode, scope);\n        if (compositeLinkFn) compositeLinkFn(scope, $linkNode, $linkNode);\n        return $linkNode;\n      };\n    }\n\n    function wrongMode(localName, mode) {\n      throw Error(\"Unsupported '\" + mode + \"' for '\" + localName + \"'.\");\n    }\n\n    function safeAddClass($element, className) {\n      try {\n        $element.addClass(className);\n      } catch(e) {\n        // ignore, since it means that we are trying to set class on\n        // SVG element, where class name is read-only.\n      }\n    }\n\n    /**\n     * Compile function matches each node in nodeList against the directives. Once all directives\n     * for a particular node are collected their compile functions are executed. The compile\n     * functions return values - the linking functions - are combined into a composite linking\n     * function, which is the a linking function for the node.\n     *\n     * @param {NodeList} nodeList an array of nodes or NodeList to compile\n     * @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {DOMElement=} $rootElement If the nodeList is the root of the compilation tree then the\n     *        rootElement must be set the jqLite collection of the compile root. This is\n     *        needed so that the jqLite collection items can be replaced with widgets.\n     * @param {number=} max directive priority\n     * @returns {?function} A composite linking function of all of the matched directives or null.\n     */\n    function compileNodes(nodeList, transcludeFn, $rootElement, maxPriority) {\n      var linkFns = [],\n          nodeLinkFn, childLinkFn, directives, attrs, linkFnFound;\n\n      for(var i = 0; i < nodeList.length; i++) {\n        attrs = new Attributes();\n\n        // we must always refer to nodeList[i] since the nodes can be replaced underneath us.\n        directives = collectDirectives(nodeList[i], [], attrs, maxPriority);\n\n        nodeLinkFn = (directives.length)\n            ? applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, $rootElement)\n            : null;\n\n        childLinkFn = (nodeLinkFn && nodeLinkFn.terminal || !nodeList[i].childNodes || !nodeList[i].childNodes.length)\n            ? null\n            : compileNodes(nodeList[i].childNodes,\n                 nodeLinkFn ? nodeLinkFn.transclude : transcludeFn);\n\n        linkFns.push(nodeLinkFn);\n        linkFns.push(childLinkFn);\n        linkFnFound = (linkFnFound || nodeLinkFn || childLinkFn);\n      }\n\n      // return a linking function if we have found anything, null otherwise\n      return linkFnFound ? compositeLinkFn : null;\n\n      function compositeLinkFn(scope, nodeList, $rootElement, boundTranscludeFn) {\n        var nodeLinkFn, childLinkFn, node, childScope, childTranscludeFn, i, ii, n;\n\n        // copy nodeList so that linking doesn't break due to live list updates.\n        var stableNodeList = [];\n        for (i = 0, ii = nodeList.length; i < ii; i++) {\n          stableNodeList.push(nodeList[i]);\n        }\n\n        for(i = 0, n = 0, ii = linkFns.length; i < ii; n++) {\n          node = stableNodeList[n];\n          nodeLinkFn = linkFns[i++];\n          childLinkFn = linkFns[i++];\n\n          if (nodeLinkFn) {\n            if (nodeLinkFn.scope) {\n              childScope = scope.$new(isObject(nodeLinkFn.scope));\n              jqLite(node).data('$scope', childScope);\n            } else {\n              childScope = scope;\n            }\n            childTranscludeFn = nodeLinkFn.transclude;\n            if (childTranscludeFn || (!boundTranscludeFn && transcludeFn)) {\n              nodeLinkFn(childLinkFn, childScope, node, $rootElement,\n                  (function(transcludeFn) {\n                    return function(cloneFn) {\n                      var transcludeScope = scope.$new();\n                      transcludeScope.$$transcluded = true;\n\n                      return transcludeFn(transcludeScope, cloneFn).\n                          bind('$destroy', bind(transcludeScope, transcludeScope.$destroy));\n                    };\n                  })(childTranscludeFn || transcludeFn)\n              );\n            } else {\n              nodeLinkFn(childLinkFn, childScope, node, undefined, boundTranscludeFn);\n            }\n          } else if (childLinkFn) {\n            childLinkFn(scope, node.childNodes, undefined, boundTranscludeFn);\n          }\n        }\n      }\n    }\n\n\n    /**\n     * Looks for directives on the given node and adds them to the directive collection which is\n     * sorted.\n     *\n     * @param node Node to search.\n     * @param directives An array to which the directives are added to. This array is sorted before\n     *        the function returns.\n     * @param attrs The shared attrs object which is used to populate the normalized attributes.\n     * @param {number=} maxPriority Max directive priority.\n     */\n    function collectDirectives(node, directives, attrs, maxPriority) {\n      var nodeType = node.nodeType,\n          attrsMap = attrs.$attr,\n          match,\n          className;\n\n      switch(nodeType) {\n        case 1: /* Element */\n          // use the node name: <directive>\n          addDirective(directives,\n              directiveNormalize(nodeName_(node).toLowerCase()), 'E', maxPriority);\n\n          // iterate over the attributes\n          for (var attr, name, nName, value, nAttrs = node.attributes,\n                   j = 0, jj = nAttrs && nAttrs.length; j < jj; j++) {\n            attr = nAttrs[j];\n            if (!msie || msie >= 8 || attr.specified) {\n              name = attr.name;\n              nName = directiveNormalize(name.toLowerCase());\n              attrsMap[nName] = name;\n              attrs[nName] = value = trim((msie && name == 'href')\n                ? decodeURIComponent(node.getAttribute(name, 2))\n                : attr.value);\n              if (getBooleanAttrName(node, nName)) {\n                attrs[nName] = true; // presence means true\n              }\n              addAttrInterpolateDirective(node, directives, value, nName);\n              addDirective(directives, nName, 'A', maxPriority);\n            }\n          }\n\n          // use class as directive\n          className = node.className;\n          if (isString(className) && className !== '') {\n            while (match = CLASS_DIRECTIVE_REGEXP.exec(className)) {\n              nName = directiveNormalize(match[2]);\n              if (addDirective(directives, nName, 'C', maxPriority)) {\n                attrs[nName] = trim(match[3]);\n              }\n              className = className.substr(match.index + match[0].length);\n            }\n          }\n          break;\n        case 3: /* Text Node */\n          addTextInterpolateDirective(directives, node.nodeValue);\n          break;\n        case 8: /* Comment */\n          try {\n            match = COMMENT_DIRECTIVE_REGEXP.exec(node.nodeValue);\n            if (match) {\n              nName = directiveNormalize(match[1]);\n              if (addDirective(directives, nName, 'M', maxPriority)) {\n                attrs[nName] = trim(match[2]);\n              }\n            }\n          } catch (e) {\n            // turns out that under some circumstances IE9 throws errors when one attempts to read comment's node value.\n            // Just ignore it and continue. (Can't seem to reproduce in test case.)\n          }\n          break;\n      }\n\n      directives.sort(byPriority);\n      return directives;\n    }\n\n\n    /**\n     * Once the directives have been collected, their compile functions are executed. This method\n     * is responsible for inlining directive templates as well as terminating the application\n     * of the directives if the terminal directive has been reached.\n     *\n     * @param {Array} directives Array of collected directives to execute their compile function.\n     *        this needs to be pre-sorted by priority order.\n     * @param {Node} compileNode The raw DOM node to apply the compile functions to\n     * @param {Object} templateAttrs The shared attribute function\n     * @param {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the\n     *        scope argument is auto-generated to the new child of the transcluded parent scope.\n     * @param {JQLite} jqCollection If we are working on the root of the compile tree then this\n     *        argument has the root jqLite array so that we can replace nodes on it.\n     * @returns linkFn\n     */\n    function applyDirectivesToNode(directives, compileNode, templateAttrs, transcludeFn, jqCollection) {\n      var terminalPriority = -Number.MAX_VALUE,\n          preLinkFns = [],\n          postLinkFns = [],\n          newScopeDirective = null,\n          newIsolateScopeDirective = null,\n          templateDirective = null,\n          $compileNode = templateAttrs.$$element = jqLite(compileNode),\n          directive,\n          directiveName,\n          $template,\n          transcludeDirective,\n          childTranscludeFn = transcludeFn,\n          controllerDirectives,\n          linkFn,\n          directiveValue;\n\n      // executes all directives on the current element\n      for(var i = 0, ii = directives.length; i < ii; i++) {\n        directive = directives[i];\n        $template = undefined;\n\n        if (terminalPriority > directive.priority) {\n          break; // prevent further processing of directives\n        }\n\n        if (directiveValue = directive.scope) {\n          assertNoDuplicate('isolated scope', newIsolateScopeDirective, directive, $compileNode);\n          if (isObject(directiveValue)) {\n            safeAddClass($compileNode, 'ng-isolate-scope');\n            newIsolateScopeDirective = directive;\n          }\n          safeAddClass($compileNode, 'ng-scope');\n          newScopeDirective = newScopeDirective || directive;\n        }\n\n        directiveName = directive.name;\n\n        if (directiveValue = directive.controller) {\n          controllerDirectives = controllerDirectives || {};\n          assertNoDuplicate(\"'\" + directiveName + \"' controller\",\n              controllerDirectives[directiveName], directive, $compileNode);\n          controllerDirectives[directiveName] = directive;\n        }\n\n        if (directiveValue = directive.transclude) {\n          assertNoDuplicate('transclusion', transcludeDirective, directive, $compileNode);\n          transcludeDirective = directive;\n          terminalPriority = directive.priority;\n          if (directiveValue == 'element') {\n            $template = jqLite(compileNode);\n            $compileNode = templateAttrs.$$element =\n                jqLite(document.createComment(' ' + directiveName + ': ' + templateAttrs[directiveName] + ' '));\n            compileNode = $compileNode[0];\n            replaceWith(jqCollection, jqLite($template[0]), compileNode);\n            childTranscludeFn = compile($template, transcludeFn, terminalPriority);\n          } else {\n            $template = jqLite(JQLiteClone(compileNode)).contents();\n            $compileNode.html(''); // clear contents\n            childTranscludeFn = compile($template, transcludeFn);\n          }\n        }\n\n        if ((directiveValue = directive.template)) {\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n          directiveValue = denormalizeTemplate(directiveValue);\n\n          if (directive.replace) {\n            $template = jqLite('<div>' +\n                                 trim(directiveValue) +\n                               '</div>').contents();\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw new Error(MULTI_ROOT_TEMPLATE_ERROR + directiveValue);\n            }\n\n            replaceWith(jqCollection, $compileNode, compileNode);\n\n            var newTemplateAttrs = {$attr: {}};\n\n            // combine directives from the original node and from the template:\n            // - take the array of directives for this element\n            // - split it into two parts, those that were already applied and those that weren't\n            // - collect directives from the template, add them to the second group and sort them\n            // - append the second group with new directives to the first group\n            directives = directives.concat(\n                collectDirectives(\n                    compileNode,\n                    directives.splice(i + 1, directives.length - (i + 1)),\n                    newTemplateAttrs\n                )\n            );\n            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);\n\n            ii = directives.length;\n          } else {\n            $compileNode.html(directiveValue);\n          }\n        }\n\n        if (directive.templateUrl) {\n          assertNoDuplicate('template', templateDirective, directive, $compileNode);\n          templateDirective = directive;\n          nodeLinkFn = compileTemplateUrl(directives.splice(i, directives.length - i),\n              nodeLinkFn, $compileNode, templateAttrs, jqCollection, directive.replace,\n              childTranscludeFn);\n          ii = directives.length;\n        } else if (directive.compile) {\n          try {\n            linkFn = directive.compile($compileNode, templateAttrs, childTranscludeFn);\n            if (isFunction(linkFn)) {\n              addLinkFns(null, linkFn);\n            } else if (linkFn) {\n              addLinkFns(linkFn.pre, linkFn.post);\n            }\n          } catch (e) {\n            $exceptionHandler(e, startingTag($compileNode));\n          }\n        }\n\n        if (directive.terminal) {\n          nodeLinkFn.terminal = true;\n          terminalPriority = Math.max(terminalPriority, directive.priority);\n        }\n\n      }\n\n      nodeLinkFn.scope = newScopeDirective && newScopeDirective.scope;\n      nodeLinkFn.transclude = transcludeDirective && childTranscludeFn;\n\n      // might be normal or delayed nodeLinkFn depending on if templateUrl is present\n      return nodeLinkFn;\n\n      ////////////////////\n\n      function addLinkFns(pre, post) {\n        if (pre) {\n          pre.require = directive.require;\n          preLinkFns.push(pre);\n        }\n        if (post) {\n          post.require = directive.require;\n          postLinkFns.push(post);\n        }\n      }\n\n\n      function getControllers(require, $element) {\n        var value, retrievalMethod = 'data', optional = false;\n        if (isString(require)) {\n          while((value = require.charAt(0)) == '^' || value == '?') {\n            require = require.substr(1);\n            if (value == '^') {\n              retrievalMethod = 'inheritedData';\n            }\n            optional = optional || value == '?';\n          }\n          value = $element[retrievalMethod]('$' + require + 'Controller');\n          if (!value && !optional) {\n            throw Error(\"No controller: \" + require);\n          }\n          return value;\n        } else if (isArray(require)) {\n          value = [];\n          forEach(require, function(require) {\n            value.push(getControllers(require, $element));\n          });\n        }\n        return value;\n      }\n\n\n      function nodeLinkFn(childLinkFn, scope, linkNode, $rootElement, boundTranscludeFn) {\n        var attrs, $element, i, ii, linkFn, controller;\n\n        if (compileNode === linkNode) {\n          attrs = templateAttrs;\n        } else {\n          attrs = shallowCopy(templateAttrs, new Attributes(jqLite(linkNode), templateAttrs.$attr));\n        }\n        $element = attrs.$$element;\n\n        if (newIsolateScopeDirective) {\n          var LOCAL_REGEXP = /^\\s*([@=&])\\s*(\\w*)\\s*$/;\n\n          var parentScope = scope.$parent || scope;\n\n          forEach(newIsolateScopeDirective.scope, function(definiton, scopeName) {\n            var match = definiton.match(LOCAL_REGEXP) || [],\n                attrName = match[2]|| scopeName,\n                mode = match[1], // @, =, or &\n                lastValue,\n                parentGet, parentSet;\n\n            scope.$$isolateBindings[scopeName] = mode + attrName;\n\n            switch (mode) {\n\n              case '@': {\n                attrs.$observe(attrName, function(value) {\n                  scope[scopeName] = value;\n                });\n                attrs.$$observers[attrName].$$scope = parentScope;\n                break;\n              }\n\n              case '=': {\n                parentGet = $parse(attrs[attrName]);\n                parentSet = parentGet.assign || function() {\n                  // reset the change, or we will throw this exception on every $digest\n                  lastValue = scope[scopeName] = parentGet(parentScope);\n                  throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + attrs[attrName] +\n                      ' (directive: ' + newIsolateScopeDirective.name + ')');\n                };\n                lastValue = scope[scopeName] = parentGet(parentScope);\n                scope.$watch(function parentValueWatch() {\n                  var parentValue = parentGet(parentScope);\n\n                  if (parentValue !== scope[scopeName]) {\n                    // we are out of sync and need to copy\n                    if (parentValue !== lastValue) {\n                      // parent changed and it has precedence\n                      lastValue = scope[scopeName] = parentValue;\n                    } else {\n                      // if the parent can be assigned then do so\n                      parentSet(parentScope, parentValue = lastValue = scope[scopeName]);\n                    }\n                  }\n                  return parentValue;\n                });\n                break;\n              }\n\n              case '&': {\n                parentGet = $parse(attrs[attrName]);\n                scope[scopeName] = function(locals) {\n                  return parentGet(parentScope, locals);\n                };\n                break;\n              }\n\n              default: {\n                throw Error('Invalid isolate scope definition for directive ' +\n                    newIsolateScopeDirective.name + ': ' + definiton);\n              }\n            }\n          });\n        }\n\n        if (controllerDirectives) {\n          forEach(controllerDirectives, function(directive) {\n            var locals = {\n              $scope: scope,\n              $element: $element,\n              $attrs: attrs,\n              $transclude: boundTranscludeFn\n            };\n\n            controller = directive.controller;\n            if (controller == '@') {\n              controller = attrs[directive.name];\n            }\n\n            $element.data(\n                '$' + directive.name + 'Controller',\n                $controller(controller, locals));\n          });\n        }\n\n        // PRELINKING\n        for(i = 0, ii = preLinkFns.length; i < ii; i++) {\n          try {\n            linkFn = preLinkFns[i];\n            linkFn(scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.require, $element));\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n\n        // RECURSION\n        childLinkFn && childLinkFn(scope, linkNode.childNodes, undefined, boundTranscludeFn);\n\n        // POSTLINKING\n        for(i = 0, ii = postLinkFns.length; i < ii; i++) {\n          try {\n            linkFn = postLinkFns[i];\n            linkFn(scope, $element, attrs,\n                linkFn.require && getControllers(linkFn.require, $element));\n          } catch (e) {\n            $exceptionHandler(e, startingTag($element));\n          }\n        }\n      }\n    }\n\n\n    /**\n     * looks up the directive and decorates it with exception handling and proper parameters. We\n     * call this the boundDirective.\n     *\n     * @param {string} name name of the directive to look up.\n     * @param {string} location The directive must be found in specific format.\n     *   String containing any of theses characters:\n     *\n     *   * `E`: element name\n     *   * `A': attribute\n     *   * `C`: class\n     *   * `M`: comment\n     * @returns true if directive was added.\n     */\n    function addDirective(tDirectives, name, location, maxPriority) {\n      var match = false;\n      if (hasDirectives.hasOwnProperty(name)) {\n        for(var directive, directives = $injector.get(name + Suffix),\n            i = 0, ii = directives.length; i<ii; i++) {\n          try {\n            directive = directives[i];\n            if ( (maxPriority === undefined || maxPriority > directive.priority) &&\n                 directive.restrict.indexOf(location) != -1) {\n              tDirectives.push(directive);\n              match = true;\n            }\n          } catch(e) { $exceptionHandler(e); }\n        }\n      }\n      return match;\n    }\n\n\n    /**\n     * When the element is replaced with HTML template then the new attributes\n     * on the template need to be merged with the existing attributes in the DOM.\n     * The desired effect is to have both of the attributes present.\n     *\n     * @param {object} dst destination attributes (original DOM)\n     * @param {object} src source attributes (from the directive template)\n     */\n    function mergeTemplateAttributes(dst, src) {\n      var srcAttr = src.$attr,\n          dstAttr = dst.$attr,\n          $element = dst.$$element;\n\n      // reapply the old attributes to the new element\n      forEach(dst, function(value, key) {\n        if (key.charAt(0) != '$') {\n          if (src[key]) {\n            value += (key === 'style' ? ';' : ' ') + src[key];\n          }\n          dst.$set(key, value, true, srcAttr[key]);\n        }\n      });\n\n      // copy the new attributes on the old attrs object\n      forEach(src, function(value, key) {\n        if (key == 'class') {\n          safeAddClass($element, value);\n          dst['class'] = (dst['class'] ? dst['class'] + ' ' : '') + value;\n        } else if (key == 'style') {\n          $element.attr('style', $element.attr('style') + ';' + value);\n        } else if (key.charAt(0) != '$' && !dst.hasOwnProperty(key)) {\n          dst[key] = value;\n          dstAttr[key] = srcAttr[key];\n        }\n      });\n    }\n\n\n    function compileTemplateUrl(directives, beforeTemplateNodeLinkFn, $compileNode, tAttrs,\n        $rootElement, replace, childTranscludeFn) {\n      var linkQueue = [],\n          afterTemplateNodeLinkFn,\n          afterTemplateChildLinkFn,\n          beforeTemplateCompileNode = $compileNode[0],\n          origAsyncDirective = directives.shift(),\n          // The fact that we have to copy and patch the directive seems wrong!\n          derivedSyncDirective = extend({}, origAsyncDirective, {\n            controller: null, templateUrl: null, transclude: null, scope: null\n          });\n\n      $compileNode.html('');\n\n      $http.get(origAsyncDirective.templateUrl, {cache: $templateCache}).\n        success(function(content) {\n          var compileNode, tempTemplateAttrs, $template;\n\n          content = denormalizeTemplate(content);\n\n          if (replace) {\n            $template = jqLite('<div>' + trim(content) + '</div>').contents();\n            compileNode = $template[0];\n\n            if ($template.length != 1 || compileNode.nodeType !== 1) {\n              throw new Error(MULTI_ROOT_TEMPLATE_ERROR + content);\n            }\n\n            tempTemplateAttrs = {$attr: {}};\n            replaceWith($rootElement, $compileNode, compileNode);\n            collectDirectives(compileNode, directives, tempTemplateAttrs);\n            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);\n          } else {\n            compileNode = beforeTemplateCompileNode;\n            $compileNode.html(content);\n          }\n\n          directives.unshift(derivedSyncDirective);\n          afterTemplateNodeLinkFn = applyDirectivesToNode(directives, compileNode, tAttrs, childTranscludeFn);\n          afterTemplateChildLinkFn = compileNodes($compileNode[0].childNodes, childTranscludeFn);\n\n\n          while(linkQueue.length) {\n            var controller = linkQueue.pop(),\n                linkRootElement = linkQueue.pop(),\n                beforeTemplateLinkNode = linkQueue.pop(),\n                scope = linkQueue.pop(),\n                linkNode = compileNode;\n\n            if (beforeTemplateLinkNode !== beforeTemplateCompileNode) {\n              // it was cloned therefore we have to clone as well.\n              linkNode = JQLiteClone(compileNode);\n              replaceWith(linkRootElement, jqLite(beforeTemplateLinkNode), linkNode);\n            }\n\n            afterTemplateNodeLinkFn(function() {\n              beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, linkNode, $rootElement, controller);\n            }, scope, linkNode, $rootElement, controller);\n          }\n          linkQueue = null;\n        }).\n        error(function(response, code, headers, config) {\n          throw Error('Failed to load template: ' + config.url);\n        });\n\n      return function delayedNodeLinkFn(ignoreChildLinkFn, scope, node, rootElement, controller) {\n        if (linkQueue) {\n          linkQueue.push(scope);\n          linkQueue.push(node);\n          linkQueue.push(rootElement);\n          linkQueue.push(controller);\n        } else {\n          afterTemplateNodeLinkFn(function() {\n            beforeTemplateNodeLinkFn(afterTemplateChildLinkFn, scope, node, rootElement, controller);\n          }, scope, node, rootElement, controller);\n        }\n      };\n    }\n\n\n    /**\n     * Sorting function for bound directives.\n     */\n    function byPriority(a, b) {\n      return b.priority - a.priority;\n    }\n\n\n    function assertNoDuplicate(what, previousDirective, directive, element) {\n      if (previousDirective) {\n        throw Error('Multiple directives [' + previousDirective.name + ', ' +\n          directive.name + '] asking for ' + what + ' on: ' +  startingTag(element));\n      }\n    }\n\n\n    function addTextInterpolateDirective(directives, text) {\n      var interpolateFn = $interpolate(text, true);\n      if (interpolateFn) {\n        directives.push({\n          priority: 0,\n          compile: valueFn(function textInterpolateLinkFn(scope, node) {\n            var parent = node.parent(),\n                bindings = parent.data('$binding') || [];\n            bindings.push(interpolateFn);\n            safeAddClass(parent.data('$binding', bindings), 'ng-binding');\n            scope.$watch(interpolateFn, function interpolateFnWatchAction(value) {\n              node[0].nodeValue = value;\n            });\n          })\n        });\n      }\n    }\n\n\n    function addAttrInterpolateDirective(node, directives, value, name) {\n      var interpolateFn = $interpolate(value, true);\n\n      // no interpolation found -> ignore\n      if (!interpolateFn) return;\n\n\n      directives.push({\n        priority: 100,\n        compile: valueFn(function attrInterpolateLinkFn(scope, element, attr) {\n          var $$observers = (attr.$$observers || (attr.$$observers = {}));\n\n          if (name === 'class') {\n            // we need to interpolate classes again, in the case the element was replaced\n            // and therefore the two class attrs got merged - we want to interpolate the result\n            interpolateFn = $interpolate(attr[name], true);\n          }\n\n          attr[name] = undefined;\n          ($$observers[name] || ($$observers[name] = [])).$$inter = true;\n          (attr.$$observers && attr.$$observers[name].$$scope || scope).\n            $watch(interpolateFn, function interpolateFnWatchAction(value) {\n              attr.$set(name, value);\n            });\n        })\n      });\n    }\n\n\n    /**\n     * This is a special jqLite.replaceWith, which can replace items which\n     * have no parents, provided that the containing jqLite collection is provided.\n     *\n     * @param {JqLite=} $rootElement The root of the compile tree. Used so that we can replace nodes\n     *    in the root of the tree.\n     * @param {JqLite} $element The jqLite element which we are going to replace. We keep the shell,\n     *    but replace its DOM node reference.\n     * @param {Node} newNode The new DOM node.\n     */\n    function replaceWith($rootElement, $element, newNode) {\n      var oldNode = $element[0],\n          parent = oldNode.parentNode,\n          i, ii;\n\n      if ($rootElement) {\n        for(i = 0, ii = $rootElement.length; i < ii; i++) {\n          if ($rootElement[i] == oldNode) {\n            $rootElement[i] = newNode;\n            break;\n          }\n        }\n      }\n\n      if (parent) {\n        parent.replaceChild(newNode, oldNode);\n      }\n\n      newNode[jqLite.expando] = oldNode[jqLite.expando];\n      $element[0] = newNode;\n    }\n  }];\n}\n\nvar PREFIX_REGEXP = /^(x[\\:\\-_]|data[\\:\\-_])/i;\n/**\n * Converts all accepted directives format into proper directive name.\n * All of these will become 'myDirective':\n *   my:DiRective\n *   my-directive\n *   x-my-directive\n *   data-my:directive\n *\n * Also there is special case for Moz prefix starting with upper case letter.\n * @param name Name to normalize\n */\nfunction directiveNormalize(name) {\n  return camelCase(name.replace(PREFIX_REGEXP, ''));\n}\n\n/**\n * @ngdoc object\n * @name ng.$compile.directive.Attributes\n * @description\n *\n * A shared object between directive compile / linking functions which contains normalized DOM element\n * attributes. The the values reflect current binding state `{{ }}`. The normalization is needed\n * since all of these are treated as equivalent in Angular:\n *\n *          <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n */\n\n/**\n * @ngdoc property\n * @name ng.$compile.directive.Attributes#$attr\n * @propertyOf ng.$compile.directive.Attributes\n * @returns {object} A map of DOM element attribute names to the normalized name. This is\n *          needed to do reverse lookup from normalized name back to actual name.\n */\n\n\n/**\n * @ngdoc function\n * @name ng.$compile.directive.Attributes#$set\n * @methodOf ng.$compile.directive.Attributes\n * @function\n *\n * @description\n * Set DOM element attribute value.\n *\n *\n * @param {string} name Normalized element attribute name of the property to modify. The name is\n *          revers translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n *          property to the original name.\n * @param {string} value Value to set the attribute to.\n */\n\n\n\n/**\n * Closure compiler type information\n */\n\nfunction nodesetLinkingFn(\n  /* angular.Scope */ scope,\n  /* NodeList */ nodeList,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\nfunction directiveLinkingFn(\n  /* nodesetLinkingFn */ nodesetLinkingFn,\n  /* angular.Scope */ scope,\n  /* Node */ node,\n  /* Element */ rootElement,\n  /* function(Function) */ boundTranscludeFn\n){}\n\n/**\n * @ngdoc object\n * @name ng.$controllerProvider\n * @description\n * The {@link ng.$controller $controller service} is used by Angular to create new\n * controllers.\n *\n * This provider allows controller registration via the\n * {@link ng.$controllerProvider#register register} method.\n */\nfunction $ControllerProvider() {\n  var controllers = {};\n\n\n  /**\n   * @ngdoc function\n   * @name ng.$controllerProvider#register\n   * @methodOf ng.$controllerProvider\n   * @param {string} name Controller name\n   * @param {Function|Array} constructor Controller constructor fn (optionally decorated with DI\n   *    annotations in the array notation).\n   */\n  this.register = function(name, constructor) {\n    if (isObject(name)) {\n      extend(controllers, name)\n    } else {\n      controllers[name] = constructor;\n    }\n  };\n\n\n  this.$get = ['$injector', '$window', function($injector, $window) {\n\n    /**\n     * @ngdoc function\n     * @name ng.$controller\n     * @requires $injector\n     *\n     * @param {Function|string} constructor If called with a function then it's considered to be the\n     *    controller constructor function. Otherwise it's considered to be a string which is used\n     *    to retrieve the controller constructor using the following steps:\n     *\n     *    * check if a controller with given name is registered via `$controllerProvider`\n     *    * check if evaluating the string on the current scope returns a constructor\n     *    * check `window[constructor]` on the global `window` object\n     *\n     * @param {Object} locals Injection locals for Controller.\n     * @return {Object} Instance of given controller.\n     *\n     * @description\n     * `$controller` service is responsible for instantiating controllers.\n     *\n     * It's just a simple call to {@link AUTO.$injector $injector}, but extracted into\n     * a service, so that one can override this service with {@link https://gist.github.com/1649788\n     * BC version}.\n     */\n    return function(constructor, locals) {\n      if(isString(constructor)) {\n        var name = constructor;\n        constructor = controllers.hasOwnProperty(name)\n            ? controllers[name]\n            : getter(locals.$scope, name, true) || getter($window, name, true);\n\n        assertArgFn(constructor, name, true);\n      }\n\n      return $injector.instantiate(constructor, locals);\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$document\n * @requires $window\n *\n * @description\n * A {@link angular.element jQuery (lite)}-wrapped reference to the browser's `window.document`\n * element.\n */\nfunction $DocumentProvider(){\n  this.$get = ['$window', function(window){\n    return jqLite(window.document);\n  }];\n}\n\n/**\n * @ngdoc function\n * @name ng.$exceptionHandler\n * @requires $log\n *\n * @description\n * Any uncaught exception in angular expressions is delegated to this service.\n * The default implementation simply delegates to `$log.error` which logs it into\n * the browser console.\n *\n * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n * {@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n *\n * @param {Error} exception Exception associated with the error.\n * @param {string=} cause optional information about the context in which\n *       the error was thrown.\n *\n */\nfunction $ExceptionHandlerProvider() {\n  this.$get = ['$log', function($log) {\n    return function(exception, cause) {\n      $log.error.apply($log, arguments);\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$interpolateProvider\n * @function\n *\n * @description\n *\n * Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n */\nfunction $InterpolateProvider() {\n  var startSymbol = '{{';\n  var endSymbol = '}}';\n\n  /**\n   * @ngdoc method\n   * @name ng.$interpolateProvider#startSymbol\n   * @methodOf ng.$interpolateProvider\n   * @description\n   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.\n   *\n   * @param {string=} value new value to set the starting symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.startSymbol = function(value){\n    if (value) {\n      startSymbol = value;\n      return this;\n    } else {\n      return startSymbol;\n    }\n  };\n\n  /**\n   * @ngdoc method\n   * @name ng.$interpolateProvider#endSymbol\n   * @methodOf ng.$interpolateProvider\n   * @description\n   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n   *\n   * @param {string=} value new value to set the ending symbol to.\n   * @returns {string|self} Returns the symbol when used as getter and self if used as setter.\n   */\n  this.endSymbol = function(value){\n    if (value) {\n      endSymbol = value;\n      return this;\n    } else {\n      return endSymbol;\n    }\n  };\n\n\n  this.$get = ['$parse', function($parse) {\n    var startSymbolLength = startSymbol.length,\n        endSymbolLength = endSymbol.length;\n\n    /**\n     * @ngdoc function\n     * @name ng.$interpolate\n     * @function\n     *\n     * @requires $parse\n     *\n     * @description\n     *\n     * Compiles a string with markup into an interpolation function. This service is used by the\n     * HTML {@link ng.$compile $compile} service for data binding. See\n     * {@link ng.$interpolateProvider $interpolateProvider} for configuring the\n     * interpolation markup.\n     *\n     *\n       <pre>\n         var $interpolate = ...; // injected\n         var exp = $interpolate('Hello {{name}}!');\n         expect(exp({name:'Angular'}).toEqual('Hello Angular!');\n       </pre>\n     *\n     *\n     * @param {string} text The text with markup to interpolate.\n     * @param {boolean=} mustHaveExpression if set to true then the interpolation string must have\n     *    embedded expression in order to return an interpolation function. Strings with no\n     *    embedded expression will return null for the interpolation function.\n     * @returns {function(context)} an interpolation function which is used to compute the interpolated\n     *    string. The function has these parameters:\n     *\n     *    * `context`: an object against which any expressions embedded in the strings are evaluated\n     *      against.\n     *\n     */\n    function $interpolate(text, mustHaveExpression) {\n      var startIndex,\n          endIndex,\n          index = 0,\n          parts = [],\n          length = text.length,\n          hasInterpolation = false,\n          fn,\n          exp,\n          concat = [];\n\n      while(index < length) {\n        if ( ((startIndex = text.indexOf(startSymbol, index)) != -1) &&\n             ((endIndex = text.indexOf(endSymbol, startIndex + startSymbolLength)) != -1) ) {\n          (index != startIndex) && parts.push(text.substring(index, startIndex));\n          parts.push(fn = $parse(exp = text.substring(startIndex + startSymbolLength, endIndex)));\n          fn.exp = exp;\n          index = endIndex + endSymbolLength;\n          hasInterpolation = true;\n        } else {\n          // we did not find anything, so we have to add the remainder to the parts array\n          (index != length) && parts.push(text.substring(index));\n          index = length;\n        }\n      }\n\n      if (!(length = parts.length)) {\n        // we added, nothing, must have been an empty string.\n        parts.push('');\n        length = 1;\n      }\n\n      if (!mustHaveExpression  || hasInterpolation) {\n        concat.length = length;\n        fn = function(context) {\n          for(var i = 0, ii = length, part; i<ii; i++) {\n            if (typeof (part = parts[i]) == 'function') {\n              part = part(context);\n              if (part == null || part == undefined) {\n                part = '';\n              } else if (typeof part != 'string') {\n                part = toJson(part);\n              }\n            }\n            concat[i] = part;\n          }\n          return concat.join('');\n        };\n        fn.exp = text;\n        fn.parts = parts;\n        return fn;\n      }\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name ng.$interpolate#startSymbol\n     * @methodOf ng.$interpolate\n     * @description\n     * Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n     *\n     * Use {@link ng.$interpolateProvider#startSymbol $interpolateProvider#startSymbol} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.startSymbol = function() {\n      return startSymbol;\n    }\n\n\n    /**\n     * @ngdoc method\n     * @name ng.$interpolate#endSymbol\n     * @methodOf ng.$interpolate\n     * @description\n     * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n     *\n     * Use {@link ng.$interpolateProvider#endSymbol $interpolateProvider#endSymbol} to change\n     * the symbol.\n     *\n     * @returns {string} start symbol.\n     */\n    $interpolate.endSymbol = function() {\n      return endSymbol;\n    }\n\n    return $interpolate;\n  }];\n}\n\nvar URL_MATCH = /^([^:]+):\\/\\/(\\w+:{0,1}\\w*@)?(\\{?[\\w\\.-]*\\}?)(:([0-9]+))?(\\/[^\\?#]*)?(\\?([^#]*))?(#(.*))?$/,\n    PATH_MATCH = /^([^\\?#]*)?(\\?([^#]*))?(#(.*))?$/,\n    HASH_MATCH = PATH_MATCH,\n    DEFAULT_PORTS = {'http': 80, 'https': 443, 'ftp': 21};\n\n\n/**\n * Encode path using encodeUriSegment, ignoring forward slashes\n *\n * @param {string} path Path to encode\n * @returns {string}\n */\nfunction encodePath(path) {\n  var segments = path.split('/'),\n      i = segments.length;\n\n  while (i--) {\n    segments[i] = encodeUriSegment(segments[i]);\n  }\n\n  return segments.join('/');\n}\n\nfunction stripHash(url) {\n  return url.split('#')[0];\n}\n\n\nfunction matchUrl(url, obj) {\n  var match = URL_MATCH.exec(url);\n\n  match = {\n      protocol: match[1],\n      host: match[3],\n      port: int(match[5]) || DEFAULT_PORTS[match[1]] || null,\n      path: match[6] || '/',\n      search: match[8],\n      hash: match[10]\n    };\n\n  if (obj) {\n    obj.$$protocol = match.protocol;\n    obj.$$host = match.host;\n    obj.$$port = match.port;\n  }\n\n  return match;\n}\n\n\nfunction composeProtocolHostPort(protocol, host, port) {\n  return protocol + '://' + host + (port == DEFAULT_PORTS[protocol] ? '' : ':' + port);\n}\n\n\nfunction pathPrefixFromBase(basePath) {\n  return basePath.substr(0, basePath.lastIndexOf('/'));\n}\n\n\nfunction convertToHtml5Url(url, basePath, hashPrefix) {\n  var match = matchUrl(url);\n\n  // already html5 url\n  if (decodeURIComponent(match.path) != basePath || isUndefined(match.hash) ||\n      match.hash.indexOf(hashPrefix) !== 0) {\n    return url;\n  // convert hashbang url -> html5 url\n  } else {\n    return composeProtocolHostPort(match.protocol, match.host, match.port) +\n           pathPrefixFromBase(basePath) + match.hash.substr(hashPrefix.length);\n  }\n}\n\n\nfunction convertToHashbangUrl(url, basePath, hashPrefix) {\n  var match = matchUrl(url);\n\n  // already hashbang url\n  if (decodeURIComponent(match.path) == basePath && !isUndefined(match.hash) &&\n      match.hash.indexOf(hashPrefix) === 0) {\n    return url;\n  // convert html5 url -> hashbang url\n  } else {\n    var search = match.search && '?' + match.search || '',\n        hash = match.hash && '#' + match.hash || '',\n        pathPrefix = pathPrefixFromBase(basePath),\n        path = match.path.substr(pathPrefix.length);\n\n    if (match.path.indexOf(pathPrefix) !== 0) {\n      throw Error('Invalid url \"' + url + '\", missing path prefix \"' + pathPrefix + '\" !');\n    }\n\n    return composeProtocolHostPort(match.protocol, match.host, match.port) + basePath +\n           '#' + hashPrefix + path + search + hash;\n  }\n}\n\n\n/**\n * LocationUrl represents an url\n * This object is exposed as $location service when HTML5 mode is enabled and supported\n *\n * @constructor\n * @param {string} url HTML5 url\n * @param {string} pathPrefix\n */\nfunction LocationUrl(url, pathPrefix, appBaseUrl) {\n  pathPrefix = pathPrefix || '';\n\n  /**\n   * Parse given html5 (regular) url string into properties\n   * @param {string} newAbsoluteUrl HTML5 url\n   * @private\n   */\n  this.$$parse = function(newAbsoluteUrl) {\n    var match = matchUrl(newAbsoluteUrl, this);\n\n    if (match.path.indexOf(pathPrefix) !== 0) {\n      throw Error('Invalid url \"' + newAbsoluteUrl + '\", missing path prefix \"' + pathPrefix + '\" !');\n    }\n\n    this.$$path = decodeURIComponent(match.path.substr(pathPrefix.length));\n    this.$$search = parseKeyValue(match.search);\n    this.$$hash = match.hash && decodeURIComponent(match.hash) || '';\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = composeProtocolHostPort(this.$$protocol, this.$$host, this.$$port) +\n                    pathPrefix + this.$$url;\n  };\n\n\n  this.$$rewriteAppUrl = function(absoluteLinkUrl) {\n    if(absoluteLinkUrl.indexOf(appBaseUrl) == 0) {\n      return absoluteLinkUrl;\n    }\n  }\n\n\n  this.$$parse(url);\n}\n\n\n/**\n * LocationHashbangUrl represents url\n * This object is exposed as $location service when html5 history api is disabled or not supported\n *\n * @constructor\n * @param {string} url Legacy url\n * @param {string} hashPrefix Prefix for hash part (containing path and search)\n */\nfunction LocationHashbangUrl(url, hashPrefix, appBaseUrl) {\n  var basePath;\n\n  /**\n   * Parse given hashbang url into properties\n   * @param {string} url Hashbang url\n   * @private\n   */\n  this.$$parse = function(url) {\n    var match = matchUrl(url, this);\n\n\n    if (match.hash && match.hash.indexOf(hashPrefix) !== 0) {\n      throw Error('Invalid url \"' + url + '\", missing hash prefix \"' + hashPrefix + '\" !');\n    }\n\n    basePath = match.path + (match.search ? '?' + match.search : '');\n    match = HASH_MATCH.exec((match.hash || '').substr(hashPrefix.length));\n    if (match[1]) {\n      this.$$path = (match[1].charAt(0) == '/' ? '' : '/') + decodeURIComponent(match[1]);\n    } else {\n      this.$$path = '';\n    }\n\n    this.$$search = parseKeyValue(match[3]);\n    this.$$hash = match[5] && decodeURIComponent(match[5]) || '';\n\n    this.$$compose();\n  };\n\n  /**\n   * Compose hashbang url and update `absUrl` property\n   * @private\n   */\n  this.$$compose = function() {\n    var search = toKeyValue(this.$$search),\n        hash = this.$$hash ? '#' + encodeUriSegment(this.$$hash) : '';\n\n    this.$$url = encodePath(this.$$path) + (search ? '?' + search : '') + hash;\n    this.$$absUrl = composeProtocolHostPort(this.$$protocol, this.$$host, this.$$port) +\n                    basePath + (this.$$url ? '#' + hashPrefix + this.$$url : '');\n  };\n\n  this.$$rewriteAppUrl = function(absoluteLinkUrl) {\n    if(absoluteLinkUrl.indexOf(appBaseUrl) == 0) {\n      return absoluteLinkUrl;\n    }\n  }\n\n\n  this.$$parse(url);\n}\n\n\nLocationUrl.prototype = {\n\n  /**\n   * Has any change been replacing ?\n   * @private\n   */\n  $$replace: false,\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#absUrl\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return full url representation with all segments encoded according to rules specified in\n   * {@link http://www.ietf.org/rfc/rfc3986.txt RFC 3986}.\n   *\n   * @return {string} full url\n   */\n  absUrl: locationGetter('$$absUrl'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#url\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.\n   *\n   * Change path, search and hash, when called with parameter and return `$location`.\n   *\n   * @param {string=} url New url without base prefix (e.g. `/path?a=b#hash`)\n   * @return {string} url\n   */\n  url: function(url, replace) {\n    if (isUndefined(url))\n      return this.$$url;\n\n    var match = PATH_MATCH.exec(url);\n    if (match[1]) this.path(decodeURIComponent(match[1]));\n    if (match[2] || match[1]) this.search(match[3] || '');\n    this.hash(match[5] || '', replace);\n\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#protocol\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return protocol of current url.\n   *\n   * @return {string} protocol of current url\n   */\n  protocol: locationGetter('$$protocol'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#host\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return host of current url.\n   *\n   * @return {string} host of current url.\n   */\n  host: locationGetter('$$host'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#port\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter only.\n   *\n   * Return port of current url.\n   *\n   * @return {Number} port\n   */\n  port: locationGetter('$$port'),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#path\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return path of current url when called without any parameter.\n   *\n   * Change path when called with parameter and return `$location`.\n   *\n   * Note: Path should always begin with forward slash (/), this method will add the forward slash\n   * if it is missing.\n   *\n   * @param {string=} path New path\n   * @return {string} path\n   */\n  path: locationGetterSetter('$$path', function(path) {\n    return path.charAt(0) == '/' ? path : '/' + path;\n  }),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#search\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return search part (as object) of current url when called without any parameter.\n   *\n   * Change search part when called with parameter and return `$location`.\n   *\n   * @param {string|object<string,string>=} search New search params - string or hash object\n   * @param {string=} paramValue If `search` is a string, then `paramValue` will override only a\n   *    single search parameter. If the value is `null`, the parameter will be deleted.\n   *\n   * @return {string} search\n   */\n  search: function(search, paramValue) {\n    if (isUndefined(search))\n      return this.$$search;\n\n    if (isDefined(paramValue)) {\n      if (paramValue === null) {\n        delete this.$$search[search];\n      } else {\n        this.$$search[search] = paramValue;\n      }\n    } else {\n      this.$$search = isString(search) ? parseKeyValue(search) : search;\n    }\n\n    this.$$compose();\n    return this;\n  },\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#hash\n   * @methodOf ng.$location\n   *\n   * @description\n   * This method is getter / setter.\n   *\n   * Return hash fragment when called without any parameter.\n   *\n   * Change hash fragment when called with parameter and return `$location`.\n   *\n   * @param {string=} hash New hash fragment\n   * @return {string} hash\n   */\n  hash: locationGetterSetter('$$hash', identity),\n\n  /**\n   * @ngdoc method\n   * @name ng.$location#replace\n   * @methodOf ng.$location\n   *\n   * @description\n   * If called, all changes to $location during current `$digest` will be replacing current history\n   * record, instead of adding new one.\n   */\n  replace: function() {\n    this.$$replace = true;\n    return this;\n  }\n};\n\nLocationHashbangUrl.prototype = inherit(LocationUrl.prototype);\n\nfunction LocationHashbangInHtml5Url(url, hashPrefix, appBaseUrl, baseExtra) {\n  LocationHashbangUrl.apply(this, arguments);\n\n\n  this.$$rewriteAppUrl = function(absoluteLinkUrl) {\n    if (absoluteLinkUrl.indexOf(appBaseUrl) == 0) {\n      return appBaseUrl + baseExtra + '#' + hashPrefix  + absoluteLinkUrl.substr(appBaseUrl.length);\n    }\n  }\n}\n\nLocationHashbangInHtml5Url.prototype = inherit(LocationHashbangUrl.prototype);\n\nfunction locationGetter(property) {\n  return function() {\n    return this[property];\n  };\n}\n\n\nfunction locationGetterSetter(property, preprocess) {\n  return function(value) {\n    if (isUndefined(value))\n      return this[property];\n\n    this[property] = preprocess(value);\n    this.$$compose();\n\n    return this;\n  };\n}\n\n\n/**\n * @ngdoc object\n * @name ng.$location\n *\n * @requires $browser\n * @requires $sniffer\n * @requires $rootElement\n *\n * @description\n * The $location service parses the URL in the browser address bar (based on the\n * {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL\n * available to your application. Changes to the URL in the address bar are reflected into\n * $location service and changes to $location are reflected into the browser address bar.\n *\n * **The $location service:**\n *\n * - Exposes the current URL in the browser address bar, so you can\n *   - Watch and observe the URL.\n *   - Change the URL.\n * - Synchronizes the URL with the browser when the user\n *   - Changes the address bar.\n *   - Clicks the back or forward button (or clicks a History link).\n *   - Clicks on a link.\n * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n *\n * For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular\n * Services: Using $location}\n */\n\n/**\n * @ngdoc object\n * @name ng.$locationProvider\n * @description\n * Use the `$locationProvider` to configure how the application deep linking paths are stored.\n */\nfunction $LocationProvider(){\n  var hashPrefix = '',\n      html5Mode = false;\n\n  /**\n   * @ngdoc property\n   * @name ng.$locationProvider#hashPrefix\n   * @methodOf ng.$locationProvider\n   * @description\n   * @param {string=} prefix Prefix for hash part (containing path and search)\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.hashPrefix = function(prefix) {\n    if (isDefined(prefix)) {\n      hashPrefix = prefix;\n      return this;\n    } else {\n      return hashPrefix;\n    }\n  };\n\n  /**\n   * @ngdoc property\n   * @name ng.$locationProvider#html5Mode\n   * @methodOf ng.$locationProvider\n   * @description\n   * @param {string=} mode Use HTML5 strategy if available.\n   * @returns {*} current value if used as getter or itself (chaining) if used as setter\n   */\n  this.html5Mode = function(mode) {\n    if (isDefined(mode)) {\n      html5Mode = mode;\n      return this;\n    } else {\n      return html5Mode;\n    }\n  };\n\n  this.$get = ['$rootScope', '$browser', '$sniffer', '$rootElement',\n      function( $rootScope,   $browser,   $sniffer,   $rootElement) {\n    var $location,\n        basePath,\n        pathPrefix,\n        initUrl = $browser.url(),\n        initUrlParts = matchUrl(initUrl),\n        appBaseUrl;\n\n    if (html5Mode) {\n      basePath = $browser.baseHref() || '/';\n      pathPrefix = pathPrefixFromBase(basePath);\n      appBaseUrl =\n          composeProtocolHostPort(initUrlParts.protocol, initUrlParts.host, initUrlParts.port) +\n          pathPrefix + '/';\n\n      if ($sniffer.history) {\n        $location = new LocationUrl(\n          convertToHtml5Url(initUrl, basePath, hashPrefix),\n          pathPrefix, appBaseUrl);\n      } else {\n        $location = new LocationHashbangInHtml5Url(\n          convertToHashbangUrl(initUrl, basePath, hashPrefix),\n          hashPrefix, appBaseUrl, basePath.substr(pathPrefix.length + 1));\n      }\n    } else {\n      appBaseUrl =\n          composeProtocolHostPort(initUrlParts.protocol, initUrlParts.host, initUrlParts.port) +\n          (initUrlParts.path || '') +\n          (initUrlParts.search ? ('?' + initUrlParts.search) : '') +\n          '#' + hashPrefix + '/';\n\n      $location = new LocationHashbangUrl(initUrl, hashPrefix, appBaseUrl);\n    }\n\n    $rootElement.bind('click', function(event) {\n      // TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)\n      // currently we open nice url link and redirect then\n\n      if (event.ctrlKey || event.metaKey || event.which == 2) return;\n\n      var elm = jqLite(event.target);\n\n      // traverse the DOM up to find first A tag\n      while (lowercase(elm[0].nodeName) !== 'a') {\n        // ignore rewriting if no A tag (reached root element, or no parent - removed from document)\n        if (elm[0] === $rootElement[0] || !(elm = elm.parent())[0]) return;\n      }\n\n      var absHref = elm.prop('href'),\n          rewrittenUrl = $location.$$rewriteAppUrl(absHref);\n\n      if (absHref && !elm.attr('target') && rewrittenUrl) {\n        // update location manually\n        $location.$$parse(rewrittenUrl);\n        $rootScope.$apply();\n        event.preventDefault();\n        // hack to work around FF6 bug 684208 when scenario runner clicks on links\n        window.angular['ff-684208-preventDefault'] = true;\n      }\n    });\n\n\n    // rewrite hashbang url <> html5 url\n    if ($location.absUrl() != initUrl) {\n      $browser.url($location.absUrl(), true);\n    }\n\n    // update $location when $browser url changes\n    $browser.onUrlChange(function(newUrl) {\n      if ($location.absUrl() != newUrl) {\n        if ($rootScope.$broadcast('$locationChangeStart', newUrl, $location.absUrl()).defaultPrevented) {\n          $browser.url($location.absUrl());\n          return;\n        }\n        $rootScope.$evalAsync(function() {\n          var oldUrl = $location.absUrl();\n\n          $location.$$parse(newUrl);\n          afterLocationChange(oldUrl);\n        });\n        if (!$rootScope.$$phase) $rootScope.$digest();\n      }\n    });\n\n    // update browser\n    var changeCounter = 0;\n    $rootScope.$watch(function $locationWatch() {\n      var oldUrl = $browser.url();\n      var currentReplace = $location.$$replace;\n\n      if (!changeCounter || oldUrl != $location.absUrl()) {\n        changeCounter++;\n        $rootScope.$evalAsync(function() {\n          if ($rootScope.$broadcast('$locationChangeStart', $location.absUrl(), oldUrl).\n              defaultPrevented) {\n            $location.$$parse(oldUrl);\n          } else {\n            $browser.url($location.absUrl(), currentReplace);\n            afterLocationChange(oldUrl);\n          }\n        });\n      }\n      $location.$$replace = false;\n\n      return changeCounter;\n    });\n\n    return $location;\n\n    function afterLocationChange(oldUrl) {\n      $rootScope.$broadcast('$locationChangeSuccess', $location.absUrl(), oldUrl);\n    }\n}];\n}\n\n/**\n * @ngdoc object\n * @name ng.$log\n * @requires $window\n *\n * @description\n * Simple service for logging. Default implementation writes the message\n * into the browser's console (if present).\n *\n * The main purpose of this service is to simplify debugging and troubleshooting.\n *\n * @example\n   <example>\n     <file name=\"script.js\">\n       function LogCtrl($scope, $log) {\n         $scope.$log = $log;\n         $scope.message = 'Hello World!';\n       }\n     </file>\n     <file name=\"index.html\">\n       <div ng-controller=\"LogCtrl\">\n         <p>Reload this page with open console, enter text and hit the log button...</p>\n         Message:\n         <input type=\"text\" ng-model=\"message\"/>\n         <button ng-click=\"$log.log(message)\">log</button>\n         <button ng-click=\"$log.warn(message)\">warn</button>\n         <button ng-click=\"$log.info(message)\">info</button>\n         <button ng-click=\"$log.error(message)\">error</button>\n       </div>\n     </file>\n   </example>\n */\n\nfunction $LogProvider(){\n  this.$get = ['$window', function($window){\n    return {\n      /**\n       * @ngdoc method\n       * @name ng.$log#log\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write a log message\n       */\n      log: consoleLog('log'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#warn\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write a warning message\n       */\n      warn: consoleLog('warn'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#info\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write an information message\n       */\n      info: consoleLog('info'),\n\n      /**\n       * @ngdoc method\n       * @name ng.$log#error\n       * @methodOf ng.$log\n       *\n       * @description\n       * Write an error message\n       */\n      error: consoleLog('error')\n    };\n\n    function formatError(arg) {\n      if (arg instanceof Error) {\n        if (arg.stack) {\n          arg = (arg.message && arg.stack.indexOf(arg.message) === -1)\n              ? 'Error: ' + arg.message + '\\n' + arg.stack\n              : arg.stack;\n        } else if (arg.sourceURL) {\n          arg = arg.message + '\\n' + arg.sourceURL + ':' + arg.line;\n        }\n      }\n      return arg;\n    }\n\n    function consoleLog(type) {\n      var console = $window.console || {},\n          logFn = console[type] || console.log || noop;\n\n      if (logFn.apply) {\n        return function() {\n          var args = [];\n          forEach(arguments, function(arg) {\n            args.push(formatError(arg));\n          });\n          return logFn.apply(console, args);\n        };\n      }\n\n      // we are IE which either doesn't have window.console => this is noop and we do nothing,\n      // or we are IE where console.log doesn't have apply so we log at least first 2 args\n      return function(arg1, arg2) {\n        logFn(arg1, arg2);\n      }\n    }\n  }];\n}\n\nvar OPERATORS = {\n    'null':function(){return null;},\n    'true':function(){return true;},\n    'false':function(){return false;},\n    undefined:noop,\n    '+':function(self, locals, a,b){\n      a=a(self, locals); b=b(self, locals);\n      if (isDefined(a)) {\n        if (isDefined(b)) {\n          return a + b;\n        }\n        return a;\n      }\n      return isDefined(b)?b:undefined;},\n    '-':function(self, locals, a,b){a=a(self, locals); b=b(self, locals); return (isDefined(a)?a:0)-(isDefined(b)?b:0);},\n    '*':function(self, locals, a,b){return a(self, locals)*b(self, locals);},\n    '/':function(self, locals, a,b){return a(self, locals)/b(self, locals);},\n    '%':function(self, locals, a,b){return a(self, locals)%b(self, locals);},\n    '^':function(self, locals, a,b){return a(self, locals)^b(self, locals);},\n    '=':noop,\n    '==':function(self, locals, a,b){return a(self, locals)==b(self, locals);},\n    '!=':function(self, locals, a,b){return a(self, locals)!=b(self, locals);},\n    '<':function(self, locals, a,b){return a(self, locals)<b(self, locals);},\n    '>':function(self, locals, a,b){return a(self, locals)>b(self, locals);},\n    '<=':function(self, locals, a,b){return a(self, locals)<=b(self, locals);},\n    '>=':function(self, locals, a,b){return a(self, locals)>=b(self, locals);},\n    '&&':function(self, locals, a,b){return a(self, locals)&&b(self, locals);},\n    '||':function(self, locals, a,b){return a(self, locals)||b(self, locals);},\n    '&':function(self, locals, a,b){return a(self, locals)&b(self, locals);},\n//    '|':function(self, locals, a,b){return a|b;},\n    '|':function(self, locals, a,b){return b(self, locals)(self, locals, a(self, locals));},\n    '!':function(self, locals, a){return !a(self, locals);}\n};\nvar ESCAPE = {\"n\":\"\\n\", \"f\":\"\\f\", \"r\":\"\\r\", \"t\":\"\\t\", \"v\":\"\\v\", \"'\":\"'\", '\"':'\"'};\n\nfunction lex(text, csp){\n  var tokens = [],\n      token,\n      index = 0,\n      json = [],\n      ch,\n      lastCh = ':'; // can start regexp\n\n  while (index < text.length) {\n    ch = text.charAt(index);\n    if (is('\"\\'')) {\n      readString(ch);\n    } else if (isNumber(ch) || is('.') && isNumber(peek())) {\n      readNumber();\n    } else if (isIdent(ch)) {\n      readIdent();\n      // identifiers can only be if the preceding char was a { or ,\n      if (was('{,') && json[0]=='{' &&\n         (token=tokens[tokens.length-1])) {\n        token.json = token.text.indexOf('.') == -1;\n      }\n    } else if (is('(){}[].,;:')) {\n      tokens.push({\n        index:index,\n        text:ch,\n        json:(was(':[,') && is('{[')) || is('}]:,')\n      });\n      if (is('{[')) json.unshift(ch);\n      if (is('}]')) json.shift();\n      index++;\n    } else if (isWhitespace(ch)) {\n      index++;\n      continue;\n    } else {\n      var ch2 = ch + peek(),\n          fn = OPERATORS[ch],\n          fn2 = OPERATORS[ch2];\n      if (fn2) {\n        tokens.push({index:index, text:ch2, fn:fn2});\n        index += 2;\n      } else if (fn) {\n        tokens.push({index:index, text:ch, fn:fn, json: was('[,:') && is('+-')});\n        index += 1;\n      } else {\n        throwError(\"Unexpected next character \", index, index+1);\n      }\n    }\n    lastCh = ch;\n  }\n  return tokens;\n\n  function is(chars) {\n    return chars.indexOf(ch) != -1;\n  }\n\n  function was(chars) {\n    return chars.indexOf(lastCh) != -1;\n  }\n\n  function peek() {\n    return index + 1 < text.length ? text.charAt(index + 1) : false;\n  }\n  function isNumber(ch) {\n    return '0' <= ch && ch <= '9';\n  }\n  function isWhitespace(ch) {\n    return ch == ' ' || ch == '\\r' || ch == '\\t' ||\n           ch == '\\n' || ch == '\\v' || ch == '\\u00A0'; // IE treats non-breaking space as \\u00A0\n  }\n  function isIdent(ch) {\n    return 'a' <= ch && ch <= 'z' ||\n           'A' <= ch && ch <= 'Z' ||\n           '_' == ch || ch == '$';\n  }\n  function isExpOperator(ch) {\n    return ch == '-' || ch == '+' || isNumber(ch);\n  }\n\n  function throwError(error, start, end) {\n    end = end || index;\n    throw Error(\"Lexer Error: \" + error + \" at column\" +\n        (isDefined(start)\n            ? \"s \" + start +  \"-\" + index + \" [\" + text.substring(start, end) + \"]\"\n            : \" \" + end) +\n        \" in expression [\" + text + \"].\");\n  }\n\n  function readNumber() {\n    var number = \"\";\n    var start = index;\n    while (index < text.length) {\n      var ch = lowercase(text.charAt(index));\n      if (ch == '.' || isNumber(ch)) {\n        number += ch;\n      } else {\n        var peekCh = peek();\n        if (ch == 'e' && isExpOperator(peekCh)) {\n          number += ch;\n        } else if (isExpOperator(ch) &&\n            peekCh && isNumber(peekCh) &&\n            number.charAt(number.length - 1) == 'e') {\n          number += ch;\n        } else if (isExpOperator(ch) &&\n            (!peekCh || !isNumber(peekCh)) &&\n            number.charAt(number.length - 1) == 'e') {\n          throwError('Invalid exponent');\n        } else {\n          break;\n        }\n      }\n      index++;\n    }\n    number = 1 * number;\n    tokens.push({index:start, text:number, json:true,\n      fn:function() {return number;}});\n  }\n  function readIdent() {\n    var ident = \"\",\n        start = index,\n        lastDot, peekIndex, methodName, ch;\n\n    while (index < text.length) {\n      ch = text.charAt(index);\n      if (ch == '.' || isIdent(ch) || isNumber(ch)) {\n        if (ch == '.') lastDot = index;\n        ident += ch;\n      } else {\n        break;\n      }\n      index++;\n    }\n\n    //check if this is not a method invocation and if it is back out to last dot\n    if (lastDot) {\n      peekIndex = index;\n      while(peekIndex < text.length) {\n        ch = text.charAt(peekIndex);\n        if (ch == '(') {\n          methodName = ident.substr(lastDot - start + 1);\n          ident = ident.substr(0, lastDot - start);\n          index = peekIndex;\n          break;\n        }\n        if(isWhitespace(ch)) {\n          peekIndex++;\n        } else {\n          break;\n        }\n      }\n    }\n\n\n    var token = {\n      index:start,\n      text:ident\n    };\n\n    if (OPERATORS.hasOwnProperty(ident)) {\n      token.fn = token.json = OPERATORS[ident];\n    } else {\n      var getter = getterFn(ident, csp);\n      token.fn = extend(function(self, locals) {\n        return (getter(self, locals));\n      }, {\n        assign: function(self, value) {\n          return setter(self, ident, value);\n        }\n      });\n    }\n\n    tokens.push(token);\n\n    if (methodName) {\n      tokens.push({\n        index:lastDot,\n        text: '.',\n        json: false\n      });\n      tokens.push({\n        index: lastDot + 1,\n        text: methodName,\n        json: false\n      });\n    }\n  }\n\n  function readString(quote) {\n    var start = index;\n    index++;\n    var string = \"\";\n    var rawString = quote;\n    var escape = false;\n    while (index < text.length) {\n      var ch = text.charAt(index);\n      rawString += ch;\n      if (escape) {\n        if (ch == 'u') {\n          var hex = text.substring(index + 1, index + 5);\n          if (!hex.match(/[\\da-f]{4}/i))\n            throwError( \"Invalid unicode escape [\\\\u\" + hex + \"]\");\n          index += 4;\n          string += String.fromCharCode(parseInt(hex, 16));\n        } else {\n          var rep = ESCAPE[ch];\n          if (rep) {\n            string += rep;\n          } else {\n            string += ch;\n          }\n        }\n        escape = false;\n      } else if (ch == '\\\\') {\n        escape = true;\n      } else if (ch == quote) {\n        index++;\n        tokens.push({\n          index:start,\n          text:rawString,\n          string:string,\n          json:true,\n          fn:function() { return string; }\n        });\n        return;\n      } else {\n        string += ch;\n      }\n      index++;\n    }\n    throwError(\"Unterminated quote\", start);\n  }\n}\n\n/////////////////////////////////////////\n\nfunction parser(text, json, $filter, csp){\n  var ZERO = valueFn(0),\n      value,\n      tokens = lex(text, csp),\n      assignment = _assignment,\n      functionCall = _functionCall,\n      fieldAccess = _fieldAccess,\n      objectIndex = _objectIndex,\n      filterChain = _filterChain;\n\n  if(json){\n    // The extra level of aliasing is here, just in case the lexer misses something, so that\n    // we prevent any accidental execution in JSON.\n    assignment = logicalOR;\n    functionCall =\n      fieldAccess =\n      objectIndex =\n      filterChain =\n        function() { throwError(\"is not valid json\", {text:text, index:0}); };\n    value = primary();\n  } else {\n    value = statements();\n  }\n  if (tokens.length !== 0) {\n    throwError(\"is an unexpected token\", tokens[0]);\n  }\n  return value;\n\n  ///////////////////////////////////\n  function throwError(msg, token) {\n    throw Error(\"Syntax Error: Token '\" + token.text +\n      \"' \" + msg + \" at column \" +\n      (token.index + 1) + \" of the expression [\" +\n      text + \"] starting at [\" + text.substring(token.index) + \"].\");\n  }\n\n  function peekToken() {\n    if (tokens.length === 0)\n      throw Error(\"Unexpected end of expression: \" + text);\n    return tokens[0];\n  }\n\n  function peek(e1, e2, e3, e4) {\n    if (tokens.length > 0) {\n      var token = tokens[0];\n      var t = token.text;\n      if (t==e1 || t==e2 || t==e3 || t==e4 ||\n          (!e1 && !e2 && !e3 && !e4)) {\n        return token;\n      }\n    }\n    return false;\n  }\n\n  function expect(e1, e2, e3, e4){\n    var token = peek(e1, e2, e3, e4);\n    if (token) {\n      if (json && !token.json) {\n        throwError(\"is not valid json\", token);\n      }\n      tokens.shift();\n      return token;\n    }\n    return false;\n  }\n\n  function consume(e1){\n    if (!expect(e1)) {\n      throwError(\"is unexpected, expecting [\" + e1 + \"]\", peek());\n    }\n  }\n\n  function unaryFn(fn, right) {\n    return function(self, locals) {\n      return fn(self, locals, right);\n    };\n  }\n\n  function binaryFn(left, fn, right) {\n    return function(self, locals) {\n      return fn(self, locals, left, right);\n    };\n  }\n\n  function statements() {\n    var statements = [];\n    while(true) {\n      if (tokens.length > 0 && !peek('}', ')', ';', ']'))\n        statements.push(filterChain());\n      if (!expect(';')) {\n        // optimize for the common case where there is only one statement.\n        // TODO(size): maybe we should not support multiple statements?\n        return statements.length == 1\n          ? statements[0]\n          : function(self, locals){\n            var value;\n            for ( var i = 0; i < statements.length; i++) {\n              var statement = statements[i];\n              if (statement)\n                value = statement(self, locals);\n            }\n            return value;\n          };\n      }\n    }\n  }\n\n  function _filterChain() {\n    var left = expression();\n    var token;\n    while(true) {\n      if ((token = expect('|'))) {\n        left = binaryFn(left, token.fn, filter());\n      } else {\n        return left;\n      }\n    }\n  }\n\n  function filter() {\n    var token = expect();\n    var fn = $filter(token.text);\n    var argsFn = [];\n    while(true) {\n      if ((token = expect(':'))) {\n        argsFn.push(expression());\n      } else {\n        var fnInvoke = function(self, locals, input){\n          var args = [input];\n          for ( var i = 0; i < argsFn.length; i++) {\n            args.push(argsFn[i](self, locals));\n          }\n          return fn.apply(self, args);\n        };\n        return function() {\n          return fnInvoke;\n        };\n      }\n    }\n  }\n\n  function expression() {\n    return assignment();\n  }\n\n  function _assignment() {\n    var left = logicalOR();\n    var right;\n    var token;\n    if ((token = expect('='))) {\n      if (!left.assign) {\n        throwError(\"implies assignment but [\" +\n          text.substring(0, token.index) + \"] can not be assigned to\", token);\n      }\n      right = logicalOR();\n      return function(scope, locals){\n        return left.assign(scope, right(scope, locals), locals);\n      };\n    } else {\n      return left;\n    }\n  }\n\n  function logicalOR() {\n    var left = logicalAND();\n    var token;\n    while(true) {\n      if ((token = expect('||'))) {\n        left = binaryFn(left, token.fn, logicalAND());\n      } else {\n        return left;\n      }\n    }\n  }\n\n  function logicalAND() {\n    var left = equality();\n    var token;\n    if ((token = expect('&&'))) {\n      left = binaryFn(left, token.fn, logicalAND());\n    }\n    return left;\n  }\n\n  function equality() {\n    var left = relational();\n    var token;\n    if ((token = expect('==','!='))) {\n      left = binaryFn(left, token.fn, equality());\n    }\n    return left;\n  }\n\n  function relational() {\n    var left = additive();\n    var token;\n    if ((token = expect('<', '>', '<=', '>='))) {\n      left = binaryFn(left, token.fn, relational());\n    }\n    return left;\n  }\n\n  function additive() {\n    var left = multiplicative();\n    var token;\n    while ((token = expect('+','-'))) {\n      left = binaryFn(left, token.fn, multiplicative());\n    }\n    return left;\n  }\n\n  function multiplicative() {\n    var left = unary();\n    var token;\n    while ((token = expect('*','/','%'))) {\n      left = binaryFn(left, token.fn, unary());\n    }\n    return left;\n  }\n\n  function unary() {\n    var token;\n    if (expect('+')) {\n      return primary();\n    } else if ((token = expect('-'))) {\n      return binaryFn(ZERO, token.fn, unary());\n    } else if ((token = expect('!'))) {\n      return unaryFn(token.fn, unary());\n    } else {\n      return primary();\n    }\n  }\n\n\n  function primary() {\n    var primary;\n    if (expect('(')) {\n      primary = filterChain();\n      consume(')');\n    } else if (expect('[')) {\n      primary = arrayDeclaration();\n    } else if (expect('{')) {\n      primary = object();\n    } else {\n      var token = expect();\n      primary = token.fn;\n      if (!primary) {\n        throwError(\"not a primary expression\", token);\n      }\n    }\n\n    var next, context;\n    while ((next = expect('(', '[', '.'))) {\n      if (next.text === '(') {\n        primary = functionCall(primary, context);\n        context = null;\n      } else if (next.text === '[') {\n        context = primary;\n        primary = objectIndex(primary);\n      } else if (next.text === '.') {\n        context = primary;\n        primary = fieldAccess(primary);\n      } else {\n        throwError(\"IMPOSSIBLE\");\n      }\n    }\n    return primary;\n  }\n\n  function _fieldAccess(object) {\n    var field = expect().text;\n    var getter = getterFn(field, csp);\n    return extend(\n        function(scope, locals, self) {\n          return getter(self || object(scope, locals), locals);\n        },\n        {\n          assign:function(scope, value, locals) {\n            return setter(object(scope, locals), field, value);\n          }\n        }\n    );\n  }\n\n  function _objectIndex(obj) {\n    var indexFn = expression();\n    consume(']');\n    return extend(\n      function(self, locals){\n        var o = obj(self, locals),\n            i = indexFn(self, locals),\n            v, p;\n\n        if (!o) return undefined;\n        v = o[i];\n        if (v && v.then) {\n          p = v;\n          if (!('$$v' in v)) {\n            p.$$v = undefined;\n            p.then(function(val) { p.$$v = val; });\n          }\n          v = v.$$v;\n        }\n        return v;\n      }, {\n        assign:function(self, value, locals){\n          return obj(self, locals)[indexFn(self, locals)] = value;\n        }\n      });\n  }\n\n  function _functionCall(fn, contextGetter) {\n    var argsFn = [];\n    if (peekToken().text != ')') {\n      do {\n        argsFn.push(expression());\n      } while (expect(','));\n    }\n    consume(')');\n    return function(scope, locals){\n      var args = [],\n          context = contextGetter ? contextGetter(scope, locals) : scope;\n\n      for ( var i = 0; i < argsFn.length; i++) {\n        args.push(argsFn[i](scope, locals));\n      }\n      var fnPtr = fn(scope, locals, context) || noop;\n      // IE stupidity!\n      return fnPtr.apply\n          ? fnPtr.apply(context, args)\n          : fnPtr(args[0], args[1], args[2], args[3], args[4]);\n    };\n  }\n\n  // This is used with json array declaration\n  function arrayDeclaration () {\n    var elementFns = [];\n    if (peekToken().text != ']') {\n      do {\n        elementFns.push(expression());\n      } while (expect(','));\n    }\n    consume(']');\n    return function(self, locals){\n      var array = [];\n      for ( var i = 0; i < elementFns.length; i++) {\n        array.push(elementFns[i](self, locals));\n      }\n      return array;\n    };\n  }\n\n  function object () {\n    var keyValues = [];\n    if (peekToken().text != '}') {\n      do {\n        var token = expect(),\n        key = token.string || token.text;\n        consume(\":\");\n        var value = expression();\n        keyValues.push({key:key, value:value});\n      } while (expect(','));\n    }\n    consume('}');\n    return function(self, locals){\n      var object = {};\n      for ( var i = 0; i < keyValues.length; i++) {\n        var keyValue = keyValues[i];\n        object[keyValue.key] = keyValue.value(self, locals);\n      }\n      return object;\n    };\n  }\n}\n\n//////////////////////////////////////////////////\n// Parser helper functions\n//////////////////////////////////////////////////\n\nfunction setter(obj, path, setValue) {\n  var element = path.split('.');\n  for (var i = 0; element.length > 1; i++) {\n    var key = element.shift();\n    var propertyObj = obj[key];\n    if (!propertyObj) {\n      propertyObj = {};\n      obj[key] = propertyObj;\n    }\n    obj = propertyObj;\n  }\n  obj[element.shift()] = setValue;\n  return setValue;\n}\n\nvar getterFnCache = {};\n\n/**\n * Implementation of the \"Black Hole\" variant from:\n * - http://jsperf.com/angularjs-parse-getter/4\n * - http://jsperf.com/path-evaluation-simplified/7\n */\nfunction cspSafeGetterFn(key0, key1, key2, key3, key4) {\n  return function(scope, locals) {\n    var pathVal = (locals && locals.hasOwnProperty(key0)) ? locals : scope,\n        promise;\n\n    if (pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key0];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key1 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key1];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key2 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key2];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key3 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key3];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    if (!key4 || pathVal === null || pathVal === undefined) return pathVal;\n\n    pathVal = pathVal[key4];\n    if (pathVal && pathVal.then) {\n      if (!(\"$$v\" in pathVal)) {\n        promise = pathVal;\n        promise.$$v = undefined;\n        promise.then(function(val) { promise.$$v = val; });\n      }\n      pathVal = pathVal.$$v;\n    }\n    return pathVal;\n  };\n}\n\nfunction getterFn(path, csp) {\n  if (getterFnCache.hasOwnProperty(path)) {\n    return getterFnCache[path];\n  }\n\n  var pathKeys = path.split('.'),\n      pathKeysLength = pathKeys.length,\n      fn;\n\n  if (csp) {\n    fn = (pathKeysLength < 6)\n        ? cspSafeGetterFn(pathKeys[0], pathKeys[1], pathKeys[2], pathKeys[3], pathKeys[4])\n        : function(scope, locals) {\n          var i = 0, val;\n          do {\n            val = cspSafeGetterFn(\n                    pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++], pathKeys[i++]\n                  )(scope, locals);\n\n            locals = undefined; // clear after first iteration\n            scope = val;\n          } while (i < pathKeysLength);\n          return val;\n        }\n  } else {\n    var code = 'var l, fn, p;\\n';\n    forEach(pathKeys, function(key, index) {\n      code += 'if(s === null || s === undefined) return s;\\n' +\n              'l=s;\\n' +\n              's='+ (index\n                      // we simply dereference 's' on any .dot notation\n                      ? 's'\n                      // but if we are first then we check locals first, and if so read it first\n                      : '((k&&k.hasOwnProperty(\"' + key + '\"))?k:s)') + '[\"' + key + '\"]' + ';\\n' +\n              'if (s && s.then) {\\n' +\n                ' if (!(\"$$v\" in s)) {\\n' +\n                  ' p=s;\\n' +\n                  ' p.$$v = undefined;\\n' +\n                  ' p.then(function(v) {p.$$v=v;});\\n' +\n                  '}\\n' +\n                ' s=s.$$v\\n' +\n              '}\\n';\n    });\n    code += 'return s;';\n    fn = Function('s', 'k', code); // s=scope, k=locals\n    fn.toString = function() { return code; };\n  }\n\n  return getterFnCache[path] = fn;\n}\n\n///////////////////////////////////\n\n/**\n * @ngdoc function\n * @name ng.$parse\n * @function\n *\n * @description\n *\n * Converts Angular {@link guide/expression expression} into a function.\n *\n * <pre>\n *   var getter = $parse('user.name');\n *   var setter = getter.assign;\n *   var context = {user:{name:'angular'}};\n *   var locals = {user:{name:'local'}};\n *\n *   expect(getter(context)).toEqual('angular');\n *   setter(context, 'newValue');\n *   expect(context.user.name).toEqual('newValue');\n *   expect(getter(context, locals)).toEqual('local');\n * </pre>\n *\n *\n * @param {string} expression String expression to compile.\n * @returns {function(context, locals)} a function which represents the compiled expression:\n *\n *    * `context` – `{object}` – an object against which any expressions embedded in the strings\n *      are evaluated against (tipically a scope object).\n *    * `locals` – `{object=}` – local variables context object, useful for overriding values in\n *      `context`.\n *\n *    The return function also has an `assign` property, if the expression is assignable, which\n *    allows one to set values to expressions.\n *\n */\nfunction $ParseProvider() {\n  var cache = {};\n  this.$get = ['$filter', '$sniffer', function($filter, $sniffer) {\n    return function(exp) {\n      switch(typeof exp) {\n        case 'string':\n          return cache.hasOwnProperty(exp)\n            ? cache[exp]\n            : cache[exp] =  parser(exp, false, $filter, $sniffer.csp);\n        case 'function':\n          return exp;\n        default:\n          return noop;\n      }\n    };\n  }];\n}\n\n/**\n * @ngdoc service\n * @name ng.$q\n * @requires $rootScope\n *\n * @description\n * A promise/deferred implementation inspired by [Kris Kowal's Q](https://github.com/kriskowal/q).\n *\n * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\n * interface for interacting with an object that represents the result of an action that is\n * performed asynchronously, and may or may not be finished at any given point in time.\n *\n * From the perspective of dealing with error handling, deferred and promise APIs are to\n * asynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n *\n * <pre>\n *   // for the purpose of this example let's assume that variables `$q` and `scope` are\n *   // available in the current lexical scope (they could have been injected or passed in).\n *\n *   function asyncGreet(name) {\n *     var deferred = $q.defer();\n *\n *     setTimeout(function() {\n *       // since this fn executes async in a future turn of the event loop, we need to wrap\n *       // our code into an $apply call so that the model changes are properly observed.\n *       scope.$apply(function() {\n *         if (okToGreet(name)) {\n *           deferred.resolve('Hello, ' + name + '!');\n *         } else {\n *           deferred.reject('Greeting ' + name + ' is not allowed.');\n *         }\n *       });\n *     }, 1000);\n *\n *     return deferred.promise;\n *   }\n *\n *   var promise = asyncGreet('Robin Hood');\n *   promise.then(function(greeting) {\n *     alert('Success: ' + greeting);\n *   }, function(reason) {\n *     alert('Failed: ' + reason);\n *   });\n * </pre>\n *\n * At first it might not be obvious why this extra complexity is worth the trouble. The payoff\n * comes in the way of\n * [guarantees that promise and deferred APIs make](https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md).\n *\n * Additionally the promise api allows for composition that is very hard to do with the\n * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\n * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\n * section on serial or parallel joining of promises.\n *\n *\n * # The Deferred API\n *\n * A new instance of deferred is constructed by calling `$q.defer()`.\n *\n * The purpose of the deferred object is to expose the associated Promise instance as well as APIs\n * that can be used for signaling the successful or unsuccessful completion of the task.\n *\n * **Methods**\n *\n * - `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n *   constructed via `$q.reject`, the promise will be rejected instead.\n * - `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n *   resolving it with a rejection constructed via `$q.reject`.\n *\n * **Properties**\n *\n * - promise – `{Promise}` – promise object associated with this deferred.\n *\n *\n * # The Promise API\n *\n * A new promise instance is created when a deferred instance is created and can be retrieved by\n * calling `deferred.promise`.\n *\n * The purpose of the promise object is to allow for interested parties to get access to the result\n * of the deferred task when it completes.\n *\n * **Methods**\n *\n * - `then(successCallback, errorCallback)` – regardless of when the promise was or will be resolved\n *   or rejected, `then` calls one of the success or error callbacks asynchronously as soon as the result\n *   is available. The callbacks are called with a single argument: the result or rejection reason.\n *\n *   This method *returns a new promise* which is resolved or rejected via the return value of the\n *   `successCallback` or `errorCallback`.\n *\n *\n * # Chaining promises\n *\n * Because calling the `then` method of a promise returns a new derived promise, it is easily possible\n * to create a chain of promises:\n *\n * <pre>\n *   promiseB = promiseA.then(function(result) {\n *     return result + 1;\n *   });\n *\n *   // promiseB will be resolved immediately after promiseA is resolved and its value\n *   // will be the result of promiseA incremented by 1\n * </pre>\n *\n * It is possible to create chains of any length and since a promise can be resolved with another\n * promise (which will defer its resolution further), it is possible to pause/defer resolution of\n * the promises at any point in the chain. This makes it possible to implement powerful APIs like\n * $http's response interceptors.\n *\n *\n * # Differences between Kris Kowal's Q and $q\n *\n *  There are three main differences:\n *\n * - $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n *   mechanism in angular, which means faster propagation of resolution or rejection into your\n *   models and avoiding unnecessary browser repaints, which would result in flickering UI.\n * - $q promises are recognized by the templating engine in angular, which means that in templates\n *   you can treat promises attached to a scope as if they were the resulting values.\n * - Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n *   all the important functionality needed for common async tasks.\n * \n *  # Testing\n * \n *  <pre>\n *    it('should simulate promise', inject(function($q, $rootScope) {\n *      var deferred = $q.defer();\n *      var promise = deferred.promise;\n *      var resolvedValue;\n * \n *      promise.then(function(value) { resolvedValue = value; });\n *      expect(resolvedValue).toBeUndefined();\n * \n *      // Simulate resolving of promise\n *      deferred.resolve(123);\n *      // Note that the 'then' function does not get called synchronously.\n *      // This is because we want the promise API to always be async, whether or not\n *      // it got called synchronously or asynchronously.\n *      expect(resolvedValue).toBeUndefined();\n * \n *      // Propagate promise resolution to 'then' functions using $apply().\n *      $rootScope.$apply();\n *      expect(resolvedValue).toEqual(123);\n *    });\n *  </pre>\n */\nfunction $QProvider() {\n\n  this.$get = ['$rootScope', '$exceptionHandler', function($rootScope, $exceptionHandler) {\n    return qFactory(function(callback) {\n      $rootScope.$evalAsync(callback);\n    }, $exceptionHandler);\n  }];\n}\n\n\n/**\n * Constructs a promise manager.\n *\n * @param {function(function)} nextTick Function for executing functions in the next turn.\n * @param {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for\n *     debugging purposes.\n * @returns {object} Promise manager.\n */\nfunction qFactory(nextTick, exceptionHandler) {\n\n  /**\n   * @ngdoc\n   * @name ng.$q#defer\n   * @methodOf ng.$q\n   * @description\n   * Creates a `Deferred` object which represents a task which will finish in the future.\n   *\n   * @returns {Deferred} Returns a new instance of deferred.\n   */\n  var defer = function() {\n    var pending = [],\n        value, deferred;\n\n    deferred = {\n\n      resolve: function(val) {\n        if (pending) {\n          var callbacks = pending;\n          pending = undefined;\n          value = ref(val);\n\n          if (callbacks.length) {\n            nextTick(function() {\n              var callback;\n              for (var i = 0, ii = callbacks.length; i < ii; i++) {\n                callback = callbacks[i];\n                value.then(callback[0], callback[1]);\n              }\n            });\n          }\n        }\n      },\n\n\n      reject: function(reason) {\n        deferred.resolve(reject(reason));\n      },\n\n\n      promise: {\n        then: function(callback, errback) {\n          var result = defer();\n\n          var wrappedCallback = function(value) {\n            try {\n              result.resolve((callback || defaultCallback)(value));\n            } catch(e) {\n              result.reject(e);\n              exceptionHandler(e);\n            }\n          };\n\n          var wrappedErrback = function(reason) {\n            try {\n              result.resolve((errback || defaultErrback)(reason));\n            } catch(e) {\n              result.reject(e);\n              exceptionHandler(e);\n            }\n          };\n\n          if (pending) {\n            pending.push([wrappedCallback, wrappedErrback]);\n          } else {\n            value.then(wrappedCallback, wrappedErrback);\n          }\n\n          return result.promise;\n        }\n      }\n    };\n\n    return deferred;\n  };\n\n\n  var ref = function(value) {\n    if (value && value.then) return value;\n    return {\n      then: function(callback) {\n        var result = defer();\n        nextTick(function() {\n          result.resolve(callback(value));\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#reject\n   * @methodOf ng.$q\n   * @description\n   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be\n   * used to forward rejection in a chain of promises. If you are dealing with the last promise in\n   * a promise chain, you don't need to worry about it.\n   *\n   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n   * `reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\n   * a promise error callback and you want to forward the error to the promise derived from the\n   * current promise, you have to \"rethrow\" the error by returning a rejection constructed via\n   * `reject`.\n   *\n   * <pre>\n   *   promiseB = promiseA.then(function(result) {\n   *     // success: do something and resolve promiseB\n   *     //          with the old or a new result\n   *     return result;\n   *   }, function(reason) {\n   *     // error: handle the error if possible and\n   *     //        resolve promiseB with newPromiseOrValue,\n   *     //        otherwise forward the rejection to promiseB\n   *     if (canHandle(reason)) {\n   *      // handle the error and recover\n   *      return newPromiseOrValue;\n   *     }\n   *     return $q.reject(reason);\n   *   });\n   * </pre>\n   *\n   * @param {*} reason Constant, message, exception or an object representing the rejection reason.\n   * @returns {Promise} Returns a promise that was already resolved as rejected with the `reason`.\n   */\n  var reject = function(reason) {\n    return {\n      then: function(callback, errback) {\n        var result = defer();\n        nextTick(function() {\n          result.resolve((errback || defaultErrback)(reason));\n        });\n        return result.promise;\n      }\n    };\n  };\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#when\n   * @methodOf ng.$q\n   * @description\n   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\n   * This is useful when you are dealing with an object that might or might not be a promise, or if\n   * the promise comes from a source that can't be trusted.\n   *\n   * @param {*} value Value or a promise\n   * @returns {Promise} Returns a promise of the passed value or promise\n   */\n  var when = function(value, callback, errback) {\n    var result = defer(),\n        done;\n\n    var wrappedCallback = function(value) {\n      try {\n        return (callback || defaultCallback)(value);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    var wrappedErrback = function(reason) {\n      try {\n        return (errback || defaultErrback)(reason);\n      } catch (e) {\n        exceptionHandler(e);\n        return reject(e);\n      }\n    };\n\n    nextTick(function() {\n      ref(value).then(function(value) {\n        if (done) return;\n        done = true;\n        result.resolve(ref(value).then(wrappedCallback, wrappedErrback));\n      }, function(reason) {\n        if (done) return;\n        done = true;\n        result.resolve(wrappedErrback(reason));\n      });\n    });\n\n    return result.promise;\n  };\n\n\n  function defaultCallback(value) {\n    return value;\n  }\n\n\n  function defaultErrback(reason) {\n    return reject(reason);\n  }\n\n\n  /**\n   * @ngdoc\n   * @name ng.$q#all\n   * @methodOf ng.$q\n   * @description\n   * Combines multiple promises into a single promise that is resolved when all of the input\n   * promises are resolved.\n   *\n   * @param {Array.<Promise>} promises An array of promises.\n   * @returns {Promise} Returns a single promise that will be resolved with an array of values,\n   *   each value corresponding to the promise at the same index in the `promises` array. If any of\n   *   the promises is resolved with a rejection, this resulting promise will be resolved with the\n   *   same rejection.\n   */\n  function all(promises) {\n    var deferred = defer(),\n        counter = promises.length,\n        results = [];\n\n    if (counter) {\n      forEach(promises, function(promise, index) {\n        ref(promise).then(function(value) {\n          if (index in results) return;\n          results[index] = value;\n          if (!(--counter)) deferred.resolve(results);\n        }, function(reason) {\n          if (index in results) return;\n          deferred.reject(reason);\n        });\n      });\n    } else {\n      deferred.resolve(results);\n    }\n\n    return deferred.promise;\n  }\n\n  return {\n    defer: defer,\n    reject: reject,\n    when: when,\n    all: all\n  };\n}\n\n/**\n * @ngdoc object\n * @name ng.$routeProvider\n * @function\n *\n * @description\n *\n * Used for configuring routes. See {@link ng.$route $route} for an example.\n */\nfunction $RouteProvider(){\n  var routes = {};\n\n  /**\n   * @ngdoc method\n   * @name ng.$routeProvider#when\n   * @methodOf ng.$routeProvider\n   *\n   * @param {string} path Route path (matched against `$location.path`). If `$location.path`\n   *    contains redundant trailing slash or is missing one, the route will still match and the\n   *    `$location.path` will be updated to add or drop the trailing slash to exactly match the\n   *    route definition.\n   *\n   *    `path` can contain named groups starting with a colon (`:name`). All characters up to the\n   *    next slash are matched and stored in `$routeParams` under the given `name` after the route\n   *    is resolved.\n   *\n   * @param {Object} route Mapping information to be assigned to `$route.current` on route\n   *    match.\n   *\n   *    Object properties:\n   *\n   *    - `controller` – `{(string|function()=}` – Controller fn that should be associated with newly\n   *      created scope or the name of a {@link angular.Module#controller registered controller}\n   *      if passed as a string.\n   *    - `template` – `{string=}` –  html template as a string that should be used by\n   *      {@link ng.directive:ngView ngView} or\n   *      {@link ng.directive:ngInclude ngInclude} directives.\n   *      this property takes precedence over `templateUrl`.\n   *    - `templateUrl` – `{string=}` – path to an html template that should be used by\n   *      {@link ng.directive:ngView ngView}.\n   *    - `resolve` - `{Object.<string, function>=}` - An optional map of dependencies which should\n   *      be injected into the controller. If any of these dependencies are promises, they will be\n   *      resolved and converted to a value before the controller is instantiated and the\n   *      `$routeChangeSuccess` event is fired. The map object is:\n   *\n   *      - `key` – `{string}`: a name of a dependency to be injected into the controller.\n   *      - `factory` - `{string|function}`: If `string` then it is an alias for a service.\n   *        Otherwise if function, then it is {@link api/AUTO.$injector#invoke injected}\n   *        and the return value is treated as the dependency. If the result is a promise, it is resolved\n   *        before its value is injected into the controller. Be aware that `ngRoute.$routeParams` will\n   *        still refer to the previous route within these resolve functions.  Use `$route.current.params`\n   *        to access the new route parameters, instead.\n   *\n   *    - `redirectTo` – {(string|function())=} – value to update\n   *      {@link ng.$location $location} path with and trigger route redirection.\n   *\n   *      If `redirectTo` is a function, it will be called with the following parameters:\n   *\n   *      - `{Object.<string>}` - route parameters extracted from the current\n   *        `$location.path()` by applying the current route templateUrl.\n   *      - `{string}` - current `$location.path()`\n   *      - `{Object}` - current `$location.search()`\n   *\n   *      The custom `redirectTo` function is expected to return a string which will be used\n   *      to update `$location.path()` and `$location.search()`.\n   *\n   *    - `[reloadOnSearch=true]` - {boolean=} - reload route when only $location.search()\n   *    changes.\n   *\n   *      If the option is set to `false` and url in the browser changes, then\n   *      `$routeUpdate` event is broadcasted on the root scope.\n   *\n   * @returns {Object} self\n   *\n   * @description\n   * Adds a new route definition to the `$route` service.\n   */\n  this.when = function(path, route) {\n    routes[path] = extend({reloadOnSearch: true}, route);\n\n    // create redirection for trailing slashes\n    if (path) {\n      var redirectPath = (path[path.length-1] == '/')\n          ? path.substr(0, path.length-1)\n          : path +'/';\n\n      routes[redirectPath] = {redirectTo: path};\n    }\n\n    return this;\n  };\n\n  /**\n   * @ngdoc method\n   * @name ng.$routeProvider#otherwise\n   * @methodOf ng.$routeProvider\n   *\n   * @description\n   * Sets route definition that will be used on route change when no other route definition\n   * is matched.\n   *\n   * @param {Object} params Mapping information to be assigned to `$route.current`.\n   * @returns {Object} self\n   */\n  this.otherwise = function(params) {\n    this.when(null, params);\n    return this;\n  };\n\n\n  this.$get = ['$rootScope', '$location', '$routeParams', '$q', '$injector', '$http', '$templateCache',\n      function( $rootScope,   $location,   $routeParams,   $q,   $injector,   $http,   $templateCache) {\n\n    /**\n     * @ngdoc object\n     * @name ng.$route\n     * @requires $location\n     * @requires $routeParams\n     *\n     * @property {Object} current Reference to the current route definition.\n     * The route definition contains:\n     *\n     *   - `controller`: The controller constructor as define in route definition.\n     *   - `locals`: A map of locals which is used by {@link ng.$controller $controller} service for\n     *     controller instantiation. The `locals` contain\n     *     the resolved values of the `resolve` map. Additionally the `locals` also contain:\n     *\n     *     - `$scope` - The current route scope.\n     *     - `$template` - The current route template HTML.\n     *\n     * @property {Array.<Object>} routes Array of all configured routes.\n     *\n     * @description\n     * Is used for deep-linking URLs to controllers and views (HTML partials).\n     * It watches `$location.url()` and tries to map the path to an existing route definition.\n     *\n     * You can define routes through {@link ng.$routeProvider $routeProvider}'s API.\n     *\n     * The `$route` service is typically used in conjunction with {@link ng.directive:ngView ngView}\n     * directive and the {@link ng.$routeParams $routeParams} service.\n     *\n     * @example\n       This example shows how changing the URL hash causes the `$route` to match a route against the\n       URL, and the `ngView` pulls in the partial.\n\n       Note that this example is using {@link ng.directive:script inlined templates}\n       to get it working on jsfiddle as well.\n\n     <example module=\"ngView\">\n       <file name=\"index.html\">\n         <div ng-controller=\"MainCntl\">\n           Choose:\n           <a href=\"Book/Moby\">Moby</a> |\n           <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n           <a href=\"Book/Gatsby\">Gatsby</a> |\n           <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n           <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n           <div ng-view></div>\n           <hr />\n\n           <pre>$location.path() = {{$location.path()}}</pre>\n           <pre>$route.current.templateUrl = {{$route.current.templateUrl}}</pre>\n           <pre>$route.current.params = {{$route.current.params}}</pre>\n           <pre>$route.current.scope.name = {{$route.current.scope.name}}</pre>\n           <pre>$routeParams = {{$routeParams}}</pre>\n         </div>\n       </file>\n\n       <file name=\"book.html\">\n         controller: {{name}}<br />\n         Book Id: {{params.bookId}}<br />\n       </file>\n\n       <file name=\"chapter.html\">\n         controller: {{name}}<br />\n         Book Id: {{params.bookId}}<br />\n         Chapter Id: {{params.chapterId}}\n       </file>\n\n       <file name=\"script.js\">\n         angular.module('ngView', [], function($routeProvider, $locationProvider) {\n           $routeProvider.when('/Book/:bookId', {\n             templateUrl: 'book.html',\n             controller: BookCntl,\n             resolve: {\n               // I will cause a 1 second delay\n               delay: function($q, $timeout) {\n                 var delay = $q.defer();\n                 $timeout(delay.resolve, 1000);\n                 return delay.promise;\n               }\n             }\n           });\n           $routeProvider.when('/Book/:bookId/ch/:chapterId', {\n             templateUrl: 'chapter.html',\n             controller: ChapterCntl\n           });\n\n           // configure html5 to get links working on jsfiddle\n           $locationProvider.html5Mode(true);\n         });\n\n         function MainCntl($scope, $route, $routeParams, $location) {\n           $scope.$route = $route;\n           $scope.$location = $location;\n           $scope.$routeParams = $routeParams;\n         }\n\n         function BookCntl($scope, $routeParams) {\n           $scope.name = \"BookCntl\";\n           $scope.params = $routeParams;\n         }\n\n         function ChapterCntl($scope, $routeParams) {\n           $scope.name = \"ChapterCntl\";\n           $scope.params = $routeParams;\n         }\n       </file>\n\n       <file name=\"scenario.js\">\n         it('should load and compile correct template', function() {\n           element('a:contains(\"Moby: Ch1\")').click();\n           var content = element('.doc-example-live [ng-view]').text();\n           expect(content).toMatch(/controller\\: ChapterCntl/);\n           expect(content).toMatch(/Book Id\\: Moby/);\n           expect(content).toMatch(/Chapter Id\\: 1/);\n\n           element('a:contains(\"Scarlet\")').click();\n           sleep(2); // promises are not part of scenario waiting\n           content = element('.doc-example-live [ng-view]').text();\n           expect(content).toMatch(/controller\\: BookCntl/);\n           expect(content).toMatch(/Book Id\\: Scarlet/);\n         });\n       </file>\n     </example>\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeStart\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted before a route change. At this  point the route services starts\n     * resolving all of the dependencies needed for the route change to occurs.\n     * Typically this involves fetching the view template as well as any dependencies\n     * defined in `resolve` route property. Once  all of the dependencies are resolved\n     * `$routeChangeSuccess` is fired.\n     *\n     * @param {Route} next Future route information.\n     * @param {Route} current Current route information.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeSuccess\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted after a route dependencies are resolved.\n     * {@link ng.directive:ngView ngView} listens for the directive\n     * to instantiate the controller and render the view.\n     *\n     * @param {Object} angularEvent Synthetic event object.\n     * @param {Route} current Current route information.\n     * @param {Route|Undefined} previous Previous route information, or undefined if current is first route entered.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeChangeError\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     * Broadcasted if any of the resolve promises are rejected.\n     *\n     * @param {Route} current Current route information.\n     * @param {Route} previous Previous route information.\n     * @param {Route} rejection Rejection of the promise. Usually the error of the failed promise.\n     */\n\n    /**\n     * @ngdoc event\n     * @name ng.$route#$routeUpdate\n     * @eventOf ng.$route\n     * @eventType broadcast on root scope\n     * @description\n     *\n     * The `reloadOnSearch` property has been set to false, and we are reusing the same\n     * instance of the Controller.\n     */\n\n    var forceReload = false,\n        $route = {\n          routes: routes,\n\n          /**\n           * @ngdoc method\n           * @name ng.$route#reload\n           * @methodOf ng.$route\n           *\n           * @description\n           * Causes `$route` service to reload the current route even if\n           * {@link ng.$location $location} hasn't changed.\n           *\n           * As a result of that, {@link ng.directive:ngView ngView}\n           * creates new scope, reinstantiates the controller.\n           */\n          reload: function() {\n            forceReload = true;\n            $rootScope.$evalAsync(updateRoute);\n          }\n        };\n\n    $rootScope.$on('$locationChangeSuccess', updateRoute);\n\n    return $route;\n\n    /////////////////////////////////////////////////////\n\n    /**\n     * @param on {string} current url\n     * @param when {string} route when template to match the url against\n     * @return {?Object}\n     */\n    function switchRouteMatcher(on, when) {\n      // TODO(i): this code is convoluted and inefficient, we should construct the route matching\n      //   regex only once and then reuse it\n\n      // Escape regexp special characters.\n      when = '^' + when.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\") + '$';\n      var regex = '',\n          params = [],\n          dst = {};\n\n      var re = /:(\\w+)/g,\n          paramMatch,\n          lastMatchedIndex = 0;\n\n      while ((paramMatch = re.exec(when)) !== null) {\n        // Find each :param in `when` and replace it with a capturing group.\n        // Append all other sections of when unchanged.\n        regex += when.slice(lastMatchedIndex, paramMatch.index);\n        regex += '([^\\\\/]*)';\n        params.push(paramMatch[1]);\n        lastMatchedIndex = re.lastIndex;\n      }\n      // Append trailing path part.\n      regex += when.substr(lastMatchedIndex);\n\n      var match = on.match(new RegExp(regex));\n      if (match) {\n        forEach(params, function(name, index) {\n          dst[name] = match[index + 1];\n        });\n      }\n      return match ? dst : null;\n    }\n\n    function updateRoute() {\n      var next = parseRoute(),\n          last = $route.current;\n\n      if (next && last && next.$$route === last.$$route\n          && equals(next.pathParams, last.pathParams) && !next.reloadOnSearch && !forceReload) {\n        last.params = next.params;\n        copy(last.params, $routeParams);\n        $rootScope.$broadcast('$routeUpdate', last);\n      } else if (next || last) {\n        forceReload = false;\n        $rootScope.$broadcast('$routeChangeStart', next, last);\n        $route.current = next;\n        if (next) {\n          if (next.redirectTo) {\n            if (isString(next.redirectTo)) {\n              $location.path(interpolate(next.redirectTo, next.params)).search(next.params)\n                       .replace();\n            } else {\n              $location.url(next.redirectTo(next.pathParams, $location.path(), $location.search()))\n                       .replace();\n            }\n          }\n        }\n\n        $q.when(next).\n          then(function() {\n            if (next) {\n              var keys = [],\n                  values = [],\n                  template;\n\n              forEach(next.resolve || {}, function(value, key) {\n                keys.push(key);\n                values.push(isString(value) ? $injector.get(value) : $injector.invoke(value));\n              });\n              if (isDefined(template = next.template)) {\n              } else if (isDefined(template = next.templateUrl)) {\n                template = $http.get(template, {cache: $templateCache}).\n                    then(function(response) { return response.data; });\n              }\n              if (isDefined(template)) {\n                keys.push('$template');\n                values.push(template);\n              }\n              return $q.all(values).then(function(values) {\n                var locals = {};\n                forEach(values, function(value, index) {\n                  locals[keys[index]] = value;\n                });\n                return locals;\n              });\n            }\n          }).\n          // after route change\n          then(function(locals) {\n            if (next == $route.current) {\n              if (next) {\n                next.locals = locals;\n                copy(next.params, $routeParams);\n              }\n              $rootScope.$broadcast('$routeChangeSuccess', next, last);\n            }\n          }, function(error) {\n            if (next == $route.current) {\n              $rootScope.$broadcast('$routeChangeError', next, last, error);\n            }\n          });\n      }\n    }\n\n\n    /**\n     * @returns the current active route, by matching it against the URL\n     */\n    function parseRoute() {\n      // Match a route\n      var params, match;\n      forEach(routes, function(route, path) {\n        if (!match && (params = switchRouteMatcher($location.path(), path))) {\n          match = inherit(route, {\n            params: extend({}, $location.search(), params),\n            pathParams: params});\n          match.$$route = route;\n        }\n      });\n      // No route matched; fallback to \"otherwise\" route\n      return match || routes[null] && inherit(routes[null], {params: {}, pathParams:{}});\n    }\n\n    /**\n     * @returns interpolation of the redirect path with the parametrs\n     */\n    function interpolate(string, params) {\n      var result = [];\n      forEach((string||'').split(':'), function(segment, i) {\n        if (i == 0) {\n          result.push(segment);\n        } else {\n          var segmentMatch = segment.match(/(\\w+)(.*)/);\n          var key = segmentMatch[1];\n          result.push(params[key]);\n          result.push(segmentMatch[2] || '');\n          delete params[key];\n        }\n      });\n      return result.join('');\n    }\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$routeParams\n * @requires $route\n *\n * @description\n * Current set of route parameters. The route parameters are a combination of the\n * {@link ng.$location $location} `search()`, and `path()`. The `path` parameters\n * are extracted when the {@link ng.$route $route} path is matched.\n *\n * In case of parameter name collision, `path` params take precedence over `search` params.\n *\n * The service guarantees that the identity of the `$routeParams` object will remain unchanged\n * (but its properties will likely change) even when a route change occurs.\n *\n * Note that the `$routeParams` are only updated *after* a route change completes successfully.\n * This means that you cannot rely on `$routeParams` being correct in route resolve functions.\n * Instead you can use `$route.current.params` to access the new route's parameters.\n *\n * @example\n * <pre>\n *  // Given:\n *  // URL: http://server.com/index.html#/Chapter/1/Section/2?search=moby\n *  // Route: /Chapter/:chapterId/Section/:sectionId\n *  //\n *  // Then\n *  $routeParams ==> {chapterId:1, sectionId:2, search:'moby'}\n * </pre>\n */\nfunction $RouteParamsProvider() {\n  this.$get = valueFn({});\n}\n\n/**\n * DESIGN NOTES\n *\n * The design decisions behind the scope are heavily favored for speed and memory consumption.\n *\n * The typical use of scope is to watch the expressions, which most of the time return the same\n * value as last time so we optimize the operation.\n *\n * Closures construction is expensive in terms of speed as well as memory:\n *   - No closures, instead use prototypical inheritance for API\n *   - Internal state needs to be stored on scope directly, which means that private state is\n *     exposed as $$____ properties\n *\n * Loop operations are optimized by using while(count--) { ... }\n *   - this means that in order to keep the same order of execution as addition we have to add\n *     items to the array at the beginning (shift) instead of at the end (push)\n *\n * Child scopes are created and removed often\n *   - Using an array would be slow since inserts in middle are expensive so we use linked list\n *\n * There are few watches then a lot of observers. This is why you don't want the observer to be\n * implemented in the same way as watch. Watch requires return of initialization function which\n * are expensive to construct.\n */\n\n\n/**\n * @ngdoc object\n * @name ng.$rootScopeProvider\n * @description\n *\n * Provider for the $rootScope service.\n */\n\n/**\n * @ngdoc function\n * @name ng.$rootScopeProvider#digestTtl\n * @methodOf ng.$rootScopeProvider\n * @description\n *\n * Sets the number of digest iterations the scope should attempt to execute before giving up and\n * assuming that the model is unstable.\n *\n * The current default is 10 iterations.\n *\n * @param {number} limit The number of digest iterations.\n */\n\n\n/**\n * @ngdoc object\n * @name ng.$rootScope\n * @description\n *\n * Every application has a single root {@link ng.$rootScope.Scope scope}.\n * All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide\n * event processing life-cycle. See {@link guide/scope developer guide on scopes}.\n */\nfunction $RootScopeProvider(){\n  var TTL = 10;\n\n  this.digestTtl = function(value) {\n    if (arguments.length) {\n      TTL = value;\n    }\n    return TTL;\n  };\n\n  this.$get = ['$injector', '$exceptionHandler', '$parse',\n      function( $injector,   $exceptionHandler,   $parse) {\n\n    /**\n     * @ngdoc function\n     * @name ng.$rootScope.Scope\n     *\n     * @description\n     * A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n     * {@link AUTO.$injector $injector}. Child scopes are created using the\n     * {@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\n     * compiled HTML template is executed.)\n     *\n     * Here is a simple scope snippet to show how you can interact with the scope.\n     * <pre>\n        angular.injector(['ng']).invoke(function($rootScope) {\n           var scope = $rootScope.$new();\n           scope.salutation = 'Hello';\n           scope.name = 'World';\n\n           expect(scope.greeting).toEqual(undefined);\n\n           scope.$watch('name', function() {\n             scope.greeting = scope.salutation + ' ' + scope.name + '!';\n           }); // initialize the watch\n\n           expect(scope.greeting).toEqual(undefined);\n           scope.name = 'Misko';\n           // still old value, since watches have not been called yet\n           expect(scope.greeting).toEqual(undefined);\n\n           scope.$digest(); // fire all  the watches\n           expect(scope.greeting).toEqual('Hello Misko!');\n        });\n     * </pre>\n     *\n     * # Inheritance\n     * A scope can inherit from a parent scope, as in this example:\n     * <pre>\n         var parent = $rootScope;\n         var child = parent.$new();\n\n         parent.salutation = \"Hello\";\n         child.name = \"World\";\n         expect(child.salutation).toEqual('Hello');\n\n         child.salutation = \"Welcome\";\n         expect(child.salutation).toEqual('Welcome');\n         expect(parent.salutation).toEqual('Hello');\n     * </pre>\n     *\n     *\n     * @param {Object.<string, function()>=} providers Map of service factory which need to be provided\n     *     for the current scope. Defaults to {@link ng}.\n     * @param {Object.<string, *>=} instanceCache Provides pre-instantiated services which should\n     *     append/override services provided by `providers`. This is handy when unit-testing and having\n     *     the need to override a default service.\n     * @returns {Object} Newly created scope.\n     *\n     */\n    function Scope() {\n      this.$id = nextUid();\n      this.$$phase = this.$parent = this.$$watchers =\n                     this.$$nextSibling = this.$$prevSibling =\n                     this.$$childHead = this.$$childTail = null;\n      this['this'] = this.$root =  this;\n      this.$$destroyed = false;\n      this.$$asyncQueue = [];\n      this.$$listeners = {};\n      this.$$isolateBindings = {};\n    }\n\n    /**\n     * @ngdoc property\n     * @name ng.$rootScope.Scope#$id\n     * @propertyOf ng.$rootScope.Scope\n     * @returns {number} Unique scope ID (monotonically increasing alphanumeric sequence) useful for\n     *   debugging.\n     */\n\n\n    Scope.prototype = {\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$new\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Creates a new child {@link ng.$rootScope.Scope scope}.\n       *\n       * The parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} and\n       * {@link ng.$rootScope.Scope#$digest $digest()} events. The scope can be removed from the scope\n       * hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n       *\n       * {@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is desired for\n       * the scope and its child scopes to be permanently detached from the parent and thus stop\n       * participating in model change detection and listener notification by invoking.\n       *\n       * @param {boolean} isolate if true then the scope does not prototypically inherit from the\n       *         parent scope. The scope is isolated, as it can not see parent scope properties.\n       *         When creating widgets it is useful for the widget to not accidentally read parent\n       *         state.\n       *\n       * @returns {Object} The newly created child scope.\n       *\n       */\n      $new: function(isolate) {\n        var Child,\n            child;\n\n        if (isFunction(isolate)) {\n          // TODO: remove at some point\n          throw Error('API-CHANGE: Use $controller to instantiate controllers.');\n        }\n        if (isolate) {\n          child = new Scope();\n          child.$root = this.$root;\n        } else {\n          Child = function() {}; // should be anonymous; This is so that when the minifier munges\n            // the name it does not become random set of chars. These will then show up as class\n            // name in the debugger.\n          Child.prototype = this;\n          child = new Child();\n          child.$id = nextUid();\n        }\n        child['this'] = child;\n        child.$$listeners = {};\n        child.$parent = this;\n        child.$$asyncQueue = [];\n        child.$$watchers = child.$$nextSibling = child.$$childHead = child.$$childTail = null;\n        child.$$prevSibling = this.$$childTail;\n        if (this.$$childHead) {\n          this.$$childTail.$$nextSibling = child;\n          this.$$childTail = child;\n        } else {\n          this.$$childHead = this.$$childTail = child;\n        }\n        return child;\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$watch\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n       *\n       * - The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest $digest()} and\n       *   should return the value which will be watched. (Since {@link ng.$rootScope.Scope#$digest $digest()}\n       *   reruns when it detects changes the `watchExpression` can execute multiple times per\n       *   {@link ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)\n       * - The `listener` is called only when the value from the current `watchExpression` and the\n       *   previous call to `watchExpression` are not equal (with the exception of the initial run,\n       *   see below). The inequality is determined according to\n       *   {@link angular.equals} function. To save the value of the object for later comparison, the\n       *   {@link angular.copy} function is used. It also means that watching complex options will\n       *   have adverse memory and performance implications.\n       * - The watch `listener` may change the model, which may trigger other `listener`s to fire. This\n       *   is achieved by rerunning the watchers until no changes are detected. The rerun iteration\n       *   limit is 10 to prevent an infinite loop deadlock.\n       *\n       *\n       * If you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\n       * you can register a `watchExpression` function with no `listener`. (Since `watchExpression`\n       * can execute multiple times per {@link ng.$rootScope.Scope#$digest $digest} cycle when a change is\n       * detected, be prepared for multiple calls to your listener.)\n       *\n       * After a watcher is registered with the scope, the `listener` fn is called asynchronously\n       * (via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\n       * watcher. In rare cases, this is undesirable because the listener is called when the result\n       * of `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\n       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\n       * listener was called due to initialization.\n       *\n       *\n       * # Example\n       * <pre>\n           // let's assume that scope was dependency injected as the $rootScope\n           var scope = $rootScope;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) { scope.counter = scope.counter + 1; });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // no variable change\n           expect(scope.counter).toEqual(0);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(1);\n       * </pre>\n       *\n       *\n       *\n       * @param {(function()|string)} watchExpression Expression that is evaluated on each\n       *    {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers a\n       *    call to the `listener`.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(scope)`: called with current `scope` as a parameter.\n       * @param {(function()|string)=} listener Callback called whenever the return value of\n       *   the `watchExpression` changes.\n       *\n       *    - `string`: Evaluated as {@link guide/expression expression}\n       *    - `function(newValue, oldValue, scope)`: called with current and previous values as parameters.\n       *\n       * @param {boolean=} objectEquality Compare object for equality rather than for reference.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $watch: function(watchExp, listener, objectEquality) {\n        var scope = this,\n            get = compileToFn(watchExp, 'watch'),\n            array = scope.$$watchers,\n            watcher = {\n              fn: listener,\n              last: initWatchVal,\n              get: get,\n              exp: watchExp,\n              eq: !!objectEquality\n            };\n\n        // in the case user pass string, we need to compile it, do we really need this ?\n        if (!isFunction(listener)) {\n          var listenFn = compileToFn(listener || noop, 'listener');\n          watcher.fn = function(newVal, oldVal, scope) {listenFn(scope);};\n        }\n\n        if (!array) {\n          array = scope.$$watchers = [];\n        }\n        // we use unshift since we use a while loop in $digest for speed.\n        // the while loop reads in reverse order.\n        array.unshift(watcher);\n\n        return function() {\n          arrayRemove(array, watcher);\n        };\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$digest\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and its children.\n       * Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change the model, the\n       * `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers} until no more listeners are\n       * firing. This means that it is possible to get into an infinite loop. This function will throw\n       * `'Maximum iteration limit exceeded.'` if the number of iterations exceeds 10.\n       *\n       * Usually you don't call `$digest()` directly in\n       * {@link ng.directive:ngController controllers} or in\n       * {@link ng.$compileProvider#directive directives}.\n       * Instead a call to {@link ng.$rootScope.Scope#$apply $apply()} (typically from within a\n       * {@link ng.$compileProvider#directive directives}) will force a `$digest()`.\n       *\n       * If you want to be notified whenever `$digest()` is called,\n       * you can register a `watchExpression` function  with {@link ng.$rootScope.Scope#$watch $watch()}\n       * with no `listener`.\n       *\n       * You may have a need to call `$digest()` from within unit-tests, to simulate the scope\n       * life-cycle.\n       *\n       * # Example\n       * <pre>\n           var scope = ...;\n           scope.name = 'misko';\n           scope.counter = 0;\n\n           expect(scope.counter).toEqual(0);\n           scope.$watch('name', function(newValue, oldValue) {\n             scope.counter = scope.counter + 1;\n           });\n           expect(scope.counter).toEqual(0);\n\n           scope.$digest();\n           // no variable change\n           expect(scope.counter).toEqual(0);\n\n           scope.name = 'adam';\n           scope.$digest();\n           expect(scope.counter).toEqual(1);\n       * </pre>\n       *\n       */\n      $digest: function() {\n        var watch, value, last,\n            watchers,\n            asyncQueue,\n            length,\n            dirty, ttl = TTL,\n            next, current, target = this,\n            watchLog = [],\n            logIdx, logMsg;\n\n        beginPhase('$digest');\n\n        do {\n          dirty = false;\n          current = target;\n          do {\n            asyncQueue = current.$$asyncQueue;\n            while(asyncQueue.length) {\n              try {\n                current.$eval(asyncQueue.shift());\n              } catch (e) {\n                $exceptionHandler(e);\n              }\n            }\n            if ((watchers = current.$$watchers)) {\n              // process our watches\n              length = watchers.length;\n              while (length--) {\n                try {\n                  watch = watchers[length];\n                  // Most common watches are on primitives, in which case we can short\n                  // circuit it with === operator, only when === fails do we use .equals\n                  if (watch && (value = watch.get(current)) !== (last = watch.last) &&\n                      !(watch.eq\n                          ? equals(value, last)\n                          : (typeof value == 'number' && typeof last == 'number'\n                             && isNaN(value) && isNaN(last)))) {\n                    dirty = true;\n                    watch.last = watch.eq ? copy(value) : value;\n                    watch.fn(value, ((last === initWatchVal) ? value : last), current);\n                    if (ttl < 5) {\n                      logIdx = 4 - ttl;\n                      if (!watchLog[logIdx]) watchLog[logIdx] = [];\n                      logMsg = (isFunction(watch.exp))\n                          ? 'fn: ' + (watch.exp.name || watch.exp.toString())\n                          : watch.exp;\n                      logMsg += '; newVal: ' + toJson(value) + '; oldVal: ' + toJson(last);\n                      watchLog[logIdx].push(logMsg);\n                    }\n                  }\n                } catch (e) {\n                  $exceptionHandler(e);\n                }\n              }\n            }\n\n            // Insanity Warning: scope depth-first traversal\n            // yes, this code is a bit crazy, but it works and we have tests to prove it!\n            // this piece should be kept in sync with the traversal in $broadcast\n            if (!(next = (current.$$childHead || (current !== target && current.$$nextSibling)))) {\n              while(current !== target && !(next = current.$$nextSibling)) {\n                current = current.$parent;\n              }\n            }\n          } while ((current = next));\n\n          if(dirty && !(ttl--)) {\n            clearPhase();\n            throw Error(TTL + ' $digest() iterations reached. Aborting!\\n' +\n                'Watchers fired in the last 5 iterations: ' + toJson(watchLog));\n          }\n        } while (dirty || asyncQueue.length);\n\n        clearPhase();\n      },\n\n\n      /**\n       * @ngdoc event\n       * @name ng.$rootScope.Scope#$destroy\n       * @eventOf ng.$rootScope.Scope\n       * @eventType broadcast on scope being destroyed\n       *\n       * @description\n       * Broadcasted when a scope and its children are being destroyed.\n       * \n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$destroy\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Removes the current scope (and all of its children) from the parent scope. Removal implies\n       * that calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\n       * propagate to the current scope and its children. Removal also implies that the current\n       * scope is eligible for garbage collection.\n       *\n       * The `$destroy()` is usually used by directives such as\n       * {@link ng.directive:ngRepeat ngRepeat} for managing the\n       * unrolling of the loop.\n       *\n       * Just before a scope is destroyed a `$destroy` event is broadcasted on this scope.\n       * Application code can register a `$destroy` event handler that will give it chance to\n       * perform any necessary cleanup.\n       * \n       * Note that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\n       * clean up DOM bindings before an element is removed from the DOM.\n       */\n      $destroy: function() {\n        // we can't destroy the root scope or a scope that has been already destroyed\n        if ($rootScope == this || this.$$destroyed) return;\n        var parent = this.$parent;\n\n        this.$broadcast('$destroy');\n        this.$$destroyed = true;\n\n        if (parent.$$childHead == this) parent.$$childHead = this.$$nextSibling;\n        if (parent.$$childTail == this) parent.$$childTail = this.$$prevSibling;\n        if (this.$$prevSibling) this.$$prevSibling.$$nextSibling = this.$$nextSibling;\n        if (this.$$nextSibling) this.$$nextSibling.$$prevSibling = this.$$prevSibling;\n\n        // This is bogus code that works around Chrome's GC leak\n        // see: https://github.com/angular/angular.js/issues/1313#issuecomment-10378451\n        this.$parent = this.$$nextSibling = this.$$prevSibling = this.$$childHead =\n            this.$$childTail = null;\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$eval\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Executes the `expression` on the current scope returning the result. Any exceptions in the\n       * expression are propagated (uncaught). This is useful when evaluating Angular expressions.\n       *\n       * # Example\n       * <pre>\n           var scope = ng.$rootScope.Scope();\n           scope.a = 1;\n           scope.b = 2;\n\n           expect(scope.$eval('a+b')).toEqual(3);\n           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n       * </pre>\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $eval: function(expr, locals) {\n        return $parse(expr)(this, locals);\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$evalAsync\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Executes the expression on the current scope at a later point in time.\n       *\n       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only that:\n       *\n       *   - it will execute in the current script execution context (before any DOM rendering).\n       *   - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n       *     `expression` execution.\n       *\n       * Any exceptions from the execution of the expression are forwarded to the\n       * {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {(string|function())=} expression An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with the current `scope` parameter.\n       *\n       */\n      $evalAsync: function(expr) {\n        this.$$asyncQueue.push(expr);\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$apply\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * `$apply()` is used to execute an expression in angular from outside of the angular framework.\n       * (For example from browser DOM events, setTimeout, XHR or third party libraries).\n       * Because we are calling into the angular framework we need to perform proper scope life-cycle\n       * of {@link ng.$exceptionHandler exception handling},\n       * {@link ng.$rootScope.Scope#$digest executing watches}.\n       *\n       * ## Life cycle\n       *\n       * # Pseudo-Code of `$apply()`\n       * <pre>\n           function $apply(expr) {\n             try {\n               return $eval(expr);\n             } catch (e) {\n               $exceptionHandler(e);\n             } finally {\n               $root.$digest();\n             }\n           }\n       * </pre>\n       *\n       *\n       * Scope's `$apply()` method transitions through the following stages:\n       *\n       * 1. The {@link guide/expression expression} is executed using the\n       *    {@link ng.$rootScope.Scope#$eval $eval()} method.\n       * 2. Any exceptions from the execution of the expression are forwarded to the\n       *    {@link ng.$exceptionHandler $exceptionHandler} service.\n       * 3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the expression\n       *    was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.\n       *\n       *\n       * @param {(string|function())=} exp An angular expression to be executed.\n       *\n       *    - `string`: execute using the rules as defined in {@link guide/expression expression}.\n       *    - `function(scope)`: execute the function with current `scope` parameter.\n       *\n       * @returns {*} The result of evaluating the expression.\n       */\n      $apply: function(expr) {\n        try {\n          beginPhase('$apply');\n          return this.$eval(expr);\n        } catch (e) {\n          $exceptionHandler(e);\n        } finally {\n          clearPhase();\n          try {\n            $rootScope.$digest();\n          } catch (e) {\n            $exceptionHandler(e);\n            throw e;\n          }\n        }\n      },\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$on\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for discussion of\n       * event life cycle.\n       *\n       * The event listener function format is: `function(event, args...)`. The `event` object\n       * passed into the listener has the following attributes:\n       *\n       *   - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or `$broadcast`-ed.\n       *   - `currentScope` - `{Scope}`: the current scope which is handling the event.\n       *   - `name` - `{string}`: Name of the event.\n       *   - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel further event\n       *     propagation (available only for events that were `$emit`-ed).\n       *   - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag to true.\n       *   - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.\n       *\n       * @param {string} name Event name to listen on.\n       * @param {function(event, args...)} listener Function to call when the event is emitted.\n       * @returns {function()} Returns a deregistration function for this listener.\n       */\n      $on: function(name, listener) {\n        var namedListeners = this.$$listeners[name];\n        if (!namedListeners) {\n          this.$$listeners[name] = namedListeners = [];\n        }\n        namedListeners.push(listener);\n\n        return function() {\n          namedListeners[indexOf(namedListeners, listener)] = null;\n        };\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$emit\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Dispatches an event `name` upwards through the scope hierarchy notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$emit` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.\n       * Afterwards, the event traverses upwards toward the root scope and calls all registered\n       * listeners along the way. The event will stop propagating if one of the listeners cancels it.\n       *\n       * Any exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to emit.\n       * @param {...*} args Optional set of arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $emit: function(name, args) {\n        var empty = [],\n            namedListeners,\n            scope = this,\n            stopPropagation = false,\n            event = {\n              name: name,\n              targetScope: scope,\n              stopPropagation: function() {stopPropagation = true;},\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            i, length;\n\n        do {\n          namedListeners = scope.$$listeners[name] || empty;\n          event.currentScope = scope;\n          for (i=0, length=namedListeners.length; i<length; i++) {\n\n            // if listeners were deregistered, defragment the array\n            if (!namedListeners[i]) {\n              namedListeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n            try {\n              namedListeners[i].apply(null, listenerArgs);\n              if (stopPropagation) return event;\n            } catch (e) {\n              $exceptionHandler(e);\n            }\n          }\n          //traverse upwards\n          scope = scope.$parent;\n        } while (scope);\n\n        return event;\n      },\n\n\n      /**\n       * @ngdoc function\n       * @name ng.$rootScope.Scope#$broadcast\n       * @methodOf ng.$rootScope.Scope\n       * @function\n       *\n       * @description\n       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the\n       * registered {@link ng.$rootScope.Scope#$on} listeners.\n       *\n       * The event life cycle starts at the scope on which `$broadcast` was called. All\n       * {@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.\n       * Afterwards, the event propagates to all direct and indirect scopes of the current scope and\n       * calls all registered listeners along the way. The event cannot be canceled.\n       *\n       * Any exception emmited from the {@link ng.$rootScope.Scope#$on listeners} will be passed\n       * onto the {@link ng.$exceptionHandler $exceptionHandler} service.\n       *\n       * @param {string} name Event name to broadcast.\n       * @param {...*} args Optional set of arguments which will be passed onto the event listeners.\n       * @return {Object} Event object, see {@link ng.$rootScope.Scope#$on}\n       */\n      $broadcast: function(name, args) {\n        var target = this,\n            current = target,\n            next = target,\n            event = {\n              name: name,\n              targetScope: target,\n              preventDefault: function() {\n                event.defaultPrevented = true;\n              },\n              defaultPrevented: false\n            },\n            listenerArgs = concat([event], arguments, 1),\n            listeners, i, length;\n\n        //down while you can, then up and next sibling or up and next sibling until back at root\n        do {\n          current = next;\n          event.currentScope = current;\n          listeners = current.$$listeners[name] || [];\n          for (i=0, length = listeners.length; i<length; i++) {\n            // if listeners were deregistered, defragment the array\n            if (!listeners[i]) {\n              listeners.splice(i, 1);\n              i--;\n              length--;\n              continue;\n            }\n\n            try {\n              listeners[i].apply(null, listenerArgs);\n            } catch(e) {\n              $exceptionHandler(e);\n            }\n          }\n\n          // Insanity Warning: scope depth-first traversal\n          // yes, this code is a bit crazy, but it works and we have tests to prove it!\n          // this piece should be kept in sync with the traversal in $digest\n          if (!(next = (current.$$childHead || (current !== target && current.$$nextSibling)))) {\n            while(current !== target && !(next = current.$$nextSibling)) {\n              current = current.$parent;\n            }\n          }\n        } while ((current = next));\n\n        return event;\n      }\n    };\n\n    var $rootScope = new Scope();\n\n    return $rootScope;\n\n\n    function beginPhase(phase) {\n      if ($rootScope.$$phase) {\n        throw Error($rootScope.$$phase + ' already in progress');\n      }\n\n      $rootScope.$$phase = phase;\n    }\n\n    function clearPhase() {\n      $rootScope.$$phase = null;\n    }\n\n    function compileToFn(exp, name) {\n      var fn = $parse(exp);\n      assertArgFn(fn, name);\n      return fn;\n    }\n\n    /**\n     * function used as an initial value for watchers.\n     * because it's unique we can easily tell it apart from other values\n     */\n    function initWatchVal() {}\n  }];\n}\n\n/**\n * !!! This is an undocumented \"private\" service !!!\n *\n * @name ng.$sniffer\n * @requires $window\n *\n * @property {boolean} history Does the browser support html5 history api ?\n * @property {boolean} hashchange Does the browser support hashchange event ?\n *\n * @description\n * This is very simple implementation of testing browser's features.\n */\nfunction $SnifferProvider() {\n  this.$get = ['$window', function($window) {\n    var eventSupport = {},\n        android = int((/android (\\d+)/.exec(lowercase($window.navigator.userAgent)) || [])[1]);\n\n    return {\n      // Android has history.pushState, but it does not update location correctly\n      // so let's not use the history API at all.\n      // http://code.google.com/p/android/issues/detail?id=17471\n      // https://github.com/angular/angular.js/issues/904\n      history: !!($window.history && $window.history.pushState && !(android < 4)),\n      hashchange: 'onhashchange' in $window &&\n                  // IE8 compatible mode lies\n                  (!$window.document.documentMode || $window.document.documentMode > 7),\n      hasEvent: function(event) {\n        // IE9 implements 'input' event it's so fubared that we rather pretend that it doesn't have\n        // it. In particular the event is not fired when backspace or delete key are pressed or\n        // when cut operation is performed.\n        if (event == 'input' && msie == 9) return false;\n\n        if (isUndefined(eventSupport[event])) {\n          var divElm = $window.document.createElement('div');\n          eventSupport[event] = 'on' + event in divElm;\n        }\n\n        return eventSupport[event];\n      },\n      // TODO(i): currently there is no way to feature detect CSP without triggering alerts\n      csp: false\n    };\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$window\n *\n * @description\n * A reference to the browser's `window` object. While `window`\n * is globally available in JavaScript, it causes testability problems, because\n * it is a global variable. In angular we always refer to it through the\n * `$window` service, so it may be overriden, removed or mocked for testing.\n *\n * Expressions, like the one defined for the `ngClick` directive in the example\n * below, are evaluated with respect to the current scope.  Therefore, there is\n * no risk of inadvertently coding in a dependency on a global value in such an\n * expression.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope, $window) {\n           $scope.$window = $window;\n           $scope.greeting = 'Hello, World!';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input type=\"text\" ng-model=\"greeting\" />\n         <button ng-click=\"$window.alert(greeting)\">ALERT</button>\n       </div>\n     </doc:source>\n     <doc:scenario>\n      it('should display the greeting in the input box', function() {\n       input('greeting').enter('Hello, E2E Tests');\n       // If we click the button it will block the test runner\n       // element(':button').click();\n      });\n     </doc:scenario>\n   </doc:example>\n */\nfunction $WindowProvider(){\n  this.$get = valueFn(window);\n}\n\n/**\n * Parse headers into key value object\n *\n * @param {string} headers Raw headers as a string\n * @returns {Object} Parsed headers as key value object\n */\nfunction parseHeaders(headers) {\n  var parsed = {}, key, val, i;\n\n  if (!headers) return parsed;\n\n  forEach(headers.split('\\n'), function(line) {\n    i = line.indexOf(':');\n    key = lowercase(trim(line.substr(0, i)));\n    val = trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key]) {\n        parsed[key] += ', ' + val;\n      } else {\n        parsed[key] = val;\n      }\n    }\n  });\n\n  return parsed;\n}\n\n\n/**\n * Returns a function that provides access to parsed headers.\n *\n * Headers are lazy parsed when first requested.\n * @see parseHeaders\n *\n * @param {(string|Object)} headers Headers to provide access to.\n * @returns {function(string=)} Returns a getter function which if called with:\n *\n *   - if called with single an argument returns a single header value or null\n *   - if called with no arguments returns an object containing all headers.\n */\nfunction headersGetter(headers) {\n  var headersObj = isObject(headers) ? headers : undefined;\n\n  return function(name) {\n    if (!headersObj) headersObj =  parseHeaders(headers);\n\n    if (name) {\n      return headersObj[lowercase(name)] || null;\n    }\n\n    return headersObj;\n  };\n}\n\n\n/**\n * Chain all given functions\n *\n * This function is used for both request and response transforming\n *\n * @param {*} data Data to transform.\n * @param {function(string=)} headers Http headers getter fn.\n * @param {(function|Array.<function>)} fns Function or an array of functions.\n * @returns {*} Transformed data.\n */\nfunction transformData(data, headers, fns) {\n  if (isFunction(fns))\n    return fns(data, headers);\n\n  forEach(fns, function(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n}\n\n\nfunction isSuccess(status) {\n  return 200 <= status && status < 300;\n}\n\n\nfunction $HttpProvider() {\n  var JSON_START = /^\\s*(\\[|\\{[^\\{])/,\n      JSON_END = /[\\}\\]]\\s*$/,\n      PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\n\n  var $config = this.defaults = {\n    // transform incoming response data\n    transformResponse: [function(data) {\n      if (isString(data)) {\n        // strip json vulnerability protection prefix\n        data = data.replace(PROTECTION_PREFIX, '');\n        if (JSON_START.test(data) && JSON_END.test(data))\n          data = fromJson(data, true);\n      }\n      return data;\n    }],\n\n    // transform outgoing request data\n    transformRequest: [function(d) {\n      return isObject(d) && !isFile(d) ? toJson(d) : d;\n    }],\n\n    // default headers\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      post: {'Content-Type': 'application/json;charset=utf-8'},\n      put:  {'Content-Type': 'application/json;charset=utf-8'}\n    }\n  };\n\n  var providerResponseInterceptors = this.responseInterceptors = [];\n\n  this.$get = ['$httpBackend', '$browser', '$cacheFactory', '$rootScope', '$q', '$injector',\n      function($httpBackend, $browser, $cacheFactory, $rootScope, $q, $injector) {\n\n    var defaultCache = $cacheFactory('$http'),\n        responseInterceptors = [];\n\n    forEach(providerResponseInterceptors, function(interceptor) {\n      responseInterceptors.push(\n          isString(interceptor)\n              ? $injector.get(interceptor)\n              : $injector.invoke(interceptor)\n      );\n    });\n\n\n    /**\n     * @ngdoc function\n     * @name ng.$http\n     * @requires $httpBackend\n     * @requires $browser\n     * @requires $cacheFactory\n     * @requires $rootScope\n     * @requires $q\n     * @requires $injector\n     *\n     * @description\n     * The `$http` service is a core Angular service that facilitates communication with the remote\n     * HTTP servers via the browser's {@link https://developer.mozilla.org/en/xmlhttprequest\n     * XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.\n     *\n     * For unit testing applications that use `$http` service, see\n     * {@link ngMock.$httpBackend $httpBackend mock}.\n     *\n     * For a higher level of abstraction, please check out the {@link ngResource.$resource\n     * $resource} service.\n     *\n     * The $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\n     * the $q service. While for simple usage patterns this doesn't matter much, for advanced usage\n     * it is important to familiarize yourself with these APIs and the guarantees they provide.\n     *\n     *\n     * # General usage\n     * The `$http` service is a function which takes a single argument — a configuration object —\n     * that is used to generate an HTTP request and returns  a {@link ng.$q promise}\n     * with two $http specific methods: `success` and `error`.\n     *\n     * <pre>\n     *   $http({method: 'GET', url: '/someUrl'}).\n     *     success(function(data, status, headers, config) {\n     *       // this callback will be called asynchronously\n     *       // when the response is available\n     *     }).\n     *     error(function(data, status, headers, config) {\n     *       // called asynchronously if an error occurs\n     *       // or server returns response with an error status.\n     *     });\n     * </pre>\n     *\n     * Since the returned value of calling the $http function is a `promise`, you can also use\n     * the `then` method to register callbacks, and these callbacks will receive a single argument –\n     * an object representing the response. See the API signature and type info below for more\n     * details.\n     *\n     * A response status code between 200 and 299 is considered a success status and\n     * will result in the success callback being called. Note that if the response is a redirect,\n     * XMLHttpRequest will transparently follow it, meaning that the error callback will not be\n     * called for such responses.\n     *\n     * # Shortcut methods\n     *\n     * Since all invocations of the $http service require passing in an HTTP method and URL, and\n     * POST/PUT requests require request data to be provided as well, shortcut methods\n     * were created:\n     *\n     * <pre>\n     *   $http.get('/someUrl').success(successCallback);\n     *   $http.post('/someUrl', data).success(successCallback);\n     * </pre>\n     *\n     * Complete list of shortcut methods:\n     *\n     * - {@link ng.$http#get $http.get}\n     * - {@link ng.$http#head $http.head}\n     * - {@link ng.$http#post $http.post}\n     * - {@link ng.$http#put $http.put}\n     * - {@link ng.$http#delete $http.delete}\n     * - {@link ng.$http#jsonp $http.jsonp}\n     *\n     *\n     * # Setting HTTP Headers\n     *\n     * The $http service will automatically add certain HTTP headers to all requests. These defaults\n     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration\n     * object, which currently contains this default configuration:\n     *\n     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n     *   - `Accept: application/json, text/plain, * / *`\n     *   - `X-Requested-With: XMLHttpRequest`\n     * - `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n     *   - `Content-Type: application/json`\n     * - `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n     *   - `Content-Type: application/json`\n     *\n     * To add or overwrite these defaults, simply add or remove a property from these configuration\n     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object\n     * with the lowercased HTTP method name as the key, e.g.\n     * `$httpProvider.defaults.headers.get['My-Header']='value'`.\n     *\n     * Additionally, the defaults can be set at runtime via the `$http.defaults` object in the same\n     * fashion.\n     *\n     *\n     * # Transforming Requests and Responses\n     *\n     * Both requests and responses can be transformed using transform functions. By default, Angular\n     * applies these transformations:\n     *\n     * Request transformations:\n     *\n     * - If the `data` property of the request configuration object contains an object, serialize it into\n     *   JSON format.\n     *\n     * Response transformations:\n     *\n     *  - If XSRF prefix is detected, strip it (see Security Considerations section below).\n     *  - If JSON response is detected, deserialize it using a JSON parser.\n     *\n     * To globally augment or override the default transforms, modify the `$httpProvider.defaults.transformRequest` and\n     * `$httpProvider.defaults.transformResponse` properties. These properties are by default an\n     * array of transform functions, which allows you to `push` or `unshift` a new transformation function into the\n     * transformation chain. You can also decide to completely override any default transformations by assigning your\n     * transformation functions to these properties directly without the array wrapper.\n     *\n     * Similarly, to locally override the request/response transforms, augment the `transformRequest` and/or\n     * `transformResponse` properties of the configuration object passed into `$http`.\n     *\n     *\n     * # Caching\n     *\n     * To enable caching, set the configuration property `cache` to `true`. When the cache is\n     * enabled, `$http` stores the response from the server in local cache. Next time the\n     * response is served from the cache without sending a request to the server.\n     *\n     * Note that even if the response is served from cache, delivery of the data is asynchronous in\n     * the same way that real requests are.\n     *\n     * If there are multiple GET requests for the same URL that should be cached using the same\n     * cache, but the cache is not populated yet, only one request to the server will be made and\n     * the remaining requests will be fulfilled using the response from the first request.\n     *\n     *\n     * # Response interceptors\n     *\n     * Before you start creating interceptors, be sure to understand the\n     * {@link ng.$q $q and deferred/promise APIs}.\n     *\n     * For purposes of global error handling, authentication or any kind of synchronous or\n     * asynchronous preprocessing of received responses, it is desirable to be able to intercept\n     * responses for http requests before they are handed over to the application code that\n     * initiated these requests. The response interceptors leverage the {@link ng.$q\n     * promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.\n     *\n     * The interceptors are service factories that are registered with the $httpProvider by\n     * adding them to the `$httpProvider.responseInterceptors` array. The factory is called and\n     * injected with dependencies (if specified) and returns the interceptor  — a function that\n     * takes a {@link ng.$q promise} and returns the original or a new promise.\n     *\n     * <pre>\n     *   // register the interceptor as a service\n     *   $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       return promise.then(function(response) {\n     *         // do something on success\n     *         return response;\n     *       }, function(response) {\n     *         // do something on error\n     *         if (canRecover(response)) {\n     *           return responseOrNewPromise\n     *         }\n     *         return $q.reject(response);\n     *       });\n     *     }\n     *   });\n     *\n     *   $httpProvider.responseInterceptors.push('myHttpInterceptor');\n     *\n     *\n     *   // register the interceptor via an anonymous factory\n     *   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {\n     *     return function(promise) {\n     *       // same as above\n     *     }\n     *   });\n     * </pre>\n     *\n     *\n     * # Security Considerations\n     *\n     * When designing web applications, consider security threats from:\n     *\n     * - {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx\n     *   JSON vulnerability}\n     * - {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF}\n     *\n     * Both server and the client must cooperate in order to eliminate these threats. Angular comes\n     * pre-configured with strategies that address these issues, but for this to work backend server\n     * cooperation is required.\n     *\n     * ## JSON Vulnerability Protection\n     *\n     * A {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx\n     * JSON vulnerability} allows third party website to turn your JSON resource URL into\n     * {@link http://en.wikipedia.org/wiki/JSONP JSONP} request under some conditions. To\n     * counter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\n     * Angular will automatically strip the prefix before processing it as JSON.\n     *\n     * For example if your server needs to return:\n     * <pre>\n     * ['one','two']\n     * </pre>\n     *\n     * which is vulnerable to attack, your server can return:\n     * <pre>\n     * )]}',\n     * ['one','two']\n     * </pre>\n     *\n     * Angular will strip the prefix, before processing the JSON.\n     *\n     *\n     * ## Cross Site Request Forgery (XSRF) Protection\n     *\n     * {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF} is a technique by which\n     * an unauthorized site can gain your user's private data. Angular provides a mechanism\n     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie\n     * called `XSRF-TOKEN` and sets it as the HTTP header `X-XSRF-TOKEN`. Since only JavaScript that\n     * runs on your domain could read the cookie, your server can be assured that the XHR came from\n     * JavaScript running on your domain.\n     *\n     * To take advantage of this, your server needs to set a token in a JavaScript readable session\n     * cookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\n     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\n     * that only JavaScript running on your domain could have sent the request. The token must be\n     * unique for each user and must be verifiable by the server (to prevent the JavaScript from making\n     * up its own tokens). We recommend that the token is a digest of your site's authentication\n     * cookie with a {@link https://en.wikipedia.org/wiki/Salt_(cryptography) salt} for added security.\n     *\n     *\n     * @param {object} config Object describing the request to be made and how it should be\n     *    processed. The object has following properties:\n     *\n     *    - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n     *    - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n     *    - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be turned to\n     *      `?key1=value1&key2=value2` after the url. If the value is not a string, it will be JSONified.\n     *    - **data** – `{string|Object}` – Data to be sent as the request message data.\n     *    - **headers** – `{Object}` – Map of strings representing HTTP headers to send to the server.\n     *    - **transformRequest** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      request body and headers and returns its transformed (typically serialized) version.\n     *    - **transformResponse** – `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     *      transform function or an array of such functions. The transform function takes the http\n     *      response body and headers and returns its transformed (typically deserialized) version.\n     *    - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n     *      GET request, otherwise if a cache instance built with\n     *      {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n     *      caching.\n     *    - **timeout** – `{number}` – timeout in milliseconds.\n     *    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the\n     *      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5\n     *      requests with credentials} for more information.\n     *\n     * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the\n     *   standard `then` method and two http specific methods: `success` and `error`. The `then`\n     *   method takes two arguments a success and an error callback which will be called with a\n     *   response object. The `success` and `error` methods take a single argument - a function that\n     *   will be called when the request succeeds or fails respectively. The arguments passed into\n     *   these functions are destructured representation of the response object passed into the\n     *   `then` method. The response object has these properties:\n     *\n     *   - **data** – `{string|Object}` – The response body transformed with the transform functions.\n     *   - **status** – `{number}` – HTTP status code of the response.\n     *   - **headers** – `{function([headerName])}` – Header getter function.\n     *   - **config** – `{Object}` – The configuration object that was used to generate the request.\n     *\n     * @property {Array.<Object>} pendingRequests Array of config objects for currently pending\n     *   requests. This is primarily meant to be used for debugging purposes.\n     *\n     *\n     * @example\n      <example>\n        <file name=\"index.html\">\n          <div ng-controller=\"FetchCtrl\">\n            <select ng-model=\"method\">\n              <option>GET</option>\n              <option>JSONP</option>\n            </select>\n            <input type=\"text\" ng-model=\"url\" size=\"80\"/>\n            <button ng-click=\"fetch()\">fetch</button><br>\n            <button ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n            <button ng-click=\"updateModel('JSONP', 'http://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">Sample JSONP</button>\n            <button ng-click=\"updateModel('JSONP', 'http://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">Invalid JSONP</button>\n            <pre>http status code: {{status}}</pre>\n            <pre>http response data: {{data}}</pre>\n          </div>\n        </file>\n        <file name=\"script.js\">\n          function FetchCtrl($scope, $http, $templateCache) {\n            $scope.method = 'GET';\n            $scope.url = 'http-hello.html';\n\n            $scope.fetch = function() {\n              $scope.code = null;\n              $scope.response = null;\n\n              $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n                success(function(data, status) {\n                  $scope.status = status;\n                  $scope.data = data;\n                }).\n                error(function(data, status) {\n                  $scope.data = data || \"Request failed\";\n                  $scope.status = status;\n              });\n            };\n\n            $scope.updateModel = function(method, url) {\n              $scope.method = method;\n              $scope.url = url;\n            };\n          }\n        </file>\n        <file name=\"http-hello.html\">\n          Hello, $http!\n        </file>\n        <file name=\"scenario.js\">\n          it('should make an xhr GET request', function() {\n            element(':button:contains(\"Sample GET\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('200');\n            expect(binding('data')).toMatch(/Hello, \\$http!/);\n          });\n\n          it('should make a JSONP request to angularjs.org', function() {\n            element(':button:contains(\"Sample JSONP\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('200');\n            expect(binding('data')).toMatch(/Super Hero!/);\n          });\n\n          it('should make JSONP request to invalid URL and invoke the error handler',\n              function() {\n            element(':button:contains(\"Invalid JSONP\")').click();\n            element(':button:contains(\"fetch\")').click();\n            expect(binding('status')).toBe('0');\n            expect(binding('data')).toBe('Request failed');\n          });\n        </file>\n      </example>\n     */\n    function $http(config) {\n      config.method = uppercase(config.method);\n\n      var reqTransformFn = config.transformRequest || $config.transformRequest,\n          respTransformFn = config.transformResponse || $config.transformResponse,\n          reqHeaders = extend({}, config.headers),\n          defHeaders = extend(\n            {'X-XSRF-TOKEN': $browser.cookies()['XSRF-TOKEN']},\n            $config.headers.common,\n            $config.headers[lowercase(config.method)]\n          ),\n          reqData,\n          defHeaderName, lowercaseDefHeaderName, headerName,\n          promise;\n\n      // using for-in instead of forEach to avoid unecessary iteration after header has been found\n      defaultHeadersIteration:\n      for(defHeaderName in defHeaders) {\n        lowercaseDefHeaderName = lowercase(defHeaderName);\n        for(headerName in config.headers) {\n          if (lowercase(headerName) === lowercaseDefHeaderName) {\n            continue defaultHeadersIteration;\n          }\n        }\n        reqHeaders[defHeaderName] = defHeaders[defHeaderName];\n      }\n\n      // strip content-type if data is undefined\n      if (isUndefined(config.data)) {\n        for(var header in reqHeaders) {\n          if (lowercase(header) === 'content-type') {\n            delete reqHeaders[header];\n            break;\n          }\n        }\n      }\n\n      reqData = transformData(config.data, headersGetter(reqHeaders), reqTransformFn);\n\n      // send request\n      promise = sendReq(config, reqData, reqHeaders);\n\n\n      // transform future response\n      promise = promise.then(transformResponse, transformResponse);\n\n      // apply interceptors\n      forEach(responseInterceptors, function(interceptor) {\n        promise = interceptor(promise);\n      });\n\n      promise.success = function(fn) {\n        promise.then(function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      promise.error = function(fn) {\n        promise.then(null, function(response) {\n          fn(response.data, response.status, response.headers, config);\n        });\n        return promise;\n      };\n\n      return promise;\n\n      function transformResponse(response) {\n        // make a copy since the response must be cacheable\n        var resp = extend({}, response, {\n          data: transformData(response.data, response.headers, respTransformFn)\n        });\n        return (isSuccess(response.status))\n          ? resp\n          : $q.reject(resp);\n      }\n    }\n\n    $http.pendingRequests = [];\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#get\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `GET` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#delete\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `DELETE` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#head\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `HEAD` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#jsonp\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `JSONP` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request.\n     *                     Should contain `JSON_CALLBACK` string.\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethods('get', 'delete', 'head', 'jsonp');\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#post\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `POST` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n\n    /**\n     * @ngdoc method\n     * @name ng.$http#put\n     * @methodOf ng.$http\n     *\n     * @description\n     * Shortcut method to perform `PUT` request.\n     *\n     * @param {string} url Relative or absolute URL specifying the destination of the request\n     * @param {*} data Request content\n     * @param {Object=} config Optional configuration object\n     * @returns {HttpPromise} Future object\n     */\n    createShortMethodsWithData('post', 'put');\n\n        /**\n         * @ngdoc property\n         * @name ng.$http#defaults\n         * @propertyOf ng.$http\n         *\n         * @description\n         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\n         * default headers as well as request and response transformations.\n         *\n         * See \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.\n         */\n    $http.defaults = $config;\n\n\n    return $http;\n\n\n    function createShortMethods(names) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url\n          }));\n        };\n      });\n    }\n\n\n    function createShortMethodsWithData(name) {\n      forEach(arguments, function(name) {\n        $http[name] = function(url, data, config) {\n          return $http(extend(config || {}, {\n            method: name,\n            url: url,\n            data: data\n          }));\n        };\n      });\n    }\n\n\n    /**\n     * Makes the request.\n     *\n     * !!! ACCESSES CLOSURE VARS:\n     * $httpBackend, $config, $log, $rootScope, defaultCache, $http.pendingRequests\n     */\n    function sendReq(config, reqData, reqHeaders) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          cache,\n          cachedResp,\n          url = buildUrl(config.url, config.params);\n\n      $http.pendingRequests.push(config);\n      promise.then(removePendingReq, removePendingReq);\n\n\n      if (config.cache && config.method == 'GET') {\n        cache = isObject(config.cache) ? config.cache : defaultCache;\n      }\n\n      if (cache) {\n        cachedResp = cache.get(url);\n        if (cachedResp) {\n          if (cachedResp.then) {\n            // cached request has already been sent, but there is no response yet\n            cachedResp.then(removePendingReq, removePendingReq);\n            return cachedResp;\n          } else {\n            // serving from cache\n            if (isArray(cachedResp)) {\n              resolvePromise(cachedResp[1], cachedResp[0], copy(cachedResp[2]));\n            } else {\n              resolvePromise(cachedResp, 200, {});\n            }\n          }\n        } else {\n          // put the promise for the non-transformed response into cache as a placeholder\n          cache.put(url, promise);\n        }\n      }\n\n      // if we won't have the response in cache, send the request to the backend\n      if (!cachedResp) {\n        $httpBackend(config.method, url, reqData, done, reqHeaders, config.timeout,\n            config.withCredentials);\n      }\n\n      return promise;\n\n\n      /**\n       * Callback registered to $httpBackend():\n       *  - caches the response if desired\n       *  - resolves the raw $http promise\n       *  - calls $apply\n       */\n      function done(status, response, headersString) {\n        if (cache) {\n          if (isSuccess(status)) {\n            cache.put(url, [status, response, parseHeaders(headersString)]);\n          } else {\n            // remove promise from the cache\n            cache.remove(url);\n          }\n        }\n\n        resolvePromise(response, status, headersString);\n        $rootScope.$apply();\n      }\n\n\n      /**\n       * Resolves the raw $http promise.\n       */\n      function resolvePromise(response, status, headers) {\n        // normalize internal statuses to 0\n        status = Math.max(status, 0);\n\n        (isSuccess(status) ? deferred.resolve : deferred.reject)({\n          data: response,\n          status: status,\n          headers: headersGetter(headers),\n          config: config\n        });\n      }\n\n\n      function removePendingReq() {\n        var idx = indexOf($http.pendingRequests, config);\n        if (idx !== -1) $http.pendingRequests.splice(idx, 1);\n      }\n    }\n\n\n    function buildUrl(url, params) {\n          if (!params) return url;\n          var parts = [];\n          forEachSorted(params, function(value, key) {\n            if (value == null || value == undefined) return;\n            if (isObject(value)) {\n              value = toJson(value);\n            }\n            parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n          });\n          return url + ((url.indexOf('?') == -1) ? '?' : '&') + parts.join('&');\n        }\n\n\n  }];\n}\n\nvar XHR = window.XMLHttpRequest || function() {\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); } catch (e1) {}\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); } catch (e2) {}\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e3) {}\n  throw new Error(\"This browser does not support XMLHttpRequest.\");\n};\n\n\n/**\n * @ngdoc object\n * @name ng.$httpBackend\n * @requires $browser\n * @requires $window\n * @requires $document\n *\n * @description\n * HTTP backend used by the {@link ng.$http service} that delegates to\n * XMLHttpRequest object or JSONP and deals with browser incompatibilities.\n *\n * You should never need to use this service directly, instead use the higher-level abstractions:\n * {@link ng.$http $http} or {@link ngResource.$resource $resource}.\n *\n * During testing this implementation is swapped with {@link ngMock.$httpBackend mock\n * $httpBackend} which can be trained with responses.\n */\nfunction $HttpBackendProvider() {\n  this.$get = ['$browser', '$window', '$document', function($browser, $window, $document) {\n    return createHttpBackend($browser, XHR, $browser.defer, $window.angular.callbacks,\n        $document[0], $window.location.protocol.replace(':', ''));\n  }];\n}\n\nfunction createHttpBackend($browser, XHR, $browserDefer, callbacks, rawDocument, locationProtocol) {\n  // TODO(vojta): fix the signature\n  return function(method, url, post, callback, headers, timeout, withCredentials) {\n    $browser.$$incOutstandingRequestCount();\n    url = url || $browser.url();\n\n    if (lowercase(method) == 'jsonp') {\n      var callbackId = '_' + (callbacks.counter++).toString(36);\n      callbacks[callbackId] = function(data) {\n        callbacks[callbackId].data = data;\n      };\n\n      jsonpReq(url.replace('JSON_CALLBACK', 'angular.callbacks.' + callbackId),\n          function() {\n        if (callbacks[callbackId].data) {\n          completeRequest(callback, 200, callbacks[callbackId].data);\n        } else {\n          completeRequest(callback, -2);\n        }\n        delete callbacks[callbackId];\n      });\n    } else {\n      var xhr = new XHR();\n      xhr.open(method, url, true);\n      forEach(headers, function(value, key) {\n        if (value) xhr.setRequestHeader(key, value);\n      });\n\n      var status;\n\n      // In IE6 and 7, this might be called synchronously when xhr.send below is called and the\n      // response is in the cache. the promise api will ensure that to the app code the api is\n      // always async\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState == 4) {\n          var responseHeaders = xhr.getAllResponseHeaders();\n\n          // TODO(vojta): remove once Firefox 21 gets released.\n          // begin: workaround to overcome Firefox CORS http response headers bug\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=608735\n          // Firefox already patched in nightly. Should land in Firefox 21.\n\n          // CORS \"simple response headers\" http://www.w3.org/TR/cors/\n          var value,\n              simpleHeaders = [\"Cache-Control\", \"Content-Language\", \"Content-Type\",\n                                  \"Expires\", \"Last-Modified\", \"Pragma\"];\n          if (!responseHeaders) {\n            responseHeaders = \"\";\n            forEach(simpleHeaders, function (header) {\n              var value = xhr.getResponseHeader(header);\n              if (value) {\n                  responseHeaders += header + \": \" + value + \"\\n\";\n              }\n            });\n          }\n          // end of the workaround.\n\n          completeRequest(callback, status || xhr.status, xhr.responseText,\n                          responseHeaders);\n        }\n      };\n\n      if (withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      xhr.send(post || '');\n\n      if (timeout > 0) {\n        $browserDefer(function() {\n          status = -1;\n          xhr.abort();\n        }, timeout);\n      }\n    }\n\n\n    function completeRequest(callback, status, response, headersString) {\n      // URL_MATCH is defined in src/service/location.js\n      var protocol = (url.match(URL_MATCH) || ['', locationProtocol])[1];\n\n      // fix status code for file protocol (it's always 0)\n      status = (protocol == 'file') ? (response ? 200 : 404) : status;\n\n      // normalize IE bug (http://bugs.jquery.com/ticket/1450)\n      status = status == 1223 ? 204 : status;\n\n      callback(status, response, headersString);\n      $browser.$$completeOutstandingRequest(noop);\n    }\n  };\n\n  function jsonpReq(url, done) {\n    // we can't use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:\n    // - fetches local scripts via XHR and evals them\n    // - adds and immediately removes script elements from the document\n    var script = rawDocument.createElement('script'),\n        doneWrapper = function() {\n          rawDocument.body.removeChild(script);\n          if (done) done();\n        };\n\n    script.type = 'text/javascript';\n    script.src = url;\n\n    if (msie) {\n      script.onreadystatechange = function() {\n        if (/loaded|complete/.test(script.readyState)) doneWrapper();\n      };\n    } else {\n      script.onload = script.onerror = doneWrapper;\n    }\n\n    rawDocument.body.appendChild(script);\n  }\n}\n\n/**\n * @ngdoc object\n * @name ng.$locale\n *\n * @description\n * $locale service provides localization rules for various Angular components. As of right now the\n * only public api is:\n *\n * * `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)\n */\nfunction $LocaleProvider(){\n  this.$get = function() {\n    return {\n      id: 'en-us',\n\n      NUMBER_FORMATS: {\n        DECIMAL_SEP: '.',\n        GROUP_SEP: ',',\n        PATTERNS: [\n          { // Decimal Pattern\n            minInt: 1,\n            minFrac: 0,\n            maxFrac: 3,\n            posPre: '',\n            posSuf: '',\n            negPre: '-',\n            negSuf: '',\n            gSize: 3,\n            lgSize: 3\n          },{ //Currency Pattern\n            minInt: 1,\n            minFrac: 2,\n            maxFrac: 2,\n            posPre: '\\u00A4',\n            posSuf: '',\n            negPre: '(\\u00A4',\n            negSuf: ')',\n            gSize: 3,\n            lgSize: 3\n          }\n        ],\n        CURRENCY_SYM: '$'\n      },\n\n      DATETIME_FORMATS: {\n        MONTH: 'January,February,March,April,May,June,July,August,September,October,November,December'\n                .split(','),\n        SHORTMONTH:  'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),\n        DAY: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),\n        SHORTDAY: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(','),\n        AMPMS: ['AM','PM'],\n        medium: 'MMM d, y h:mm:ss a',\n        short: 'M/d/yy h:mm a',\n        fullDate: 'EEEE, MMMM d, y',\n        longDate: 'MMMM d, y',\n        mediumDate: 'MMM d, y',\n        shortDate: 'M/d/yy',\n        mediumTime: 'h:mm:ss a',\n        shortTime: 'h:mm a'\n      },\n\n      pluralCat: function(num) {\n        if (num === 1) {\n          return 'one';\n        }\n        return 'other';\n      }\n    };\n  };\n}\n\nfunction $TimeoutProvider() {\n  this.$get = ['$rootScope', '$browser', '$q', '$exceptionHandler',\n       function($rootScope,   $browser,   $q,   $exceptionHandler) {\n    var deferreds = {};\n\n\n     /**\n      * @ngdoc function\n      * @name ng.$timeout\n      * @requires $browser\n      *\n      * @description\n      * Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\n      * block and delegates any exceptions to\n      * {@link ng.$exceptionHandler $exceptionHandler} service.\n      *\n      * The return value of registering a timeout function is a promise, which will be resolved when\n      * the timeout is reached and the timeout function is executed.\n      *\n      * To cancel a timeout request, call `$timeout.cancel(promise)`.\n      *\n      * In tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\n      * synchronously flush the queue of deferred functions.\n      *\n      * @param {function()} fn A function, whose execution should be delayed.\n      * @param {number=} [delay=0] Delay in milliseconds.\n      * @param {boolean=} [invokeApply=true] If set to `false` skips model dirty checking, otherwise\n      *   will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.\n      * @returns {Promise} Promise that will be resolved when the timeout is reached. The value this\n      *   promise will be resolved with is the return value of the `fn` function.\n      */\n    function timeout(fn, delay, invokeApply) {\n      var deferred = $q.defer(),\n          promise = deferred.promise,\n          skipApply = (isDefined(invokeApply) && !invokeApply),\n          timeoutId, cleanup;\n\n      timeoutId = $browser.defer(function() {\n        try {\n          deferred.resolve(fn());\n        } catch(e) {\n          deferred.reject(e);\n          $exceptionHandler(e);\n        }\n        finally {\n          delete deferreds[promise.$$timeoutId];\n        }\n\n        if (!skipApply) $rootScope.$apply();\n      }, delay);\n\n      promise.$$timeoutId = timeoutId;\n      deferreds[timeoutId] = deferred;\n\n      return promise;\n    }\n\n\n     /**\n      * @ngdoc function\n      * @name ng.$timeout#cancel\n      * @methodOf ng.$timeout\n      *\n      * @description\n      * Cancels a task associated with the `promise`. As a result of this, the promise will be\n      * resolved with a rejection.\n      *\n      * @param {Promise=} promise Promise returned by the `$timeout` function.\n      * @returns {boolean} Returns `true` if the task hasn't executed yet and was successfully\n      *   canceled.\n      */\n    timeout.cancel = function(promise) {\n      if (promise && promise.$$timeoutId in deferreds) {\n        deferreds[promise.$$timeoutId].reject('canceled');\n        delete deferreds[promise.$$timeoutId];\n        return $browser.defer.cancel(promise.$$timeoutId);\n      }\n      return false;\n    };\n\n    return timeout;\n  }];\n}\n\n/**\n * @ngdoc object\n * @name ng.$filterProvider\n * @description\n *\n * Filters are just functions which transform input to an output. However filters need to be Dependency Injected. To\n * achieve this a filter definition consists of a factory function which is annotated with dependencies and is\n * responsible for creating a filter function.\n *\n * <pre>\n *   // Filter registration\n *   function MyModule($provide, $filterProvider) {\n *     // create a service to demonstrate injection (not always needed)\n *     $provide.value('greet', function(name){\n *       return 'Hello ' + name + '!';\n *     });\n *\n *     // register a filter factory which uses the\n *     // greet service to demonstrate DI.\n *     $filterProvider.register('greet', function(greet){\n *       // return the filter function which uses the greet service\n *       // to generate salutation\n *       return function(text) {\n *         // filters need to be forgiving so check input validity\n *         return text && greet(text) || text;\n *       };\n *     });\n *   }\n * </pre>\n *\n * The filter function is registered with the `$injector` under the filter name suffixe with `Filter`.\n * <pre>\n *   it('should be the same instance', inject(\n *     function($filterProvider) {\n *       $filterProvider.register('reverse', function(){\n *         return ...;\n *       });\n *     },\n *     function($filter, reverseFilter) {\n *       expect($filter('reverse')).toBe(reverseFilter);\n *     });\n * </pre>\n *\n *\n * For more information about how angular filters work, and how to create your own filters, see\n * {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer\n * Guide.\n */\n/**\n * @ngdoc method\n * @name ng.$filterProvider#register\n * @methodOf ng.$filterProvider\n * @description\n * Register filter factory function.\n *\n * @param {String} name Name of the filter.\n * @param {function} fn The filter factory function which is injectable.\n */\n\n\n/**\n * @ngdoc function\n * @name ng.$filter\n * @function\n * @description\n * Filters are used for formatting data displayed to the user.\n *\n * The general syntax in templates is as follows:\n *\n *         {{ expression [| filter_name[:parameter_value] ... ] }}\n *\n * @param {String} name Name of the filter function to retrieve\n * @return {Function} the filter function\n */\n$FilterProvider.$inject = ['$provide'];\nfunction $FilterProvider($provide) {\n  var suffix = 'Filter';\n\n  function register(name, factory) {\n    return $provide.factory(name + suffix, factory);\n  }\n  this.register = register;\n\n  this.$get = ['$injector', function($injector) {\n    return function(name) {\n      return $injector.get(name + suffix);\n    }\n  }];\n\n  ////////////////////////////////////////\n\n  register('currency', currencyFilter);\n  register('date', dateFilter);\n  register('filter', filterFilter);\n  register('json', jsonFilter);\n  register('limitTo', limitToFilter);\n  register('lowercase', lowercaseFilter);\n  register('number', numberFilter);\n  register('orderBy', orderByFilter);\n  register('uppercase', uppercaseFilter);\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:filter\n * @function\n *\n * @description\n * Selects a subset of items from `array` and returns it as a new array.\n *\n * Note: This function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {Array} array The source array.\n * @param {string|Object|function()} expression The predicate to be used for selecting items from\n *   `array`.\n *\n *   Can be one of:\n *\n *   - `string`: Predicate that results in a substring match using the value of `expression`\n *     string. All strings or objects with string properties in `array` that contain this string\n *     will be returned. The predicate can be negated by prefixing the string with `!`.\n *\n *   - `Object`: A pattern object can be used to filter specific properties on objects contained\n *     by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n *     which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n *     property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n *     property of the object. That's equivalent to the simple substring match with a `string`\n *     as described above.\n *\n *   - `function`: A predicate function can be used to write arbitrary filters. The function is\n *     called for each element of `array`. The final result is an array of those elements that\n *     the predicate returned true for.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                                {name:'Mary', phone:'800-BIG-MARY'},\n                                {name:'Mike', phone:'555-4321'},\n                                {name:'Adam', phone:'555-5678'},\n                                {name:'Julie', phone:'555-8765'}]\"></div>\n\n       Search: <input ng-model=\"searchText\">\n       <table id=\"searchTextResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:searchText\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n       <hr>\n       Any: <input ng-model=\"search.$\"> <br>\n       Name only <input ng-model=\"search.name\"><br>\n       Phone only <input ng-model=\"search.phone\"><br>\n       <table id=\"searchObjResults\">\n         <tr><th>Name</th><th>Phone</th></tr>\n         <tr ng-repeat=\"friend in friends | filter:search\">\n           <td>{{friend.name}}</td>\n           <td>{{friend.phone}}</td>\n         </tr>\n       </table>\n     </doc:source>\n     <doc:scenario>\n       it('should search across all fields when filtering with a string', function() {\n         input('searchText').enter('m');\n         expect(repeater('#searchTextResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Mike', 'Adam']);\n\n         input('searchText').enter('76');\n         expect(repeater('#searchTextResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['John', 'Julie']);\n       });\n\n       it('should search in specific fields when filtering with a predicate object', function() {\n         input('search.$').enter('i');\n         expect(repeater('#searchObjResults tr', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Mike', 'Julie']);\n       });\n     </doc:scenario>\n   </doc:example>\n */\nfunction filterFilter() {\n  return function(array, expression) {\n    if (!isArray(array)) return array;\n    var predicates = [];\n    predicates.check = function(value) {\n      for (var j = 0; j < predicates.length; j++) {\n        if(!predicates[j](value)) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var search = function(obj, text){\n      if (text.charAt(0) === '!') {\n        return !search(obj, text.substr(1));\n      }\n      switch (typeof obj) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          return ('' + obj).toLowerCase().indexOf(text) > -1;\n        case \"object\":\n          for ( var objKey in obj) {\n            if (objKey.charAt(0) !== '$' && search(obj[objKey], text)) {\n              return true;\n            }\n          }\n          return false;\n        case \"array\":\n          for ( var i = 0; i < obj.length; i++) {\n            if (search(obj[i], text)) {\n              return true;\n            }\n          }\n          return false;\n        default:\n          return false;\n      }\n    };\n    switch (typeof expression) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        expression = {$:expression};\n      case \"object\":\n        for (var key in expression) {\n          if (key == '$') {\n            (function() {\n              var text = (''+expression[key]).toLowerCase();\n              if (!text) return;\n              predicates.push(function(value) {\n                return search(value, text);\n              });\n            })();\n          } else {\n            (function() {\n              var path = key;\n              var text = (''+expression[key]).toLowerCase();\n              if (!text) return;\n              predicates.push(function(value) {\n                return search(getter(value, path), text);\n              });\n            })();\n          }\n        }\n        break;\n      case 'function':\n        predicates.push(expression);\n        break;\n      default:\n        return array;\n    }\n    var filtered = [];\n    for ( var j = 0; j < array.length; j++) {\n      var value = array[j];\n      if (predicates.check(value)) {\n        filtered.push(value);\n      }\n    }\n    return filtered;\n  }\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:currency\n * @function\n *\n * @description\n * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\n * symbol for current locale is used.\n *\n * @param {number} amount Input to filter.\n * @param {string=} symbol Currency symbol or identifier to be displayed.\n * @returns {string} Formatted number.\n *\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.amount = 1234.56;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input type=\"number\" ng-model=\"amount\"> <br>\n         default currency symbol ($): {{amount | currency}}<br>\n         custom currency identifier (USD$): {{amount | currency:\"USD$\"}}\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should init with 1234.56', function() {\n         expect(binding('amount | currency')).toBe('$1,234.56');\n         expect(binding('amount | currency:\"USD$\"')).toBe('USD$1,234.56');\n       });\n       it('should update', function() {\n         input('amount').enter('-1234');\n         expect(binding('amount | currency')).toBe('($1,234.00)');\n         expect(binding('amount | currency:\"USD$\"')).toBe('(USD$1,234.00)');\n       });\n     </doc:scenario>\n   </doc:example>\n */\ncurrencyFilter.$inject = ['$locale'];\nfunction currencyFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(amount, currencySymbol){\n    if (isUndefined(currencySymbol)) currencySymbol = formats.CURRENCY_SYM;\n    return formatNumber(amount, formats.PATTERNS[1], formats.GROUP_SEP, formats.DECIMAL_SEP, 2).\n                replace(/\\u00A4/g, currencySymbol);\n  };\n}\n\n/**\n * @ngdoc filter\n * @name ng.filter:number\n * @function\n *\n * @description\n * Formats a number as text.\n *\n * If the input is not a number an empty string is returned.\n *\n * @param {number|string} number Number to format.\n * @param {(number|string)=} fractionSize Number of decimal places to round the number to.\n * If this is not provided then the fraction size is computed from the current locale's number\n * formatting pattern. In the case of the default locale, it will be 3.\n * @returns {string} Number rounded to decimalPlaces and places a “,” after each third digit.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.val = 1234.56789;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Enter number: <input ng-model='val'><br>\n         Default formatting: {{val | number}}<br>\n         No fractions: {{val | number:0}}<br>\n         Negative number: {{-val | number:4}}\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should format numbers', function() {\n         expect(binding('val | number')).toBe('1,234.568');\n         expect(binding('val | number:0')).toBe('1,235');\n         expect(binding('-val | number:4')).toBe('-1,234.5679');\n       });\n\n       it('should update', function() {\n         input('val').enter('3374.333');\n         expect(binding('val | number')).toBe('3,374.333');\n         expect(binding('val | number:0')).toBe('3,374');\n         expect(binding('-val | number:4')).toBe('-3,374.3330');\n       });\n     </doc:scenario>\n   </doc:example>\n */\n\n\nnumberFilter.$inject = ['$locale'];\nfunction numberFilter($locale) {\n  var formats = $locale.NUMBER_FORMATS;\n  return function(number, fractionSize) {\n    return formatNumber(number, formats.PATTERNS[0], formats.GROUP_SEP, formats.DECIMAL_SEP,\n      fractionSize);\n  };\n}\n\nvar DECIMAL_SEP = '.';\nfunction formatNumber(number, pattern, groupSep, decimalSep, fractionSize) {\n  if (isNaN(number) || !isFinite(number)) return '';\n\n  var isNegative = number < 0;\n  number = Math.abs(number);\n  var numStr = number + '',\n      formatedText = '',\n      parts = [];\n\n  var hasExponent = false;\n  if (numStr.indexOf('e') !== -1) {\n    var match = numStr.match(/([\\d\\.]+)e(-?)(\\d+)/);\n    if (match && match[2] == '-' && match[3] > fractionSize + 1) {\n      numStr = '0';\n    } else {\n      formatedText = numStr;\n      hasExponent = true;\n    }\n  }\n\n  if (!hasExponent) {\n    var fractionLen = (numStr.split(DECIMAL_SEP)[1] || '').length;\n\n    // determine fractionSize if it is not specified\n    if (isUndefined(fractionSize)) {\n      fractionSize = Math.min(Math.max(pattern.minFrac, fractionLen), pattern.maxFrac);\n    }\n\n    var pow = Math.pow(10, fractionSize);\n    number = Math.round(number * pow) / pow;\n    var fraction = ('' + number).split(DECIMAL_SEP);\n    var whole = fraction[0];\n    fraction = fraction[1] || '';\n\n    var pos = 0,\n        lgroup = pattern.lgSize,\n        group = pattern.gSize;\n\n    if (whole.length >= (lgroup + group)) {\n      pos = whole.length - lgroup;\n      for (var i = 0; i < pos; i++) {\n        if ((pos - i)%group === 0 && i !== 0) {\n          formatedText += groupSep;\n        }\n        formatedText += whole.charAt(i);\n      }\n    }\n\n    for (i = pos; i < whole.length; i++) {\n      if ((whole.length - i)%lgroup === 0 && i !== 0) {\n        formatedText += groupSep;\n      }\n      formatedText += whole.charAt(i);\n    }\n\n    // format fraction part.\n    while(fraction.length < fractionSize) {\n      fraction += '0';\n    }\n\n    if (fractionSize && fractionSize !== \"0\") formatedText += decimalSep + fraction.substr(0, fractionSize);\n  } else {\n\n    if (fractionSize > 0 && number > -1 && number < 1) {\n      formatedText = number.toFixed(fractionSize);\n    }\n  }\n\n  parts.push(isNegative ? pattern.negPre : pattern.posPre);\n  parts.push(formatedText);\n  parts.push(isNegative ? pattern.negSuf : pattern.posSuf);\n  return parts.join('');\n}\n\nfunction padNumber(num, digits, trim) {\n  var neg = '';\n  if (num < 0) {\n    neg =  '-';\n    num = -num;\n  }\n  num = '' + num;\n  while(num.length < digits) num = '0' + num;\n  if (trim)\n    num = num.substr(num.length - digits);\n  return neg + num;\n}\n\n\nfunction dateGetter(name, size, offset, trim) {\n  offset = offset || 0;\n  return function(date) {\n    var value = date['get' + name]();\n    if (offset > 0 || value > -offset)\n      value += offset;\n    if (value === 0 && offset == -12 ) value = 12;\n    return padNumber(value, size, trim);\n  };\n}\n\nfunction dateStrGetter(name, shortForm) {\n  return function(date, formats) {\n    var value = date['get' + name]();\n    var get = uppercase(shortForm ? ('SHORT' + name) : name);\n\n    return formats[get][value];\n  };\n}\n\nfunction timeZoneGetter(date) {\n  var zone = -1 * date.getTimezoneOffset();\n  var paddedZone = (zone >= 0) ? \"+\" : \"\";\n\n  paddedZone += padNumber(Math[zone > 0 ? 'floor' : 'ceil'](zone / 60), 2) +\n                padNumber(Math.abs(zone % 60), 2);\n\n  return paddedZone;\n}\n\nfunction ampmGetter(date, formats) {\n  return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n}\n\nvar DATE_FORMATS = {\n  yyyy: dateGetter('FullYear', 4),\n    yy: dateGetter('FullYear', 2, 0, true),\n     y: dateGetter('FullYear', 1),\n  MMMM: dateStrGetter('Month'),\n   MMM: dateStrGetter('Month', true),\n    MM: dateGetter('Month', 2, 1),\n     M: dateGetter('Month', 1, 1),\n    dd: dateGetter('Date', 2),\n     d: dateGetter('Date', 1),\n    HH: dateGetter('Hours', 2),\n     H: dateGetter('Hours', 1),\n    hh: dateGetter('Hours', 2, -12),\n     h: dateGetter('Hours', 1, -12),\n    mm: dateGetter('Minutes', 2),\n     m: dateGetter('Minutes', 1),\n    ss: dateGetter('Seconds', 2),\n     s: dateGetter('Seconds', 1),\n  EEEE: dateStrGetter('Day'),\n   EEE: dateStrGetter('Day', true),\n     a: ampmGetter,\n     Z: timeZoneGetter\n};\n\nvar DATE_FORMATS_SPLIT = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/,\n    NUMBER_STRING = /^\\d+$/;\n\n/**\n * @ngdoc filter\n * @name ng.filter:date\n * @function\n *\n * @description\n *   Formats `date` to a string based on the requested `format`.\n *\n *   `format` string can be composed of the following elements:\n *\n *   * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n *   * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n *   * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n *   * `'MMMM'`: Month in year (January-December)\n *   * `'MMM'`: Month in year (Jan-Dec)\n *   * `'MM'`: Month in year, padded (01-12)\n *   * `'M'`: Month in year (1-12)\n *   * `'dd'`: Day in month, padded (01-31)\n *   * `'d'`: Day in month (1-31)\n *   * `'EEEE'`: Day in Week,(Sunday-Saturday)\n *   * `'EEE'`: Day in Week, (Sun-Sat)\n *   * `'HH'`: Hour in day, padded (00-23)\n *   * `'H'`: Hour in day (0-23)\n *   * `'hh'`: Hour in am/pm, padded (01-12)\n *   * `'h'`: Hour in am/pm, (1-12)\n *   * `'mm'`: Minute in hour, padded (00-59)\n *   * `'m'`: Minute in hour (0-59)\n *   * `'ss'`: Second in minute, padded (00-59)\n *   * `'s'`: Second in minute (0-59)\n *   * `'a'`: am/pm marker\n *   * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n *\n *   `format` string can also be one of the following predefined\n *   {@link guide/i18n localizable formats}:\n *\n *   * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n *     (e.g. Sep 3, 2010 12:05:08 pm)\n *   * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 pm)\n *   * `'fullDate'`: equivalent to `'EEEE, MMMM d,y'` for en_US  locale\n *     (e.g. Friday, September 3, 2010)\n *   * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n *   * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n *   * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n *   * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 pm)\n *   * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 pm)\n *\n *   `format` string can contain literal values. These need to be quoted with single quotes (e.g.\n *   `\"h 'in the morning'\"`). In order to output single quote, use two single quotes in a sequence\n *   (e.g. `\"h 'o''clock'\"`).\n *\n * @param {(Date|number|string)} date Date to format either as Date object, milliseconds (string or\n *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.SSSZ and its\n *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n *    specified in the string input, the time is considered to be in the local timezone.\n * @param {string=} format Formatting rules (see Description). If not specified,\n *    `mediumDate` is used.\n * @returns {string} Formatted string or the input if input is not recognized as date/millis.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n           {{1288323623006 | date:'medium'}}<br>\n       <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n          {{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}<br>\n       <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n          {{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}<br>\n     </doc:source>\n     <doc:scenario>\n       it('should format date', function() {\n         expect(binding(\"1288323623006 | date:'medium'\")).\n            toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n         expect(binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).\n            toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n         expect(binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).\n            toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n       });\n     </doc:scenario>\n   </doc:example>\n */\ndateFilter.$inject = ['$locale'];\nfunction dateFilter($locale) {\n\n\n  var R_ISO8601_STR = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n  function jsonStringToDate(string){\n    var match;\n    if (match = string.match(R_ISO8601_STR)) {\n      var date = new Date(0),\n          tzHour = 0,\n          tzMin  = 0;\n      if (match[9]) {\n        tzHour = int(match[9] + match[10]);\n        tzMin = int(match[9] + match[11]);\n      }\n      date.setUTCFullYear(int(match[1]), int(match[2]) - 1, int(match[3]));\n      date.setUTCHours(int(match[4]||0) - tzHour, int(match[5]||0) - tzMin, int(match[6]||0), int(match[7]||0));\n      return date;\n    }\n    return string;\n  }\n\n\n  return function(date, format) {\n    var text = '',\n        parts = [],\n        fn, match;\n\n    format = format || 'mediumDate';\n    format = $locale.DATETIME_FORMATS[format] || format;\n    if (isString(date)) {\n      if (NUMBER_STRING.test(date)) {\n        date = int(date);\n      } else {\n        date = jsonStringToDate(date);\n      }\n    }\n\n    if (isNumber(date)) {\n      date = new Date(date);\n    }\n\n    if (!isDate(date)) {\n      return date;\n    }\n\n    while(format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = concat(parts, match, 1);\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    forEach(parts, function(value){\n      fn = DATE_FORMATS[value];\n      text += fn ? fn(date, $locale.DATETIME_FORMATS)\n                 : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n    });\n\n    return text;\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:json\n * @function\n *\n * @description\n *   Allows you to convert a JavaScript object into JSON string.\n *\n *   This filter is mostly useful for debugging. When using the double curly {{value}} notation\n *   the binding is automatically converted to JSON.\n *\n * @param {*} object Any JavaScript object (including arrays and primitive types) to filter.\n * @returns {string} JSON string.\n *\n *\n * @example:\n   <doc:example>\n     <doc:source>\n       <pre>{{ {'name':'value'} | json }}</pre>\n     </doc:source>\n     <doc:scenario>\n       it('should jsonify filtered objects', function() {\n         expect(binding(\"{'name':'value'}\")).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n       });\n     </doc:scenario>\n   </doc:example>\n *\n */\nfunction jsonFilter() {\n  return function(object) {\n    return toJson(object, true);\n  };\n}\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:lowercase\n * @function\n * @description\n * Converts string to lowercase.\n * @see angular.lowercase\n */\nvar lowercaseFilter = valueFn(lowercase);\n\n\n/**\n * @ngdoc filter\n * @name ng.filter:uppercase\n * @function\n * @description\n * Converts string to uppercase.\n * @see angular.uppercase\n */\nvar uppercaseFilter = valueFn(uppercase);\n\n/**\n * @ngdoc function\n * @name ng.filter:limitTo\n * @function\n *\n * @description\n * Creates a new array containing only a specified number of elements in an array. The elements\n * are taken from either the beginning or the end of the source array, as specified by the\n * value and sign (positive or negative) of `limit`.\n *\n * Note: This function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more information about Angular arrays.\n *\n * @param {Array} array Source array to be limited.\n * @param {string|Number} limit The length of the returned array. If the `limit` number is\n *     positive, `limit` number of items from the beginning of the source array are copied.\n *     If the number is negative, `limit` number  of items from the end of the source array are\n *     copied. The `limit` will be trimmed if it exceeds `array.length`\n * @returns {Array} A new sub-array of length `limit` or less if input array had less than `limit`\n *     elements.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.numbers = [1,2,3,4,5,6,7,8,9];\n           $scope.limit = 3;\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Limit {{numbers}} to: <input type=\"integer\" ng-model=\"limit\">\n         <p>Output: {{ numbers | limitTo:limit }}</p>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should limit the numer array to first three items', function() {\n         expect(element('.doc-example-live input[ng-model=limit]').val()).toBe('3');\n         expect(binding('numbers | limitTo:limit')).toEqual('[1,2,3]');\n       });\n\n       it('should update the output when -3 is entered', function() {\n         input('limit').enter(-3);\n         expect(binding('numbers | limitTo:limit')).toEqual('[7,8,9]');\n       });\n\n       it('should not exceed the maximum size of input array', function() {\n         input('limit').enter(100);\n         expect(binding('numbers | limitTo:limit')).toEqual('[1,2,3,4,5,6,7,8,9]');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nfunction limitToFilter(){\n  return function(array, limit) {\n    if (!(array instanceof Array)) return array;\n    limit = int(limit);\n    var out = [],\n      i, n;\n\n    // check that array is iterable\n    if (!array || !(array instanceof Array))\n      return out;\n\n    // if abs(limit) exceeds maximum length, trim it\n    if (limit > array.length)\n      limit = array.length;\n    else if (limit < -array.length)\n      limit = -array.length;\n\n    if (limit > 0) {\n      i = 0;\n      n = limit;\n    } else {\n      i = array.length + limit;\n      n = array.length;\n    }\n\n    for (; i<n; i++) {\n      out.push(array[i]);\n    }\n\n    return out;\n  }\n}\n\n/**\n * @ngdoc function\n * @name ng.filter:orderBy\n * @function\n *\n * @description\n * Orders a specified `array` by the `expression` predicate.\n *\n * Note: this function is used to augment the `Array` type in Angular expressions. See\n * {@link ng.$filter} for more informaton about Angular arrays.\n *\n * @param {Array} array The array to sort.\n * @param {function(*)|string|Array.<(function(*)|string)>} expression A predicate to be\n *    used by the comparator to determine the order of elements.\n *\n *    Can be one of:\n *\n *    - `function`: Getter function. The result of this function will be sorted using the\n *      `<`, `=`, `>` operator.\n *    - `string`: An Angular expression which evaluates to an object to order by, such as 'name'\n *      to sort by a property called 'name'. Optionally prefixed with `+` or `-` to control\n *      ascending or descending sort order (for example, +name or -name).\n *    - `Array`: An array of function or string predicates. The first predicate in the array\n *      is used for sorting, but when two items are equivalent, the next predicate is used.\n *\n * @param {boolean=} reverse Reverse the order the array.\n * @returns {Array} Sorted copy of the source array.\n *\n * @example\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.friends =\n               [{name:'John', phone:'555-1212', age:10},\n                {name:'Mary', phone:'555-9876', age:19},\n                {name:'Mike', phone:'555-4321', age:21},\n                {name:'Adam', phone:'555-5678', age:35},\n                {name:'Julie', phone:'555-8765', age:29}]\n           $scope.predicate = '-age';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n         <hr/>\n         [ <a href=\"\" ng-click=\"predicate=''\">unsorted</a> ]\n         <table class=\"friend\">\n           <tr>\n             <th><a href=\"\" ng-click=\"predicate = 'name'; reverse=false\">Name</a>\n                 (<a href ng-click=\"predicate = '-name'; reverse=false\">^</a>)</th>\n             <th><a href=\"\" ng-click=\"predicate = 'phone'; reverse=!reverse\">Phone Number</a></th>\n             <th><a href=\"\" ng-click=\"predicate = 'age'; reverse=!reverse\">Age</a></th>\n           </tr>\n           <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n             <td>{{friend.name}}</td>\n             <td>{{friend.phone}}</td>\n             <td>{{friend.age}}</td>\n           </tr>\n         </table>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should be reverse ordered by aged', function() {\n         expect(binding('predicate')).toBe('-age');\n         expect(repeater('table.friend', 'friend in friends').column('friend.age')).\n           toEqual(['35', '29', '21', '19', '10']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Adam', 'Julie', 'Mike', 'Mary', 'John']);\n       });\n\n       it('should reorder the table when user selects different predicate', function() {\n         element('.doc-example-live a:contains(\"Name\")').click();\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Adam', 'John', 'Julie', 'Mary', 'Mike']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.age')).\n           toEqual(['35', '10', '29', '19', '21']);\n\n         element('.doc-example-live a:contains(\"Phone\")').click();\n         expect(repeater('table.friend', 'friend in friends').column('friend.phone')).\n           toEqual(['555-9876', '555-8765', '555-5678', '555-4321', '555-1212']);\n         expect(repeater('table.friend', 'friend in friends').column('friend.name')).\n           toEqual(['Mary', 'Julie', 'Adam', 'Mike', 'John']);\n       });\n     </doc:scenario>\n   </doc:example>\n */\norderByFilter.$inject = ['$parse'];\nfunction orderByFilter($parse){\n  return function(array, sortPredicate, reverseOrder) {\n    if (!isArray(array)) return array;\n    if (!sortPredicate) return array;\n    sortPredicate = isArray(sortPredicate) ? sortPredicate: [sortPredicate];\n    sortPredicate = map(sortPredicate, function(predicate){\n      var descending = false, get = predicate || identity;\n      if (isString(predicate)) {\n        if ((predicate.charAt(0) == '+' || predicate.charAt(0) == '-')) {\n          descending = predicate.charAt(0) == '-';\n          predicate = predicate.substring(1);\n        }\n        get = $parse(predicate);\n      }\n      return reverseComparator(function(a,b){\n        return compare(get(a),get(b));\n      }, descending);\n    });\n    var arrayCopy = [];\n    for ( var i = 0; i < array.length; i++) { arrayCopy.push(array[i]); }\n    return arrayCopy.sort(reverseComparator(comparator, reverseOrder));\n\n    function comparator(o1, o2){\n      for ( var i = 0; i < sortPredicate.length; i++) {\n        var comp = sortPredicate[i](o1, o2);\n        if (comp !== 0) return comp;\n      }\n      return 0;\n    }\n    function reverseComparator(comp, descending) {\n      return toBoolean(descending)\n          ? function(a,b){return comp(b,a);}\n          : comp;\n    }\n    function compare(v1, v2){\n      var t1 = typeof v1;\n      var t2 = typeof v2;\n      if (t1 == t2) {\n        if (t1 == \"string\") {\n           v1 = v1.toLowerCase();\n           v2 = v2.toLowerCase();\n        }\n        if (v1 === v2) return 0;\n        return v1 < v2 ? -1 : 1;\n      } else {\n        return t1 < t2 ? -1 : 1;\n      }\n    }\n  }\n}\n\nfunction ngDirective(directive) {\n  if (isFunction(directive)) {\n    directive = {\n      link: directive\n    }\n  }\n  directive.restrict = directive.restrict || 'AC';\n  return valueFn(directive);\n}\n\n/**\n * @ngdoc directive\n * @name ng.directive:a\n * @restrict E\n *\n * @description\n * Modifies the default behavior of html A tag, so that the default action is prevented when href\n * attribute is empty.\n *\n * The reasoning for this change is to allow easy creation of action links with `ngClick` directive\n * without changing the location or causing page reloads, e.g.:\n * `<a href=\"\" ng-click=\"model.$save()\">Save</a>`\n */\nvar htmlAnchorDirective = valueFn({\n  restrict: 'E',\n  compile: function(element, attr) {\n\n    if (msie <= 8) {\n\n      // turn <a href ng-click=\"..\">link</a> into a stylable link in IE\n      // but only if it doesn't have name attribute, in which case it's an anchor\n      if (!attr.href && !attr.name) {\n        attr.$set('href', '');\n      }\n\n      // add a comment node to anchors to workaround IE bug that causes element content to be reset\n      // to new attribute content if attribute is updated with value containing @ and element also\n      // contains value with @\n      // see issue #1949\n      element.append(document.createComment('IE fix'));\n    }\n\n    return function(scope, element) {\n      element.bind('click', function(event){\n        // if we have no href url, then don't navigate anywhere.\n        if (!element.attr('href')) {\n          event.preventDefault();\n        }\n      });\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngHref\n * @restrict A\n *\n * @description\n * Using Angular markup like {{hash}} in an href attribute makes\n * the page open to a wrong URL, if the user clicks that link before\n * angular has a chance to replace the {{hash}} with actual URL, the\n * link will be broken and will most likely return a 404 error.\n * The `ngHref` directive solves this problem.\n *\n * The buggy way to write it:\n * <pre>\n * <a href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * The correct way to write it:\n * <pre>\n * <a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * @element A\n * @param {template} ngHref any string which can contain `{{}}` markup.\n *\n * @example\n * This example uses `link` variable inside `href` attribute:\n    <doc:example>\n      <doc:source>\n        <input ng-model=\"value\" /><br />\n        <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n        <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n        <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n        <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n        <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n        <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n      </doc:source>\n      <doc:scenario>\n        it('should execute ng-click but not reload when href without value', function() {\n          element('#link-1').click();\n          expect(input('value').val()).toEqual('1');\n          expect(element('#link-1').attr('href')).toBe(\"\");\n        });\n\n        it('should execute ng-click but not reload when href empty string', function() {\n          element('#link-2').click();\n          expect(input('value').val()).toEqual('2');\n          expect(element('#link-2').attr('href')).toBe(\"\");\n        });\n\n        it('should execute ng-click and change url when ng-href specified', function() {\n          expect(element('#link-3').attr('href')).toBe(\"/123\");\n\n          element('#link-3').click();\n          expect(browser().window().path()).toEqual('/123');\n        });\n\n        it('should execute ng-click but not reload when href empty string and name specified', function() {\n          element('#link-4').click();\n          expect(input('value').val()).toEqual('4');\n          expect(element('#link-4').attr('href')).toBe('');\n        });\n\n        it('should execute ng-click but not reload when no href but name specified', function() {\n          element('#link-5').click();\n          expect(input('value').val()).toEqual('5');\n          expect(element('#link-5').attr('href')).toBe(undefined);\n        });\n\n        it('should only change url when only ng-href', function() {\n          input('value').enter('6');\n          expect(element('#link-6').attr('href')).toBe('6');\n\n          element('#link-6').click();\n          expect(browser().location().url()).toEqual('/6');\n        });\n      </doc:scenario>\n    </doc:example>\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSrc\n * @restrict A\n *\n * @description\n * Using Angular markup like `{{hash}}` in a `src` attribute doesn't\n * work right: The browser will fetch from the URL with the literal\n * text `{{hash}}` until Angular replaces the expression inside\n * `{{hash}}`. The `ngSrc` directive solves this problem.\n *\n * The buggy way to write it:\n * <pre>\n * <img src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * The correct way to write it:\n * <pre>\n * <img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\"/>\n * </pre>\n *\n * @element IMG\n * @param {template} ngSrc any string which can contain `{{}}` markup.\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngDisabled\n * @restrict A\n *\n * @description\n *\n * The following markup will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:\n * <pre>\n * <div ng-init=\"scope = { isDisabled: false }\">\n *  <button disabled=\"{{scope.isDisabled}}\">Disabled</button>\n * </div>\n * </pre>\n *\n * The HTML specs do not require browsers to preserve the special attributes such as disabled.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngDisabled` directive.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n      </doc:source>\n      <doc:scenario>\n        it('should toggle button', function() {\n          expect(element('.doc-example-live :button').prop('disabled')).toBeFalsy();\n          input('checked').check();\n          expect(element('.doc-example-live :button').prop('disabled')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {expression} ngDisabled Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngChecked\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as checked.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngChecked` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to check both: <input type=\"checkbox\" ng-model=\"master\"><br/>\n        <input id=\"checkSlave\" type=\"checkbox\" ng-checked=\"master\">\n      </doc:source>\n      <doc:scenario>\n        it('should check both checkBoxes', function() {\n          expect(element('.doc-example-live #checkSlave').prop('checked')).toBeFalsy();\n          input('master').check();\n          expect(element('.doc-example-live #checkSlave').prop('checked')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {expression} ngChecked Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMultiple\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as multiple.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngMultiple` directive.\n *\n * @example\n     <doc:example>\n       <doc:source>\n         Check me check multiple: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n         <select id=\"select\" ng-multiple=\"checked\">\n           <option>Misko</option>\n           <option>Igor</option>\n           <option>Vojta</option>\n           <option>Di</option>\n         </select>\n       </doc:source>\n       <doc:scenario>\n         it('should toggle multiple', function() {\n           expect(element('.doc-example-live #select').prop('multiple')).toBeFalsy();\n           input('checked').check();\n           expect(element('.doc-example-live #select').prop('multiple')).toBeTruthy();\n         });\n       </doc:scenario>\n     </doc:example>\n *\n * @element SELECT\n * @param {expression} ngMultiple Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngReadonly\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as readonly.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduce the `ngReadonly` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to make text readonly: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        <input type=\"text\" ng-readonly=\"checked\" value=\"I'm Angular\"/>\n      </doc:source>\n      <doc:scenario>\n        it('should toggle readonly attr', function() {\n          expect(element('.doc-example-live :text').prop('readonly')).toBeFalsy();\n          input('checked').check();\n          expect(element('.doc-example-live :text').prop('readonly')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element INPUT\n * @param {string} expression Angular expression that will be evaluated.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSelected\n * @restrict A\n *\n * @description\n * The HTML specs do not require browsers to preserve the special attributes such as selected.\n * (The presence of them means true and absence means false)\n * This prevents the angular compiler from correctly retrieving the binding expression.\n * To solve this problem, we introduced the `ngSelected` directive.\n * @example\n    <doc:example>\n      <doc:source>\n        Check me to select: <input type=\"checkbox\" ng-model=\"selected\"><br/>\n        <select>\n          <option>Hello!</option>\n          <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n        </select>\n      </doc:source>\n      <doc:scenario>\n        it('should select Greetings!', function() {\n          expect(element('.doc-example-live #greet').prop('selected')).toBeFalsy();\n          input('selected').check();\n          expect(element('.doc-example-live #greet').prop('selected')).toBeTruthy();\n        });\n      </doc:scenario>\n    </doc:example>\n *\n * @element OPTION\n * @param {string} expression Angular expression that will be evaluated.\n */\n\n\nvar ngAttributeAliasDirectives = {};\n\n\n// boolean attrs are evaluated\nforEach(BOOLEAN_ATTR, function(propName, attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 100,\n      compile: function() {\n        return function(scope, element, attr) {\n          scope.$watch(attr[normalized], function ngBooleanAttrWatchAction(value) {\n            attr.$set(attrName, !!value);\n          });\n        };\n      }\n    };\n  };\n});\n\n\n// ng-src, ng-href are interpolated\nforEach(['src', 'href'], function(attrName) {\n  var normalized = directiveNormalize('ng-' + attrName);\n  ngAttributeAliasDirectives[normalized] = function() {\n    return {\n      priority: 99, // it needs to run after the attributes are interpolated\n      link: function(scope, element, attr) {\n        attr.$observe(normalized, function(value) {\n          if (!value)\n             return;\n\n          attr.$set(attrName, value);\n\n          // on IE, if \"ng:src\" directive declaration is used and \"src\" attribute doesn't exist\n          // then calling element.setAttribute('src', 'foo') doesn't do anything, so we need\n          // to set the property as well to achieve the desired effect.\n          // we use attr[attrName] value since $set can sanitize the url.\n          if (msie) element.prop(attrName, attr[attrName]);\n        });\n      }\n    };\n  };\n});\n\nvar nullFormCtrl = {\n  $addControl: noop,\n  $removeControl: noop,\n  $setValidity: noop,\n  $setDirty: noop\n};\n\n/**\n * @ngdoc object\n * @name ng.directive:form.FormController\n *\n * @property {boolean} $pristine True if user has not interacted with the form yet.\n * @property {boolean} $dirty True if user has already interacted with the form.\n * @property {boolean} $valid True if all of the containing forms and controls are valid.\n * @property {boolean} $invalid True if at least one containing control or form is invalid.\n *\n * @property {Object} $error Is an object hash, containing references to all invalid controls or\n *  forms, where:\n *\n *  - keys are validation tokens (error names) — such as `required`, `url` or `email`),\n *  - values are arrays of controls or forms that are invalid with given error.\n *\n * @description\n * `FormController` keeps track of all its controls and nested forms as well as state of them,\n * such as being valid/invalid or dirty/pristine.\n *\n * Each {@link ng.directive:form form} directive creates an instance\n * of `FormController`.\n *\n */\n//asks for $scope to fool the BC controller module\nFormController.$inject = ['$element', '$attrs', '$scope'];\nfunction FormController(element, attrs) {\n  var form = this,\n      parentForm = element.parent().controller('form') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      errors = form.$error = {};\n\n  // init state\n  form.$name = attrs.name || attrs.ngForm;\n  form.$dirty = false;\n  form.$pristine = true;\n  form.$valid = true;\n  form.$invalid = false;\n\n  parentForm.$addControl(form);\n\n  // Setup initial state of the control\n  element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    element.\n      removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).\n      addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:form.FormController#$addControl\n   * @methodOf ng.directive:form.FormController\n   *\n   * @description\n   * Register a control with the form.\n   *\n   * Input elements using ngModelController do this automatically when they are linked.\n   */\n  form.$addControl = function(control) {\n    if (control.$name && !form.hasOwnProperty(control.$name)) {\n      form[control.$name] = control;\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:form.FormController#$removeControl\n   * @methodOf ng.directive:form.FormController\n   *\n   * @description\n   * Deregister a control from the form.\n   *\n   * Input elements using ngModelController do this automatically when they are destroyed.\n   */\n  form.$removeControl = function(control) {\n    if (control.$name && form[control.$name] === control) {\n      delete form[control.$name];\n    }\n    forEach(errors, function(queue, validationToken) {\n      form.$setValidity(validationToken, true, control);\n    });\n  };\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:form.FormController#$setValidity\n   * @methodOf ng.directive:form.FormController\n   *\n   * @description\n   * Sets the validity of a form control.\n   *\n   * This method will also propagate to parent forms.\n   */\n  form.$setValidity = function(validationToken, isValid, control) {\n    var queue = errors[validationToken];\n\n    if (isValid) {\n      if (queue) {\n        arrayRemove(queue, control);\n        if (!queue.length) {\n          invalidCount--;\n          if (!invalidCount) {\n            toggleValidCss(isValid);\n            form.$valid = true;\n            form.$invalid = false;\n          }\n          errors[validationToken] = false;\n          toggleValidCss(true, validationToken);\n          parentForm.$setValidity(validationToken, true, form);\n        }\n      }\n\n    } else {\n      if (!invalidCount) {\n        toggleValidCss(isValid);\n      }\n      if (queue) {\n        if (includes(queue, control)) return;\n      } else {\n        errors[validationToken] = queue = [];\n        invalidCount++;\n        toggleValidCss(false, validationToken);\n        parentForm.$setValidity(validationToken, false, form);\n      }\n      queue.push(control);\n\n      form.$valid = false;\n      form.$invalid = true;\n    }\n  };\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:form.FormController#$setDirty\n   * @methodOf ng.directive:form.FormController\n   *\n   * @description\n   * Sets the form to a dirty state.\n   *\n   * This method can be called to add the 'ng-dirty' class and set the form to a dirty\n   * state (ng-dirty class). This method will also propagate to parent forms.\n   */\n  form.$setDirty = function() {\n    element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);\n    form.$dirty = true;\n    form.$pristine = false;\n    parentForm.$setDirty();\n  };\n\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngForm\n * @restrict EAC\n *\n * @description\n * Nestable alias of {@link ng.directive:form `form`} directive. HTML\n * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\n * sub-group of controls needs to be determined.\n *\n * @param {string=} name|ngForm Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n */\n\n /**\n * @ngdoc directive\n * @name ng.directive:form\n * @restrict E\n *\n * @description\n * Directive that instantiates\n * {@link ng.directive:form.FormController FormController}.\n *\n * If `name` attribute is specified, the form controller is published onto the current scope under\n * this name.\n *\n * # Alias: {@link ng.directive:ngForm `ngForm`}\n *\n * In angular forms can be nested. This means that the outer form is valid when all of the child\n * forms are valid as well. However browsers do not allow nesting of `<form>` elements, for this\n * reason angular provides {@link ng.directive:ngForm `ngForm`} alias\n * which behaves identical to `<form>` but allows form nesting.\n *\n *\n * # CSS classes\n *  - `ng-valid` Is set if the form is valid.\n *  - `ng-invalid` Is set if the form is invalid.\n *  - `ng-pristine` Is set if the form is pristine.\n *  - `ng-dirty` Is set if the form is dirty.\n *\n *\n * # Submitting a form and preventing default action\n *\n * Since the role of forms in client-side Angular applications is different than in classical\n * roundtrip apps, it is desirable for the browser not to translate the form submission into a full\n * page reload that sends the data to the server. Instead some javascript logic should be triggered\n * to handle the form submission in application specific way.\n *\n * For this reason, Angular prevents the default action (form submission to the server) unless the\n * `<form>` element has an `action` attribute specified.\n *\n * You can use one of the following two ways to specify what javascript method should be called when\n * a form is submitted:\n *\n * - {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n * - {@link ng.directive:ngClick ngClick} directive on the first\n  *  button or input field of type submit (input[type=submit])\n *\n * To prevent double execution of the handler, use only one of ngSubmit or ngClick directives. This\n * is because of the following form submission rules coming from the html spec:\n *\n * - If a form has only one input field then hitting enter in this field triggers form submit\n * (`ngSubmit`)\n * - if a form has has 2+ input fields and no buttons or input[type=submit] then hitting enter\n * doesn't trigger submit\n * - if a form has one or more input fields and one or more buttons or input[type=submit] then\n * hitting enter in any of the input fields will trigger the click handler on the *first* button or\n * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n *\n * @param {string=} name Name of the form. If specified, the form controller will be published into\n *                       related scope, under this name.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.userType = 'guest';\n         }\n       </script>\n       <form name=\"myForm\" ng-controller=\"Ctrl\">\n         userType: <input name=\"input\" ng-model=\"userType\" required>\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n         <tt>userType = {{userType}}</tt><br>\n         <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br>\n         <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n        </form>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n         expect(binding('userType')).toEqual('guest');\n         expect(binding('myForm.input.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty', function() {\n         input('userType').enter('');\n         expect(binding('userType')).toEqual('');\n         expect(binding('myForm.input.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar formDirectiveFactory = function(isNgForm) {\n  return ['$timeout', function($timeout) {\n    var formDirective = {\n      name: 'form',\n      restrict: 'E',\n      controller: FormController,\n      compile: function() {\n        return {\n          pre: function(scope, formElement, attr, controller) {\n            if (!attr.action) {\n              // we can't use jq events because if a form is destroyed during submission the default\n              // action is not prevented. see #1238\n              //\n              // IE 9 is not affected because it doesn't fire a submit event and try to do a full\n              // page reload if the form was destroyed by submission of the form via a click handler\n              // on a button in the form. Looks like an IE9 specific bug.\n              var preventDefaultListener = function(event) {\n                event.preventDefault\n                  ? event.preventDefault()\n                  : event.returnValue = false; // IE\n              };\n\n              addEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n\n              // unregister the preventDefault listener so that we don't not leak memory but in a\n              // way that will achieve the prevention of the default action.\n              formElement.bind('$destroy', function() {\n                $timeout(function() {\n                  removeEventListenerFn(formElement[0], 'submit', preventDefaultListener);\n                }, 0, false);\n              });\n            }\n\n            var parentFormCtrl = formElement.parent().controller('form'),\n                alias = attr.name || attr.ngForm;\n\n            if (alias) {\n              scope[alias] = controller;\n            }\n            if (parentFormCtrl) {\n              formElement.bind('$destroy', function() {\n                parentFormCtrl.$removeControl(controller);\n                if (alias) {\n                  scope[alias] = undefined;\n                }\n                extend(controller, nullFormCtrl); //stop propagating child destruction handlers upwards\n              });\n            }\n          }\n        };\n      }\n    };\n\n    return isNgForm ? extend(copy(formDirective), {restrict: 'EAC'}) : formDirective;\n  }];\n};\n\nvar formDirective = formDirectiveFactory();\nvar ngFormDirective = formDirectiveFactory(true);\n\nvar URL_REGEXP = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\nvar EMAIL_REGEXP = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,6}$/;\nvar NUMBER_REGEXP = /^\\s*(\\-|\\+)?(\\d+|(\\d*(\\.\\d*)))\\s*$/;\n\nvar inputType = {\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.text\n   *\n   * @description\n   * Standard HTML text input with angular data binding.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Adds `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'guest';\n             $scope.word = /^\\w*$/;\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Single word: <input type=\"text\" name=\"input\" ng-model=\"text\"\n                               ng-pattern=\"word\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n             Single word only!</span>\n\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('guest');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if multi word', function() {\n            input('text').enter('hello world');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'text': textInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.number\n   *\n   * @description\n   * Text input with number validation and transformation. Sets the `number` validation\n   * error if not a valid number.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} min Sets the `min` validation error key if the value entered is less than `min`.\n   * @param {string=} max Sets the `max` validation error key if the value entered is greater than `max`.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.value = 12;\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Number: <input type=\"number\" name=\"input\" ng-model=\"value\"\n                          min=\"0\" max=\"99\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.number\">\n             Not valid number!</span>\n           <tt>value = {{value}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n           expect(binding('value')).toEqual('12');\n           expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n           input('value').enter('');\n           expect(binding('value')).toEqual('');\n           expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if over max', function() {\n           input('value').enter('123');\n           expect(binding('value')).toEqual('');\n           expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'number': numberInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.url\n   *\n   * @description\n   * Text input with URL validation. Sets the `url` validation error key if the content is not a\n   * valid URL.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'http://google.com';\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           URL: <input type=\"url\" name=\"input\" ng-model=\"text\" required>\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n             Not valid url!</span>\n           <tt>text = {{text}}</tt><br/>\n           <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n           <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n           <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n           <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n           <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('http://google.com');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if not url', function() {\n            input('text').enter('xxx');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'url': urlInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.email\n   *\n   * @description\n   * Text input with email validation. Sets the `email` validation error key if not a valid email\n   * address.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} required Sets `required` validation error key if the value is not entered.\n   * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n   *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   *    `required` when you want to data-bind to the `required` attribute.\n   * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n   *    minlength.\n   * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n   *    maxlength.\n   * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n   *    patterns defined as scope expressions.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.text = 'me@example.com';\n           }\n         </script>\n           <form name=\"myForm\" ng-controller=\"Ctrl\">\n             Email: <input type=\"email\" name=\"input\" ng-model=\"text\" required>\n             <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n             <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n               Not valid email!</span>\n             <tt>text = {{text}}</tt><br/>\n             <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n             <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n             <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n             <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n             <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n           </form>\n        </doc:source>\n        <doc:scenario>\n          it('should initialize to model', function() {\n            expect(binding('text')).toEqual('me@example.com');\n            expect(binding('myForm.input.$valid')).toEqual('true');\n          });\n\n          it('should be invalid if empty', function() {\n            input('text').enter('');\n            expect(binding('text')).toEqual('');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n\n          it('should be invalid if not email', function() {\n            input('text').enter('xxx');\n            expect(binding('myForm.input.$valid')).toEqual('false');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'email': emailInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.radio\n   *\n   * @description\n   * HTML radio button.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string} value The value to which the expression should be set when selected.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.color = 'blue';\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           <input type=\"radio\" ng-model=\"color\" value=\"red\">  Red <br/>\n           <input type=\"radio\" ng-model=\"color\" value=\"green\"> Green <br/>\n           <input type=\"radio\" ng-model=\"color\" value=\"blue\"> Blue <br/>\n           <tt>color = {{color}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should change state', function() {\n            expect(binding('color')).toEqual('blue');\n\n            input('color').select('red');\n            expect(binding('color')).toEqual('red');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'radio': radioInputType,\n\n\n  /**\n   * @ngdoc inputType\n   * @name ng.directive:input.checkbox\n   *\n   * @description\n   * HTML checkbox.\n   *\n   * @param {string} ngModel Assignable angular expression to data-bind to.\n   * @param {string=} name Property name of the form under which the control is published.\n   * @param {string=} ngTrueValue The value to which the expression should be set when selected.\n   * @param {string=} ngFalseValue The value to which the expression should be set when not selected.\n   * @param {string=} ngChange Angular expression to be executed when input changes due to user\n   *    interaction with the input element.\n   *\n   * @example\n      <doc:example>\n        <doc:source>\n         <script>\n           function Ctrl($scope) {\n             $scope.value1 = true;\n             $scope.value2 = 'YES'\n           }\n         </script>\n         <form name=\"myForm\" ng-controller=\"Ctrl\">\n           Value1: <input type=\"checkbox\" ng-model=\"value1\"> <br/>\n           Value2: <input type=\"checkbox\" ng-model=\"value2\"\n                          ng-true-value=\"YES\" ng-false-value=\"NO\"> <br/>\n           <tt>value1 = {{value1}}</tt><br/>\n           <tt>value2 = {{value2}}</tt><br/>\n          </form>\n        </doc:source>\n        <doc:scenario>\n          it('should change state', function() {\n            expect(binding('value1')).toEqual('true');\n            expect(binding('value2')).toEqual('YES');\n\n            input('value1').check();\n            input('value2').check();\n            expect(binding('value1')).toEqual('false');\n            expect(binding('value2')).toEqual('NO');\n          });\n        </doc:scenario>\n      </doc:example>\n   */\n  'checkbox': checkboxInputType,\n\n  'hidden': noop,\n  'button': noop,\n  'submit': noop,\n  'reset': noop\n};\n\n\nfunction isEmpty(value) {\n  return isUndefined(value) || value === '' || value === null || value !== value;\n}\n\n\nfunction textInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n\n  var listener = function() {\n    var value = trim(element.val());\n\n    if (ctrl.$viewValue !== value) {\n      scope.$apply(function() {\n        ctrl.$setViewValue(value);\n      });\n    }\n  };\n\n  // if the browser does support \"input\" event, we are fine - except on IE9 which doesn't fire the\n  // input event on backspace, delete or cut\n  if ($sniffer.hasEvent('input')) {\n    element.bind('input', listener);\n  } else {\n    var timeout;\n\n    var deferListener = function() {\n      if (!timeout) {\n        timeout = $browser.defer(function() {\n          listener();\n          timeout = null;\n        });\n      }\n    };\n\n    element.bind('keydown', function(event) {\n      var key = event.keyCode;\n\n      // ignore\n      //    command            modifiers                   arrows\n      if (key === 91 || (15 < key && key < 19) || (37 <= key && key <= 40)) return;\n\n      deferListener();\n    });\n\n    // if user paste into input using mouse, we need \"change\" event to catch it\n    element.bind('change', listener);\n\n    // if user modifies input value using context menu in IE, we need \"paste\" and \"cut\" events to catch it\n    if ($sniffer.hasEvent('paste')) {\n      element.bind('paste cut', deferListener);\n    }\n  }\n\n\n  ctrl.$render = function() {\n    element.val(isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue);\n  };\n\n  // pattern validator\n  var pattern = attr.ngPattern,\n      patternValidator;\n\n  var validate = function(regexp, value) {\n    if (isEmpty(value) || regexp.test(value)) {\n      ctrl.$setValidity('pattern', true);\n      return value;\n    } else {\n      ctrl.$setValidity('pattern', false);\n      return undefined;\n    }\n  };\n\n  if (pattern) {\n    if (pattern.match(/^\\/(.*)\\/$/)) {\n      pattern = new RegExp(pattern.substr(1, pattern.length - 2));\n      patternValidator = function(value) {\n        return validate(pattern, value)\n      };\n    } else {\n      patternValidator = function(value) {\n        var patternObj = scope.$eval(pattern);\n\n        if (!patternObj || !patternObj.test) {\n          throw new Error('Expected ' + pattern + ' to be a RegExp but was ' + patternObj);\n        }\n        return validate(patternObj, value);\n      };\n    }\n\n    ctrl.$formatters.push(patternValidator);\n    ctrl.$parsers.push(patternValidator);\n  }\n\n  // min length validator\n  if (attr.ngMinlength) {\n    var minlength = int(attr.ngMinlength);\n    var minLengthValidator = function(value) {\n      if (!isEmpty(value) && value.length < minlength) {\n        ctrl.$setValidity('minlength', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('minlength', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(minLengthValidator);\n    ctrl.$formatters.push(minLengthValidator);\n  }\n\n  // max length validator\n  if (attr.ngMaxlength) {\n    var maxlength = int(attr.ngMaxlength);\n    var maxLengthValidator = function(value) {\n      if (!isEmpty(value) && value.length > maxlength) {\n        ctrl.$setValidity('maxlength', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('maxlength', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(maxLengthValidator);\n    ctrl.$formatters.push(maxLengthValidator);\n  }\n}\n\nfunction numberInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  ctrl.$parsers.push(function(value) {\n    var empty = isEmpty(value);\n    if (empty || NUMBER_REGEXP.test(value)) {\n      ctrl.$setValidity('number', true);\n      return value === '' ? null : (empty ? value : parseFloat(value));\n    } else {\n      ctrl.$setValidity('number', false);\n      return undefined;\n    }\n  });\n\n  ctrl.$formatters.push(function(value) {\n    return isEmpty(value) ? '' : '' + value;\n  });\n\n  if (attr.min) {\n    var min = parseFloat(attr.min);\n    var minValidator = function(value) {\n      if (!isEmpty(value) && value < min) {\n        ctrl.$setValidity('min', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('min', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(minValidator);\n    ctrl.$formatters.push(minValidator);\n  }\n\n  if (attr.max) {\n    var max = parseFloat(attr.max);\n    var maxValidator = function(value) {\n      if (!isEmpty(value) && value > max) {\n        ctrl.$setValidity('max', false);\n        return undefined;\n      } else {\n        ctrl.$setValidity('max', true);\n        return value;\n      }\n    };\n\n    ctrl.$parsers.push(maxValidator);\n    ctrl.$formatters.push(maxValidator);\n  }\n\n  ctrl.$formatters.push(function(value) {\n\n    if (isEmpty(value) || isNumber(value)) {\n      ctrl.$setValidity('number', true);\n      return value;\n    } else {\n      ctrl.$setValidity('number', false);\n      return undefined;\n    }\n  });\n}\n\nfunction urlInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var urlValidator = function(value) {\n    if (isEmpty(value) || URL_REGEXP.test(value)) {\n      ctrl.$setValidity('url', true);\n      return value;\n    } else {\n      ctrl.$setValidity('url', false);\n      return undefined;\n    }\n  };\n\n  ctrl.$formatters.push(urlValidator);\n  ctrl.$parsers.push(urlValidator);\n}\n\nfunction emailInputType(scope, element, attr, ctrl, $sniffer, $browser) {\n  textInputType(scope, element, attr, ctrl, $sniffer, $browser);\n\n  var emailValidator = function(value) {\n    if (isEmpty(value) || EMAIL_REGEXP.test(value)) {\n      ctrl.$setValidity('email', true);\n      return value;\n    } else {\n      ctrl.$setValidity('email', false);\n      return undefined;\n    }\n  };\n\n  ctrl.$formatters.push(emailValidator);\n  ctrl.$parsers.push(emailValidator);\n}\n\nfunction radioInputType(scope, element, attr, ctrl) {\n  // make the name unique, if not defined\n  if (isUndefined(attr.name)) {\n    element.attr('name', nextUid());\n  }\n\n  element.bind('click', function() {\n    if (element[0].checked) {\n      scope.$apply(function() {\n        ctrl.$setViewValue(attr.value);\n      });\n    }\n  });\n\n  ctrl.$render = function() {\n    var value = attr.value;\n    element[0].checked = (value == ctrl.$viewValue);\n  };\n\n  attr.$observe('value', ctrl.$render);\n}\n\nfunction checkboxInputType(scope, element, attr, ctrl) {\n  var trueValue = attr.ngTrueValue,\n      falseValue = attr.ngFalseValue;\n\n  if (!isString(trueValue)) trueValue = true;\n  if (!isString(falseValue)) falseValue = false;\n\n  element.bind('click', function() {\n    scope.$apply(function() {\n      ctrl.$setViewValue(element[0].checked);\n    });\n  });\n\n  ctrl.$render = function() {\n    element[0].checked = ctrl.$viewValue;\n  };\n\n  ctrl.$formatters.push(function(value) {\n    return value === trueValue;\n  });\n\n  ctrl.$parsers.push(function(value) {\n    return value ? trueValue : falseValue;\n  });\n}\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:textarea\n * @restrict E\n *\n * @description\n * HTML textarea element control with angular data-binding. The data-binding and validation\n * properties of this element are exactly the same as those of the\n * {@link ng.directive:input input element}.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:input\n * @restrict E\n *\n * @description\n * HTML input element control with angular data-binding. Input control follows HTML5 input types\n * and polyfills the HTML5 validation behavior for older browsers.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required Sets `required` validation error key if the value is not entered.\n * @param {boolean=} ngRequired Sets `required` attribute if set to true\n * @param {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than\n *    minlength.\n * @param {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than\n *    maxlength.\n * @param {string=} ngPattern Sets `pattern` validation error key if the value does not match the\n *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for\n *    patterns defined as scope expressions.\n * @param {string=} ngChange Angular expression to be executed when input changes due to user\n *    interaction with the input element.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.user = {name: 'guest', last: 'visitor'};\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <form name=\"myForm\">\n           User name: <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n           <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n             Required!</span><br>\n           Last name: <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n             ng-minlength=\"3\" ng-maxlength=\"10\">\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n             Too short!</span>\n           <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n             Too long!</span><br>\n         </form>\n         <hr>\n         <tt>user = {{user}}</tt><br/>\n         <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br>\n         <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br>\n         <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br>\n         <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br>\n         <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br>\n         <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br>\n       </div>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n          expect(binding('user')).toEqual('{\"name\":\"guest\",\"last\":\"visitor\"}');\n          expect(binding('myForm.userName.$valid')).toEqual('true');\n          expect(binding('myForm.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if empty when required', function() {\n          input('user.name').enter('');\n          expect(binding('user')).toEqual('{\"last\":\"visitor\"}');\n          expect(binding('myForm.userName.$valid')).toEqual('false');\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n\n        it('should be valid if empty when min length is set', function() {\n          input('user.last').enter('');\n          expect(binding('user')).toEqual('{\"name\":\"guest\",\"last\":\"\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('true');\n          expect(binding('myForm.$valid')).toEqual('true');\n        });\n\n        it('should be invalid if less than required min length', function() {\n          input('user.last').enter('xx');\n          expect(binding('user')).toEqual('{\"name\":\"guest\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('false');\n          expect(binding('myForm.lastName.$error')).toMatch(/minlength/);\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n\n        it('should be invalid if longer than max length', function() {\n          input('user.last').enter('some ridiculously long name');\n          expect(binding('user'))\n            .toEqual('{\"name\":\"guest\"}');\n          expect(binding('myForm.lastName.$valid')).toEqual('false');\n          expect(binding('myForm.lastName.$error')).toMatch(/maxlength/);\n          expect(binding('myForm.$valid')).toEqual('false');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar inputDirective = ['$browser', '$sniffer', function($browser, $sniffer) {\n  return {\n    restrict: 'E',\n    require: '?ngModel',\n    link: function(scope, element, attr, ctrl) {\n      if (ctrl) {\n        (inputType[lowercase(attr.type)] || inputType.text)(scope, element, attr, ctrl, $sniffer,\n                                                            $browser);\n      }\n    }\n  };\n}];\n\nvar VALID_CLASS = 'ng-valid',\n    INVALID_CLASS = 'ng-invalid',\n    PRISTINE_CLASS = 'ng-pristine',\n    DIRTY_CLASS = 'ng-dirty';\n\n/**\n * @ngdoc object\n * @name ng.directive:ngModel.NgModelController\n *\n * @property {string} $viewValue Actual string value in the view.\n * @property {*} $modelValue The value in the model, that the control is bound to.\n * @property {Array.<Function>} $parsers Array of functions to execute, as a pipeline, whenever\n       the control reads value from the DOM.  Each function is called, in turn, passing the value\n       through to the next. Used to sanitize / convert the value as well as validation.\n\n       For validation, the parsers should update the validity state using\n       {@link ng.directive:ngModel.NgModelController#$setValidity $setValidity()},\n       and return `undefined` for invalid values.\n *\n * @property {Array.<Function>} $formatters Array of functions to execute, as a pipeline, whenever\n *     the model value changes. Each function is called, in turn, passing the value through to the\n *     next. Used to format / convert values for display in the control and validation.\n *      <pre>\n *      function formatter(value) {\n *        if (value) {\n *          return value.toUpperCase();\n *        }\n *      }\n *      ngModel.$formatters.push(formatter);\n *      </pre>\n * @property {Object} $error An bject hash with all errors as keys.\n *\n * @property {boolean} $pristine True if user has not interacted with the control yet.\n * @property {boolean} $dirty True if user has already interacted with the control.\n * @property {boolean} $valid True if there is no error.\n * @property {boolean} $invalid True if at least one error on the control.\n *\n * @description\n *\n * `NgModelController` provides API for the `ng-model` directive. The controller contains\n * services for data-binding, validation, CSS update, value formatting and parsing. It\n * specifically does not contain any logic which deals with DOM rendering or listening to\n * DOM events. The `NgModelController` is meant to be extended by other directives where, the\n * directive provides DOM manipulation and the `NgModelController` provides the data-binding.\n * Note that you cannot use `NgModelController` in a directive with an isolated scope,\n * as, in that case, the `ng-model` value gets put into the isolated scope and does not get\n * propogated to the parent scope.\n *\n *\n * This example shows how to use `NgModelController` with a custom control to achieve\n * data-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\n * collaborate together to achieve the desired result.\n *\n * <example module=\"customControl\">\n    <file name=\"style.css\">\n      [contenteditable] {\n        border: 1px solid black;\n        background-color: white;\n        min-height: 20px;\n      }\n\n      .ng-invalid {\n        border: 1px solid red;\n      }\n\n    </file>\n    <file name=\"script.js\">\n      angular.module('customControl', []).\n        directive('contenteditable', function() {\n          return {\n            restrict: 'A', // only activate on element attribute\n            require: '?ngModel', // get a hold of NgModelController\n            link: function(scope, element, attrs, ngModel) {\n              if(!ngModel) return; // do nothing if no ng-model\n\n              // Specify how UI should be updated\n              ngModel.$render = function() {\n                element.html(ngModel.$viewValue || '');\n              };\n\n              // Listen for change events to enable binding\n              element.bind('blur keyup change', function() {\n                scope.$apply(read);\n              });\n              read(); // initialize\n\n              // Write data to the model\n              function read() {\n                var html = element.html();\n                // When we clear the content editable the browser leaves a <br> behind\n                // If strip-br attribute is provided then we strip this out\n                if( attrs.stripBr && html == '<br>' ) {\n                  html = '';\n                }\n                ngModel.$setViewValue(html);\n              }\n            }\n          };\n        });\n    </file>\n    <file name=\"index.html\">\n      <form name=\"myForm\">\n       <div contenteditable\n            name=\"myWidget\" ng-model=\"userContent\"\n            strip-br=\"true\"\n            required>Change me!</div>\n        <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n       <hr>\n       <textarea ng-model=\"userContent\"></textarea>\n      </form>\n    </file>\n    <file name=\"scenario.js\">\n      it('should data-bind and become invalid', function() {\n        var contentEditable = element('[contenteditable]');\n\n        expect(contentEditable.text()).toEqual('Change me!');\n        input('userContent').enter('');\n        expect(contentEditable.text()).toEqual('');\n        expect(contentEditable.prop('className')).toMatch(/ng-invalid-required/);\n      });\n    </file>\n * </example>\n *\n */\nvar NgModelController = ['$scope', '$exceptionHandler', '$attrs', '$element', '$parse',\n    function($scope, $exceptionHandler, $attr, $element, $parse) {\n  this.$viewValue = Number.NaN;\n  this.$modelValue = Number.NaN;\n  this.$parsers = [];\n  this.$formatters = [];\n  this.$viewChangeListeners = [];\n  this.$pristine = true;\n  this.$dirty = false;\n  this.$valid = true;\n  this.$invalid = false;\n  this.$name = $attr.name;\n\n  var ngModelGet = $parse($attr.ngModel),\n      ngModelSet = ngModelGet.assign;\n\n  if (!ngModelSet) {\n    throw Error(NON_ASSIGNABLE_MODEL_EXPRESSION + $attr.ngModel +\n        ' (' + startingTag($element) + ')');\n  }\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$render\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Called when the view needs to be updated. It is expected that the user of the ng-model\n   * directive will implement this method.\n   */\n  this.$render = noop;\n\n  var parentForm = $element.inheritedData('$formController') || nullFormCtrl,\n      invalidCount = 0, // used to easily determine if we are valid\n      $error = this.$error = {}; // keep invalid keys here\n\n\n  // Setup initial state of the control\n  $element.addClass(PRISTINE_CLASS);\n  toggleValidCss(true);\n\n  // convenience method for easy toggling of classes\n  function toggleValidCss(isValid, validationErrorKey) {\n    validationErrorKey = validationErrorKey ? '-' + snake_case(validationErrorKey, '-') : '';\n    $element.\n      removeClass((isValid ? INVALID_CLASS : VALID_CLASS) + validationErrorKey).\n      addClass((isValid ? VALID_CLASS : INVALID_CLASS) + validationErrorKey);\n  }\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$setValidity\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Change the validity state, and notifies the form when the control changes validity. (i.e. it\n   * does not notify form if given validator is already marked as invalid).\n   *\n   * This method should be called by validators - i.e. the parser or formatter functions.\n   *\n   * @param {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign\n   *        to `$error[validationErrorKey]=isValid` so that it is available for data-binding.\n   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case\n   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .\n   * @param {boolean} isValid Whether the current state is valid (true) or invalid (false).\n   */\n  this.$setValidity = function(validationErrorKey, isValid) {\n    if ($error[validationErrorKey] === !isValid) return;\n\n    if (isValid) {\n      if ($error[validationErrorKey]) invalidCount--;\n      if (!invalidCount) {\n        toggleValidCss(true);\n        this.$valid = true;\n        this.$invalid = false;\n      }\n    } else {\n      toggleValidCss(false);\n      this.$invalid = true;\n      this.$valid = false;\n      invalidCount++;\n    }\n\n    $error[validationErrorKey] = !isValid;\n    toggleValidCss(isValid, validationErrorKey);\n\n    parentForm.$setValidity(validationErrorKey, isValid, this);\n  };\n\n\n  /**\n   * @ngdoc function\n   * @name ng.directive:ngModel.NgModelController#$setViewValue\n   * @methodOf ng.directive:ngModel.NgModelController\n   *\n   * @description\n   * Read a value from view.\n   *\n   * This method should be called from within a DOM event handler.\n   * For example {@link ng.directive:input input} or\n   * {@link ng.directive:select select} directives call it.\n   *\n   * It internally calls all `$parsers` (including validators) and updates the `$modelValue` and the actual model path.\n   * Lastly it calls all registered change listeners.\n   *\n   * @param {string} value Value from the view.\n   */\n  this.$setViewValue = function(value) {\n    this.$viewValue = value;\n\n    // change to dirty\n    if (this.$pristine) {\n      this.$dirty = true;\n      this.$pristine = false;\n      $element.removeClass(PRISTINE_CLASS).addClass(DIRTY_CLASS);\n      parentForm.$setDirty();\n    }\n\n    forEach(this.$parsers, function(fn) {\n      value = fn(value);\n    });\n\n    if (this.$modelValue !== value) {\n      this.$modelValue = value;\n      ngModelSet($scope, value);\n      forEach(this.$viewChangeListeners, function(listener) {\n        try {\n          listener();\n        } catch(e) {\n          $exceptionHandler(e);\n        }\n      })\n    }\n  };\n\n  // model -> value\n  var ctrl = this;\n\n  $scope.$watch(function ngModelWatch() {\n    var value = ngModelGet($scope);\n\n    // if scope model value and ngModel value are out of sync\n    if (ctrl.$modelValue !== value) {\n\n      var formatters = ctrl.$formatters,\n          idx = formatters.length;\n\n      ctrl.$modelValue = value;\n      while(idx--) {\n        value = formatters[idx](value);\n      }\n\n      if (ctrl.$viewValue !== value) {\n        ctrl.$viewValue = value;\n        ctrl.$render();\n      }\n    }\n  });\n}];\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngModel\n *\n * @element input\n *\n * @description\n * Is a directive that tells Angular to do two-way data binding. It works together with `input`,\n * `select`, `textarea`. You can easily write your own directives to use `ngModel` as well.\n *\n * `ngModel` is responsible for:\n *\n * - binding the view into the model, which other directives such as `input`, `textarea` or `select`\n *   require,\n * - providing validation behavior (i.e. required, number, email, url),\n * - keeping state of the control (valid/invalid, dirty/pristine, validation errors),\n * - setting related css class onto the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`),\n * - register the control with parent {@link ng.directive:form form}.\n *\n * Note: `ngModel` will try to bind to the property given by evaluating the expression on the\n * current scope. If the property doesn't already exist on this scope, it will be created\n * implicitly and added to the scope.\n *\n * For basic examples, how to use `ngModel`, see:\n *\n *  - {@link ng.directive:input input}\n *    - {@link ng.directive:input.text text}\n *    - {@link ng.directive:input.checkbox checkbox}\n *    - {@link ng.directive:input.radio radio}\n *    - {@link ng.directive:input.number number}\n *    - {@link ng.directive:input.email email}\n *    - {@link ng.directive:input.url url}\n *  - {@link ng.directive:select select}\n *  - {@link ng.directive:textarea textarea}\n *\n */\nvar ngModelDirective = function() {\n  return {\n    require: ['ngModel', '^?form'],\n    controller: NgModelController,\n    link: function(scope, element, attr, ctrls) {\n      // notify others, especially parent forms\n\n      var modelCtrl = ctrls[0],\n          formCtrl = ctrls[1] || nullFormCtrl;\n\n      formCtrl.$addControl(modelCtrl);\n\n      element.bind('$destroy', function() {\n        formCtrl.$removeControl(modelCtrl);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngChange\n * @restrict E\n *\n * @description\n * Evaluate given expression when user changes the input.\n * The expression is not evaluated when the value change is coming from the model.\n *\n * Note, this directive requires `ngModel` to be present.\n *\n * @element input\n *\n * @example\n * <doc:example>\n *   <doc:source>\n *     <script>\n *       function Controller($scope) {\n *         $scope.counter = 0;\n *         $scope.change = function() {\n *           $scope.counter++;\n *         };\n *       }\n *     </script>\n *     <div ng-controller=\"Controller\">\n *       <input type=\"checkbox\" ng-model=\"confirmed\" ng-change=\"change()\" id=\"ng-change-example1\" />\n *       <input type=\"checkbox\" ng-model=\"confirmed\" id=\"ng-change-example2\" />\n *       <label for=\"ng-change-example2\">Confirmed</label><br />\n *       debug = {{confirmed}}<br />\n *       counter = {{counter}}\n *     </div>\n *   </doc:source>\n *   <doc:scenario>\n *     it('should evaluate the expression if changing from view', function() {\n *       expect(binding('counter')).toEqual('0');\n *       element('#ng-change-example1').click();\n *       expect(binding('counter')).toEqual('1');\n *       expect(binding('confirmed')).toEqual('true');\n *     });\n *\n *     it('should not evaluate the expression if changing from model', function() {\n *       element('#ng-change-example2').click();\n *       expect(binding('counter')).toEqual('0');\n *       expect(binding('confirmed')).toEqual('true');\n *     });\n *   </doc:scenario>\n * </doc:example>\n */\nvar ngChangeDirective = valueFn({\n  require: 'ngModel',\n  link: function(scope, element, attr, ctrl) {\n    ctrl.$viewChangeListeners.push(function() {\n      scope.$eval(attr.ngChange);\n    });\n  }\n});\n\n\nvar requiredDirective = function() {\n  return {\n    require: '?ngModel',\n    link: function(scope, elm, attr, ctrl) {\n      if (!ctrl) return;\n      attr.required = true; // force truthy in case we are on non input element\n\n      var validator = function(value) {\n        if (attr.required && (isEmpty(value) || value === false)) {\n          ctrl.$setValidity('required', false);\n          return;\n        } else {\n          ctrl.$setValidity('required', true);\n          return value;\n        }\n      };\n\n      ctrl.$formatters.push(validator);\n      ctrl.$parsers.unshift(validator);\n\n      attr.$observe('required', function() {\n        validator(ctrl.$viewValue);\n      });\n    }\n  };\n};\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngList\n *\n * @description\n * Text input that converts between comma-separated string into an array of strings.\n *\n * @element input\n * @param {string=} ngList optional delimiter that should be used to split the value. If\n *   specified in form `/something/` then the value will be converted into a regular expression.\n *\n * @example\n    <doc:example>\n      <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.names = ['igor', 'misko', 'vojta'];\n         }\n       </script>\n       <form name=\"myForm\" ng-controller=\"Ctrl\">\n         List: <input name=\"namesInput\" ng-model=\"names\" ng-list required>\n         <span class=\"error\" ng-show=\"myForm.namesInput.$error.required\">\n           Required!</span>\n         <br>\n         <tt>names = {{names}}</tt><br/>\n         <tt>myForm.namesInput.$valid = {{myForm.namesInput.$valid}}</tt><br/>\n         <tt>myForm.namesInput.$error = {{myForm.namesInput.$error}}</tt><br/>\n         <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n         <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n        </form>\n      </doc:source>\n      <doc:scenario>\n        it('should initialize to model', function() {\n          expect(binding('names')).toEqual('[\"igor\",\"misko\",\"vojta\"]');\n          expect(binding('myForm.namesInput.$valid')).toEqual('true');\n          expect(element('span.error').css('display')).toBe('none');\n        });\n\n        it('should be invalid if empty', function() {\n          input('names').enter('');\n          expect(binding('names')).toEqual('[]');\n          expect(binding('myForm.namesInput.$valid')).toEqual('false');\n          expect(element('span.error').css('display')).not().toBe('none');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngListDirective = function() {\n  return {\n    require: 'ngModel',\n    link: function(scope, element, attr, ctrl) {\n      var match = /\\/(.*)\\//.exec(attr.ngList),\n          separator = match && new RegExp(match[1]) || attr.ngList || ',';\n\n      var parse = function(viewValue) {\n        var list = [];\n\n        if (viewValue) {\n          forEach(viewValue.split(separator), function(value) {\n            if (value) list.push(trim(value));\n          });\n        }\n\n        return list;\n      };\n\n      ctrl.$parsers.push(parse);\n      ctrl.$formatters.push(function(value) {\n        if (isArray(value)) {\n          return value.join(', ');\n        }\n\n        return undefined;\n      });\n    }\n  };\n};\n\n\nvar CONSTANT_VALUE_REGEXP = /^(true|false|\\d+)$/;\n\nvar ngValueDirective = function() {\n  return {\n    priority: 100,\n    compile: function(tpl, tplAttr) {\n      if (CONSTANT_VALUE_REGEXP.test(tplAttr.ngValue)) {\n        return function(scope, elm, attr) {\n          attr.$set('value', scope.$eval(attr.ngValue));\n        };\n      } else {\n        return function(scope, elm, attr) {\n          scope.$watch(attr.ngValue, function valueWatchAction(value) {\n            attr.$set('value', value);\n          });\n        };\n      }\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBind\n *\n * @description\n * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\n * with the value of a given expression, and to update the text content when the value of that\n * expression changes.\n *\n * Typically, you don't use `ngBind` directly, but instead you use the double curly markup like\n * `{{ expression }}` which is similar but less verbose.\n *\n * It is preferrable to use `ngBind` instead of `{{ expression }}` when a template is momentarily \n * displayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an \n * element attribute, it makes the bindings invisible to the user while the page is loading.\n *\n * An alternative solution to this problem would be using the\n * {@link ng.directive:ngCloak ngCloak} directive.\n *\n *\n * @element ANY\n * @param {expression} ngBind {@link guide/expression Expression} to evaluate.\n *\n * @example\n * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.name = 'Whirled';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n         Enter name: <input type=\"text\" ng-model=\"name\"><br>\n         Hello <span ng-bind=\"name\"></span>!\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-bind', function() {\n         expect(using('.doc-example-live').binding('name')).toBe('Whirled');\n         using('.doc-example-live').input('name').enter('world');\n         expect(using('.doc-example-live').binding('name')).toBe('world');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngBindDirective = ngDirective(function(scope, element, attr) {\n  element.addClass('ng-binding').data('$binding', attr.ngBind);\n  scope.$watch(attr.ngBind, function ngBindWatchAction(value) {\n    element.text(value == undefined ? '' : value);\n  });\n});\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBindTemplate\n *\n * @description\n * The `ngBindTemplate` directive specifies that the element\n * text content should be replaced with the interpolation of the template\n * in the `ngBindTemplate` attribute.\n * Unlike `ngBind`, the `ngBindTemplate` can contain multiple `{{` `}}`\n * expressions. This directive is needed since some HTML elements\n * (such as TITLE and OPTION) cannot contain SPAN elements.\n *\n * @element ANY\n * @param {string} ngBindTemplate template of form\n *   <tt>{{</tt> <tt>expression</tt> <tt>}}</tt> to eval.\n *\n * @example\n * Try it here: enter text in text box and watch the greeting change.\n   <doc:example>\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.salutation = 'Hello';\n           $scope.name = 'World';\n         }\n       </script>\n       <div ng-controller=\"Ctrl\">\n        Salutation: <input type=\"text\" ng-model=\"salutation\"><br>\n        Name: <input type=\"text\" ng-model=\"name\"><br>\n        <pre ng-bind-template=\"{{salutation}} {{name}}!\"></pre>\n       </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-bind', function() {\n         expect(using('.doc-example-live').binding('salutation')).\n           toBe('Hello');\n         expect(using('.doc-example-live').binding('name')).\n           toBe('World');\n         using('.doc-example-live').input('salutation').enter('Greetings');\n         using('.doc-example-live').input('name').enter('user');\n         expect(using('.doc-example-live').binding('salutation')).\n           toBe('Greetings');\n         expect(using('.doc-example-live').binding('name')).\n           toBe('user');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngBindTemplateDirective = ['$interpolate', function($interpolate) {\n  return function(scope, element, attr) {\n    // TODO: move this to scenario runner\n    var interpolateFn = $interpolate(element.attr(attr.$attr.ngBindTemplate));\n    element.addClass('ng-binding').data('$binding', interpolateFn);\n    attr.$observe('ngBindTemplate', function(value) {\n      element.text(value);\n    });\n  }\n}];\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngBindHtmlUnsafe\n *\n * @description\n * Creates a binding that will innerHTML the result of evaluating the `expression` into the current\n * element. *The innerHTML-ed content will not be sanitized!* You should use this directive only if\n * {@link ngSanitize.directive:ngBindHtml ngBindHtml} directive is too\n * restrictive and when you absolutely trust the source of the content you are binding to.\n *\n * See {@link ngSanitize.$sanitize $sanitize} docs for examples.\n *\n * @element ANY\n * @param {expression} ngBindHtmlUnsafe {@link guide/expression Expression} to evaluate.\n */\nvar ngBindHtmlUnsafeDirective = [function() {\n  return function(scope, element, attr) {\n    element.addClass('ng-binding').data('$binding', attr.ngBindHtmlUnsafe);\n    scope.$watch(attr.ngBindHtmlUnsafe, function ngBindHtmlUnsafeWatchAction(value) {\n      element.html(value || '');\n    });\n  };\n}];\n\nfunction classDirective(name, selector) {\n  name = 'ngClass' + name;\n  return ngDirective(function(scope, element, attr) {\n    var oldVal = undefined;\n\n    scope.$watch(attr[name], ngClassWatchAction, true);\n\n    attr.$observe('class', function(value) {\n      var ngClass = scope.$eval(attr[name]);\n      ngClassWatchAction(ngClass, ngClass);\n    });\n\n\n    if (name !== 'ngClass') {\n      scope.$watch('$index', function($index, old$index) {\n        var mod = $index & 1;\n        if (mod !== old$index & 1) {\n          if (mod === selector) {\n            addClass(scope.$eval(attr[name]));\n          } else {\n            removeClass(scope.$eval(attr[name]));\n          }\n        }\n      });\n    }\n\n\n    function ngClassWatchAction(newVal) {\n      if (selector === true || scope.$index % 2 === selector) {\n        if (oldVal && !equals(newVal,oldVal)) {\n          removeClass(oldVal);\n        }\n        addClass(newVal);\n      }\n      oldVal = copy(newVal);\n    }\n\n\n    function removeClass(classVal) {\n      if (isObject(classVal) && !isArray(classVal)) {\n        classVal = map(classVal, function(v, k) { if (v) return k });\n      }\n      element.removeClass(isArray(classVal) ? classVal.join(' ') : classVal);\n    }\n\n\n    function addClass(classVal) {\n      if (isObject(classVal) && !isArray(classVal)) {\n        classVal = map(classVal, function(v, k) { if (v) return k });\n      }\n      if (classVal) {\n        element.addClass(isArray(classVal) ? classVal.join(' ') : classVal);\n      }\n    }\n  });\n}\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClass\n *\n * @description\n * The `ngClass` allows you to set CSS classes on HTML an element, dynamically, by databinding\n * an expression that represents all classes to be added.\n *\n * The directive won't add duplicate classes if a particular class was already set.\n *\n * When the expression changes, the previously added classes are removed and only then the\n * new classes are added.\n *\n * @element ANY\n * @param {expression} ngClass {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class\n *   names, an array, or a map of class names to boolean values. In the case of a map, the\n *   names of the properties whose values are truthy will be added as css classes to the\n *   element.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n      <input type=\"button\" value=\"set\" ng-click=\"myVar='my-class'\">\n      <input type=\"button\" value=\"clear\" ng-click=\"myVar=''\">\n      <br>\n      <span ng-class=\"myVar\">Sample Text</span>\n     </file>\n     <file name=\"style.css\">\n       .my-class {\n         color: red;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class', function() {\n         expect(element('.doc-example-live span').prop('className')).not().\n           toMatch(/my-class/);\n\n         using('.doc-example-live').element(':button:first').click();\n\n         expect(element('.doc-example-live span').prop('className')).\n           toMatch(/my-class/);\n\n         using('.doc-example-live').element(':button:last').click();\n\n         expect(element('.doc-example-live span').prop('className')).not().\n           toMatch(/my-class/);\n       });\n     </file>\n   </example>\n */\nvar ngClassDirective = classDirective('', true);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClassOdd\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except it works in\n * conjunction with `ngRepeat` and takes affect only on odd (even) rows.\n *\n * This directive can be applied only within a scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassOdd {@link guide/expression Expression} to eval. The result\n *   of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}}\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element('.doc-example-live li:first span').prop('className')).\n           toMatch(/odd/);\n         expect(element('.doc-example-live li:last span').prop('className')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassOddDirective = classDirective('Odd', 0);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClassEven\n *\n * @description\n * The `ngClassOdd` and `ngClassEven` directives work exactly as\n * {@link ng.directive:ngClass ngClass}, except it works in\n * conjunction with `ngRepeat` and takes affect only on odd (even) rows.\n *\n * This directive can be applied only within a scope of an\n * {@link ng.directive:ngRepeat ngRepeat}.\n *\n * @element ANY\n * @param {expression} ngClassEven {@link guide/expression Expression} to eval. The\n *   result of the evaluation can be a string representing space delimited class names or an array.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <ol ng-init=\"names=['John', 'Mary', 'Cate', 'Suz']\">\n          <li ng-repeat=\"name in names\">\n           <span ng-class-odd=\"'odd'\" ng-class-even=\"'even'\">\n             {{name}} &nbsp; &nbsp; &nbsp;\n           </span>\n          </li>\n        </ol>\n     </file>\n     <file name=\"style.css\">\n       .odd {\n         color: red;\n       }\n       .even {\n         color: blue;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-class-odd and ng-class-even', function() {\n         expect(element('.doc-example-live li:first span').prop('className')).\n           toMatch(/odd/);\n         expect(element('.doc-example-live li:last span').prop('className')).\n           toMatch(/even/);\n       });\n     </file>\n   </example>\n */\nvar ngClassEvenDirective = classDirective('Even', 1);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngCloak\n *\n * @description\n * The `ngCloak` directive is used to prevent the Angular html template from being briefly\n * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this\n * directive to avoid the undesirable flicker effect caused by the html template display.\n *\n * The directive can be applied to the `<body>` element, but typically a fine-grained application is\n * prefered in order to benefit from progressive rendering of the browser view.\n *\n * `ngCloak` works in cooperation with a css rule that is embedded within `angular.js` and\n *  `angular.min.js` files. Following is the css rule:\n *\n * <pre>\n * [ng\\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {\n *   display: none !important;\n * }\n * </pre>\n *\n * When this css rule is loaded by the browser, all html elements (including their children) that\n * are tagged with the `ng-cloak` directive are hidden. When Angular comes across this directive\n * during the compilation of the template it deletes the `ngCloak` element attribute, which\n * makes the compiled element visible.\n *\n * For the best result, `angular.js` script must be loaded in the head section of the html file;\n * alternatively, the css rule (above) must be included in the external stylesheet of the\n * application.\n *\n * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they\n * cannot match the `[ng\\:cloak]` selector. To work around this limitation, you must add the css\n * class `ngCloak` in addition to `ngCloak` directive as shown in the example below.\n *\n * @element ANY\n *\n * @example\n   <doc:example>\n     <doc:source>\n        <div id=\"template1\" ng-cloak>{{ 'hello' }}</div>\n        <div id=\"template2\" ng-cloak class=\"ng-cloak\">{{ 'hello IE7' }}</div>\n     </doc:source>\n     <doc:scenario>\n       it('should remove the template directive and css class', function() {\n         expect(element('.doc-example-live #template1').attr('ng-cloak')).\n           not().toBeDefined();\n         expect(element('.doc-example-live #template2').attr('ng-cloak')).\n           not().toBeDefined();\n       });\n     </doc:scenario>\n   </doc:example>\n *\n */\nvar ngCloakDirective = ngDirective({\n  compile: function(element, attr) {\n    attr.$set('ngCloak', undefined);\n    element.removeClass('ng-cloak');\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngController\n *\n * @description\n * The `ngController` directive assigns behavior to a scope. This is a key aspect of how angular\n * supports the principles behind the Model-View-Controller design pattern.\n *\n * MVC components in angular:\n *\n * * Model — The Model is data in scope properties; scopes are attached to the DOM.\n * * View — The template (HTML with data bindings) is rendered into the View.\n * * Controller — The `ngController` directive specifies a Controller class; the class has\n *   methods that typically express the business logic behind the application.\n *\n * Note that an alternative way to define controllers is via the {@link ng.$route $route} service.\n *\n * @element ANY\n * @scope\n * @param {expression} ngController Name of a globally accessible constructor function or an\n *     {@link guide/expression expression} that on the current scope evaluates to a\n *     constructor function.\n *\n * @example\n * Here is a simple form for editing user contact information. Adding, removing, clearing, and\n * greeting are methods declared on the $scope by the controller (see source tab). These methods can\n * easily be called from the angular markup. Notice that any changes to the data are automatically\n * reflected in the View without the need for a manual update.\n   <doc:example>\n     <doc:source>\n      <script>\n        function SettingsController($scope) {\n          $scope.name = \"John Smith\";\n          $scope.contacts = [\n            {type:'phone', value:'408 555 1212'},\n            {type:'email', value:'john.smith@example.org'} ];\n\n          $scope.greet = function() {\n           alert(this.name);\n          };\n\n          $scope.addContact = function() {\n           this.contacts.push({type:'email', value:'yourname@example.org'});\n          };\n\n          $scope.removeContact = function(contactToRemove) {\n           var index = this.contacts.indexOf(contactToRemove);\n           this.contacts.splice(index, 1);\n          };\n\n          $scope.clearContact = function(contact) {\n           contact.type = 'phone';\n           contact.value = '';\n          };\n        }\n      </script>\n      <div ng-controller=\"SettingsController\">\n        Name: <input type=\"text\" ng-model=\"name\"/>\n        [ <a href=\"\" ng-click=\"greet()\">greet</a> ]<br/>\n        Contact:\n        <ul>\n          <li ng-repeat=\"contact in contacts\">\n            <select ng-model=\"contact.type\">\n               <option>phone</option>\n               <option>email</option>\n            </select>\n            <input type=\"text\" ng-model=\"contact.value\"/>\n            [ <a href=\"\" ng-click=\"clearContact(contact)\">clear</a>\n            | <a href=\"\" ng-click=\"removeContact(contact)\">X</a> ]\n          </li>\n          <li>[ <a href=\"\" ng-click=\"addContact()\">add</a> ]</li>\n       </ul>\n      </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check controller', function() {\n         expect(element('.doc-example-live div>:input').val()).toBe('John Smith');\n         expect(element('.doc-example-live li:nth-child(1) input').val())\n           .toBe('408 555 1212');\n         expect(element('.doc-example-live li:nth-child(2) input').val())\n           .toBe('john.smith@example.org');\n\n         element('.doc-example-live li:first a:contains(\"clear\")').click();\n         expect(element('.doc-example-live li:first input').val()).toBe('');\n\n         element('.doc-example-live li:last a:contains(\"add\")').click();\n         expect(element('.doc-example-live li:nth-child(3) input').val())\n           .toBe('yourname@example.org');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngControllerDirective = [function() {\n  return {\n    scope: true,\n    controller: '@'\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngCsp\n * @priority 1000\n *\n * @element html\n * @description\n * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.\n * \n * This is necessary when developing things like Google Chrome Extensions.\n * \n * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).\n * For us to be compatible, we just need to implement the \"getterFn\" in $parse without violating\n * any of these restrictions.\n * \n * AngularJS uses `Function(string)` generated functions as a speed optimization. By applying `ngCsp`\n * it is be possible to opt into the CSP compatible mode. When this mode is on AngularJS will\n * evaluate all expressions up to 30% slower than in non-CSP mode, but no security violations will\n * be raised.\n * \n * In order to use this feature put `ngCsp` directive on the root element of the application.\n * \n * @example\n * This example shows how to apply the `ngCsp` directive to the `html` tag.\n   <pre>\n     <!doctype html>\n     <html ng-app ng-csp>\n     ...\n     ...\n     </html>\n   </pre>\n */\n\nvar ngCspDirective = ['$sniffer', function($sniffer) {\n  return {\n    priority: 1000,\n    compile: function() {\n      $sniffer.csp = true;\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngClick\n *\n * @description\n * The ngClick allows you to specify custom behavior when\n * element is clicked.\n *\n * @element ANY\n * @param {expression} ngClick {@link guide/expression Expression} to evaluate upon\n * click. (Event object is available as `$event`)\n *\n * @example\n   <doc:example>\n     <doc:source>\n      <button ng-click=\"count = count + 1\" ng-init=\"count=0\">\n        Increment\n      </button>\n      count: {{count}}\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-click', function() {\n         expect(binding('count')).toBe('0');\n         element('.doc-example-live :button').click();\n         expect(binding('count')).toBe('1');\n       });\n     </doc:scenario>\n   </doc:example>\n */\n/*\n * A directive that allows creation of custom onclick handlers that are defined as angular\n * expressions and are compiled and executed within the current scope.\n *\n * Events that are handled via these handler are always configured not to propagate further.\n */\nvar ngEventDirectives = {};\nforEach(\n  'click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave submit'.split(' '),\n  function(name) {\n    var directiveName = directiveNormalize('ng-' + name);\n    ngEventDirectives[directiveName] = ['$parse', function($parse) {\n      return function(scope, element, attr) {\n        var fn = $parse(attr[directiveName]);\n        element.bind(lowercase(name), function(event) {\n          scope.$apply(function() {\n            fn(scope, {$event:event});\n          });\n        });\n      };\n    }];\n  }\n);\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngDblclick\n *\n * @description\n * The `ngDblclick` directive allows you to specify custom behavior on dblclick event.\n *\n * @element ANY\n * @param {expression} ngDblclick {@link guide/expression Expression} to evaluate upon\n * dblclick. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMousedown\n *\n * @description\n * The ngMousedown directive allows you to specify custom behavior on mousedown event.\n *\n * @element ANY\n * @param {expression} ngMousedown {@link guide/expression Expression} to evaluate upon\n * mousedown. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseup\n *\n * @description\n * Specify custom behavior on mouseup event.\n *\n * @element ANY\n * @param {expression} ngMouseup {@link guide/expression Expression} to evaluate upon\n * mouseup. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseover\n *\n * @description\n * Specify custom behavior on mouseover event.\n *\n * @element ANY\n * @param {expression} ngMouseover {@link guide/expression Expression} to evaluate upon\n * mouseover. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseenter\n *\n * @description\n * Specify custom behavior on mouseenter event.\n *\n * @element ANY\n * @param {expression} ngMouseenter {@link guide/expression Expression} to evaluate upon\n * mouseenter. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMouseleave\n *\n * @description\n * Specify custom behavior on mouseleave event.\n *\n * @element ANY\n * @param {expression} ngMouseleave {@link guide/expression Expression} to evaluate upon\n * mouseleave. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngMousemove\n *\n * @description\n * Specify custom behavior on mousemove event.\n *\n * @element ANY\n * @param {expression} ngMousemove {@link guide/expression Expression} to evaluate upon\n * mousemove. (Event object is available as `$event`)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngKeydown\n *\n * @description\n * Specify custom behavior on keydown event.\n *\n * @element ANY\n * @param {expression} ngKeydown {@link guide/expression Expression} to evaluate upon\n * keydown. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngKeyup\n *\n * @description\n * Specify custom behavior on keyup event.\n *\n * @element ANY\n * @param {expression} ngKeyup {@link guide/expression Expression} to evaluate upon\n * keyup. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngKeypress\n *\n * @description\n * Specify custom behavior on keypress event.\n *\n * @element ANY\n * @param {expression} ngKeypress {@link guide/expression Expression} to evaluate upon\n * keypress. (Event object is available as `$event` and can be interrogated for keyCode, altKey, etc.)\n *\n * @example\n * See {@link ng.directive:ngClick ngClick}\n */\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSubmit\n *\n * @description\n * Enables binding angular expressions to onsubmit events.\n *\n * Additionally it prevents the default action (which for form means sending the request to the\n * server and reloading the current page) **but only if the form does not contain an `action`\n * attribute**.\n *\n * @element form\n * @param {expression} ngSubmit {@link guide/expression Expression} to eval. (Event object is available as `$event`)\n *\n * @example\n   <doc:example>\n     <doc:source>\n      <script>\n        function Ctrl($scope) {\n          $scope.list = [];\n          $scope.text = 'hello';\n          $scope.submit = function() {\n            if (this.text) {\n              this.list.push(this.text);\n              this.text = '';\n            }\n          };\n        }\n      </script>\n      <form ng-submit=\"submit()\" ng-controller=\"Ctrl\">\n        Enter text and hit enter:\n        <input type=\"text\" ng-model=\"text\" name=\"text\" />\n        <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n        <pre>list={{list}}</pre>\n      </form>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-submit', function() {\n         expect(binding('list')).toBe('[]');\n         element('.doc-example-live #submit').click();\n         expect(binding('list')).toBe('[\"hello\"]');\n         expect(input('text').val()).toBe('');\n       });\n       it('should ignore empty strings', function() {\n         expect(binding('list')).toBe('[]');\n         element('.doc-example-live #submit').click();\n         element('.doc-example-live #submit').click();\n         expect(binding('list')).toBe('[\"hello\"]');\n       });\n     </doc:scenario>\n   </doc:example>\n */\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngInclude\n * @restrict ECA\n *\n * @description\n * Fetches, compiles and includes an external HTML fragment.\n *\n * Keep in mind that Same Origin Policy applies to included resources\n * (e.g. ngInclude won't work for cross-domain requests on all browsers and for\n *  file:// access on some browsers).\n *\n * @scope\n *\n * @param {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,\n *                 make sure you wrap it in quotes, e.g. `src=\"'myPartialTemplate.html'\"`.\n * @param {string=} onload Expression to evaluate when a new partial is loaded.\n *\n * @param {string=} autoscroll Whether `ngInclude` should call {@link ng.$anchorScroll\n *                  $anchorScroll} to scroll the viewport after the content is loaded.\n *\n *                  - If the attribute is not set, disable scrolling.\n *                  - If the attribute is set without value, enable scrolling.\n *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.\n *\n * @example\n  <example>\n    <file name=\"index.html\">\n     <div ng-controller=\"Ctrl\">\n       <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n        <option value=\"\">(blank)</option>\n       </select>\n       url of the template: <tt>{{template.url}}</tt>\n       <hr/>\n       <div ng-include src=\"template.url\"></div>\n     </div>\n    </file>\n    <file name=\"script.js\">\n      function Ctrl($scope) {\n        $scope.templates =\n          [ { name: 'template1.html', url: 'template1.html'}\n          , { name: 'template2.html', url: 'template2.html'} ];\n        $scope.template = $scope.templates[0];\n      }\n     </file>\n    <file name=\"template1.html\">\n      Content of template1.html\n    </file>\n    <file name=\"template2.html\">\n      Content of template2.html\n    </file>\n    <file name=\"scenario.js\">\n      it('should load template1.html', function() {\n       expect(element('.doc-example-live [ng-include]').text()).\n         toMatch(/Content of template1.html/);\n      });\n      it('should load template2.html', function() {\n       select('template').option('1');\n       expect(element('.doc-example-live [ng-include]').text()).\n         toMatch(/Content of template2.html/);\n      });\n      it('should change to blank', function() {\n       select('template').option('');\n       expect(element('.doc-example-live [ng-include]').text()).toEqual('');\n      });\n    </file>\n  </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ng.directive:ngInclude#$includeContentLoaded\n * @eventOf ng.directive:ngInclude\n * @eventType emit on the current ngInclude scope\n * @description\n * Emitted every time the ngInclude content is reloaded.\n */\nvar ngIncludeDirective = ['$http', '$templateCache', '$anchorScroll', '$compile',\n                  function($http,   $templateCache,   $anchorScroll,   $compile) {\n  return {\n    restrict: 'ECA',\n    terminal: true,\n    compile: function(element, attr) {\n      var srcExp = attr.ngInclude || attr.src,\n          onloadExp = attr.onload || '',\n          autoScrollExp = attr.autoscroll;\n\n      return function(scope, element) {\n        var changeCounter = 0,\n            childScope;\n\n        var clearContent = function() {\n          if (childScope) {\n            childScope.$destroy();\n            childScope = null;\n          }\n\n          element.html('');\n        };\n\n        scope.$watch(srcExp, function ngIncludeWatchAction(src) {\n          var thisChangeId = ++changeCounter;\n\n          if (src) {\n            $http.get(src, {cache: $templateCache}).success(function(response) {\n              if (thisChangeId !== changeCounter) return;\n\n              if (childScope) childScope.$destroy();\n              childScope = scope.$new();\n\n              element.html(response);\n              $compile(element.contents())(childScope);\n\n              if (isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {\n                $anchorScroll();\n              }\n\n              childScope.$emit('$includeContentLoaded');\n              scope.$eval(onloadExp);\n            }).error(function() {\n              if (thisChangeId === changeCounter) clearContent();\n            });\n          } else clearContent();\n        });\n      };\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngInit\n *\n * @description\n * The `ngInit` directive specifies initialization tasks to be executed\n *  before the template enters execution mode during bootstrap.\n *\n * @element ANY\n * @param {expression} ngInit {@link guide/expression Expression} to eval.\n *\n * @example\n   <doc:example>\n     <doc:source>\n    <div ng-init=\"greeting='Hello'; person='World'\">\n      {{greeting}} {{person}}!\n    </div>\n     </doc:source>\n     <doc:scenario>\n       it('should check greeting', function() {\n         expect(binding('greeting')).toBe('Hello');\n         expect(binding('person')).toBe('World');\n       });\n     </doc:scenario>\n   </doc:example>\n */\nvar ngInitDirective = ngDirective({\n  compile: function() {\n    return {\n      pre: function(scope, element, attrs) {\n        scope.$eval(attrs.ngInit);\n      }\n    }\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngNonBindable\n * @priority 1000\n *\n * @description\n * Sometimes it is necessary to write code which looks like bindings but which should be left alone\n * by angular. Use `ngNonBindable` to make angular ignore a chunk of HTML.\n *\n * @element ANY\n *\n * @example\n * In this example there are two location where a simple binding (`{{}}`) is present, but the one\n * wrapped in `ngNonBindable` is left alone.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <div>Normal: {{1 + 2}}</div>\n        <div ng-non-bindable>Ignored: {{1 + 2}}</div>\n      </doc:source>\n      <doc:scenario>\n       it('should check ng-non-bindable', function() {\n         expect(using('.doc-example-live').binding('1 + 2')).toBe('3');\n         expect(using('.doc-example-live').element('div:last').text()).\n           toMatch(/1 \\+ 2/);\n       });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngNonBindableDirective = ngDirective({ terminal: true, priority: 1000 });\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngPluralize\n * @restrict EA\n *\n * @description\n * # Overview\n * `ngPluralize` is a directive that displays messages according to en-US localization rules.\n * These rules are bundled with angular.js, but can be overridden\n * (see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\n * by specifying the mappings between\n * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n * plural categories} and the strings to be displayed.\n *\n * # Plural categories and explicit number rules\n * There are two\n * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n * plural categories} in Angular's default en-US locale: \"one\" and \"other\".\n *\n * While a pural category may match many numbers (for example, in en-US locale, \"other\" can match\n * any number that is not 1), an explicit number rule can only match one number. For example, the\n * explicit number rule for \"3\" matches the number 3. There are examples of plural categories\n * and explicit number rules throughout the rest of this documentation.\n *\n * # Configuring ngPluralize\n * You configure ngPluralize by providing 2 attributes: `count` and `when`.\n * You can also provide an optional attribute, `offset`.\n *\n * The value of the `count` attribute can be either a string or an {@link guide/expression\n * Angular expression}; these are evaluated on the current scope for its bound value.\n *\n * The `when` attribute specifies the mappings between plural categories and the actual\n * string to be displayed. The value of the attribute should be a JSON object.\n *\n * The following example shows how to configure ngPluralize:\n *\n * <pre>\n * <ng-pluralize count=\"personCount\"\n                 when=\"{'0': 'Nobody is viewing.',\n *                      'one': '1 person is viewing.',\n *                      'other': '{} people are viewing.'}\">\n * </ng-pluralize>\n *</pre>\n *\n * In the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\n * specify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\n * would be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\n * other numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\n * show \"a dozen people are viewing\".\n *\n * You can use a set of closed braces(`{}`) as a placeholder for the number that you want substituted\n * into pluralized strings. In the previous example, Angular will replace `{}` with\n * <span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\n * for <span ng-non-bindable>{{numberExpression}}</span>.\n *\n * # Configuring ngPluralize with offset\n * The `offset` attribute allows further customization of pluralized text, which can result in\n * a better user experience. For example, instead of the message \"4 people are viewing this document\",\n * you might display \"John, Kate and 2 others are viewing this document\".\n * The offset attribute allows you to offset a number by any desired value.\n * Let's take a look at an example:\n *\n * <pre>\n * <ng-pluralize count=\"personCount\" offset=2\n *               when=\"{'0': 'Nobody is viewing.',\n *                      '1': '{{person1}} is viewing.',\n *                      '2': '{{person1}} and {{person2}} are viewing.',\n *                      'one': '{{person1}}, {{person2}} and one other person are viewing.',\n *                      'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n * </ng-pluralize>\n * </pre>\n *\n * Notice that we are still using two plural categories(one, other), but we added\n * three explicit number rules 0, 1 and 2.\n * When one person, perhaps John, views the document, \"John is viewing\" will be shown.\n * When three people view the document, no explicit number rule is found, so\n * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\n * In this case, plural category 'one' is matched and \"John, Marry and one other person are viewing\"\n * is shown.\n *\n * Note that when you specify offsets, you must provide explicit number rules for\n * numbers from 0 up to and including the offset. If you use an offset of 3, for example,\n * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\n * plural categories \"one\" and \"other\".\n *\n * @param {string|expression} count The variable to be bounded to.\n * @param {string} when The mapping between plural category to its correspoding strings.\n * @param {number=} offset Offset to deduct from the total number.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n          function Ctrl($scope) {\n            $scope.person1 = 'Igor';\n            $scope.person2 = 'Misko';\n            $scope.personCount = 1;\n          }\n        </script>\n        <div ng-controller=\"Ctrl\">\n          Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /><br/>\n          Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /><br/>\n          Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /><br/>\n\n          <!--- Example with simple pluralization rules for en locale --->\n          Without Offset:\n          <ng-pluralize count=\"personCount\"\n                        when=\"{'0': 'Nobody is viewing.',\n                               'one': '1 person is viewing.',\n                               'other': '{} people are viewing.'}\">\n          </ng-pluralize><br>\n\n          <!--- Example with offset --->\n          With Offset(2):\n          <ng-pluralize count=\"personCount\" offset=2\n                        when=\"{'0': 'Nobody is viewing.',\n                               '1': '{{person1}} is viewing.',\n                               '2': '{{person1}} and {{person2}} are viewing.',\n                               'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                               'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n          </ng-pluralize>\n        </div>\n      </doc:source>\n      <doc:scenario>\n        it('should show correct pluralized string', function() {\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                             toBe('1 person is viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                                                toBe('Igor is viewing.');\n\n          using('.doc-example-live').input('personCount').enter('0');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                               toBe('Nobody is viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                                              toBe('Nobody is viewing.');\n\n          using('.doc-example-live').input('personCount').enter('2');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('2 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor and Misko are viewing.');\n\n          using('.doc-example-live').input('personCount').enter('3');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('3 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor, Misko and one other person are viewing.');\n\n          using('.doc-example-live').input('personCount').enter('4');\n          expect(element('.doc-example-live ng-pluralize:first').text()).\n                                            toBe('4 people are viewing.');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n                              toBe('Igor, Misko and 2 other people are viewing.');\n        });\n\n        it('should show data-binded names', function() {\n          using('.doc-example-live').input('personCount').enter('4');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n              toBe('Igor, Misko and 2 other people are viewing.');\n\n          using('.doc-example-live').input('person1').enter('Di');\n          using('.doc-example-live').input('person2').enter('Vojta');\n          expect(element('.doc-example-live ng-pluralize:last').text()).\n              toBe('Di, Vojta and 2 other people are viewing.');\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngPluralizeDirective = ['$locale', '$interpolate', function($locale, $interpolate) {\n  var BRACE = /{}/g;\n  return {\n    restrict: 'EA',\n    link: function(scope, element, attr) {\n      var numberExp = attr.count,\n          whenExp = element.attr(attr.$attr.when), // this is because we have {{}} in attrs\n          offset = attr.offset || 0,\n          whens = scope.$eval(whenExp),\n          whensExpFns = {},\n          startSymbol = $interpolate.startSymbol(),\n          endSymbol = $interpolate.endSymbol();\n\n      forEach(whens, function(expression, key) {\n        whensExpFns[key] =\n          $interpolate(expression.replace(BRACE, startSymbol + numberExp + '-' +\n            offset + endSymbol));\n      });\n\n      scope.$watch(function ngPluralizeWatch() {\n        var value = parseFloat(scope.$eval(numberExp));\n\n        if (!isNaN(value)) {\n          //if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,\n          //check it against pluralization rules in $locale service\n          if (!(value in whens)) value = $locale.pluralCat(value - offset);\n           return whensExpFns[value](scope, element, true);\n        } else {\n          return '';\n        }\n      }, function ngPluralizeWatchAction(newVal) {\n        element.text(newVal);\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngRepeat\n *\n * @description\n * The `ngRepeat` directive instantiates a template once per item from a collection. Each template\n * instance gets its own scope, where the given loop variable is set to the current collection item,\n * and `$index` is set to the item index or key.\n *\n * Special properties are exposed on the local scope of each template instance, including:\n *\n *   * `$index` – `{number}` – iterator offset of the repeated element (0..length-1)\n *   * `$first` – `{boolean}` – true if the repeated element is first in the iterator.\n *   * `$middle` – `{boolean}` – true if the repeated element is between the first and last in the iterator.\n *   * `$last` – `{boolean}` – true if the repeated element is last in the iterator.\n *\n *\n * @element ANY\n * @scope\n * @priority 1000\n * @param {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. Two\n *   formats are currently supported:\n *\n *   * `variable in expression` – where variable is the user defined loop variable and `expression`\n *     is a scope expression giving the collection to enumerate.\n *\n *     For example: `track in cd.tracks`.\n *\n *   * `(key, value) in expression` – where `key` and `value` can be any user defined identifiers,\n *     and `expression` is the scope expression giving the collection to enumerate.\n *\n *     For example: `(name, age) in {'adam':10, 'amalie':12}`.\n *\n * @example\n * This example initializes the scope to a list of names and\n * then uses `ngRepeat` to display every person:\n    <doc:example>\n      <doc:source>\n        <div ng-init=\"friends = [{name:'John', age:25}, {name:'Mary', age:28}]\">\n          I have {{friends.length}} friends. They are:\n          <ul>\n            <li ng-repeat=\"friend in friends\">\n              [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.\n            </li>\n          </ul>\n        </div>\n      </doc:source>\n      <doc:scenario>\n         it('should check ng-repeat', function() {\n           var r = using('.doc-example-live').repeater('ul li');\n           expect(r.count()).toBe(2);\n           expect(r.row(0)).toEqual([\"1\",\"John\",\"25\"]);\n           expect(r.row(1)).toEqual([\"2\",\"Mary\",\"28\"]);\n         });\n      </doc:scenario>\n    </doc:example>\n */\nvar ngRepeatDirective = ngDirective({\n  transclude: 'element',\n  priority: 1000,\n  terminal: true,\n  compile: function(element, attr, linker) {\n    return function(scope, iterStartElement, attr){\n      var expression = attr.ngRepeat;\n      var match = expression.match(/^\\s*(.+)\\s+in\\s+(.*)\\s*$/),\n        lhs, rhs, valueIdent, keyIdent;\n      if (! match) {\n        throw Error(\"Expected ngRepeat in form of '_item_ in _collection_' but got '\" +\n          expression + \"'.\");\n      }\n      lhs = match[1];\n      rhs = match[2];\n      match = lhs.match(/^(?:([\\$\\w]+)|\\(([\\$\\w]+)\\s*,\\s*([\\$\\w]+)\\))$/);\n      if (!match) {\n        throw Error(\"'item' in 'item in collection' should be identifier or (key, value) but got '\" +\n            lhs + \"'.\");\n      }\n      valueIdent = match[3] || match[1];\n      keyIdent = match[2];\n\n      // Store a list of elements from previous run. This is a hash where key is the item from the\n      // iterator, and the value is an array of objects with following properties.\n      //   - scope: bound scope\n      //   - element: previous element.\n      //   - index: position\n      // We need an array of these objects since the same object can be returned from the iterator.\n      // We expect this to be a rare case.\n      var lastOrder = new HashQueueMap();\n\n      scope.$watch(function ngRepeatWatch(scope){\n        var index, length,\n            collection = scope.$eval(rhs),\n            cursor = iterStartElement,     // current position of the node\n            // Same as lastOrder but it has the current state. It will become the\n            // lastOrder on the next iteration.\n            nextOrder = new HashQueueMap(),\n            arrayBound,\n            childScope,\n            key, value, // key/value of iteration\n            array,\n            last;       // last object information {scope, element, index}\n\n\n\n        if (!isArray(collection)) {\n          // if object, extract keys, sort them and use to determine order of iteration over obj props\n          array = [];\n          for(key in collection) {\n            if (collection.hasOwnProperty(key) && key.charAt(0) != '$') {\n              array.push(key);\n            }\n          }\n          array.sort();\n        } else {\n          array = collection || [];\n        }\n\n        arrayBound = array.length-1;\n\n        // we are not using forEach for perf reasons (trying to avoid #call)\n        for (index = 0, length = array.length; index < length; index++) {\n          key = (collection === array) ? index : array[index];\n          value = collection[key];\n\n          last = lastOrder.shift(value);\n\n          if (last) {\n            // if we have already seen this object, then we need to reuse the\n            // associated scope/element\n            childScope = last.scope;\n            nextOrder.push(value, last);\n\n            if (index === last.index) {\n              // do nothing\n              cursor = last.element;\n            } else {\n              // existing item which got moved\n              last.index = index;\n              // This may be a noop, if the element is next, but I don't know of a good way to\n              // figure this out,  since it would require extra DOM access, so let's just hope that\n              // the browsers realizes that it is noop, and treats it as such.\n              cursor.after(last.element);\n              cursor = last.element;\n            }\n          } else {\n            // new item which we don't know about\n            childScope = scope.$new();\n          }\n\n          childScope[valueIdent] = value;\n          if (keyIdent) childScope[keyIdent] = key;\n          childScope.$index = index;\n\n          childScope.$first = (index === 0);\n          childScope.$last = (index === arrayBound);\n          childScope.$middle = !(childScope.$first || childScope.$last);\n\n          if (!last) {\n            linker(childScope, function(clone){\n              cursor.after(clone);\n              last = {\n                  scope: childScope,\n                  element: (cursor = clone),\n                  index: index\n                };\n              nextOrder.push(value, last);\n            });\n          }\n        }\n\n        //shrink children\n        for (key in lastOrder) {\n          if (lastOrder.hasOwnProperty(key)) {\n            array = lastOrder[key];\n            while(array.length) {\n              value = array.pop();\n              value.element.remove();\n              value.scope.$destroy();\n            }\n          }\n        }\n\n        lastOrder = nextOrder;\n      });\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngShow\n *\n * @description\n * The `ngShow` and `ngHide` directives show or hide a portion of the DOM tree (HTML)\n * conditionally.\n *\n * @element ANY\n * @param {expression} ngShow If the {@link guide/expression expression} is truthy\n *     then the element is shown or hidden respectively.\n *\n * @example\n   <doc:example>\n     <doc:source>\n        Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        Show: <span ng-show=\"checked\">I show up when your checkbox is checked.</span> <br/>\n        Hide: <span ng-hide=\"checked\">I hide when your checkbox is checked.</span>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-show / ng-hide', function() {\n         expect(element('.doc-example-live span:first:hidden').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:visible').count()).toEqual(1);\n\n         input('checked').check();\n\n         expect(element('.doc-example-live span:first:visible').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:hidden').count()).toEqual(1);\n       });\n     </doc:scenario>\n   </doc:example>\n */\n//TODO(misko): refactor to remove element from the DOM\nvar ngShowDirective = ngDirective(function(scope, element, attr){\n  scope.$watch(attr.ngShow, function ngShowWatchAction(value){\n    element.css('display', toBoolean(value) ? '' : 'none');\n  });\n});\n\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngHide\n *\n * @description\n * The `ngHide` and `ngShow` directives hide or show a portion of the DOM tree (HTML)\n * conditionally.\n *\n * @element ANY\n * @param {expression} ngHide If the {@link guide/expression expression} is truthy then\n *     the element is shown or hidden respectively.\n *\n * @example\n   <doc:example>\n     <doc:source>\n        Click me: <input type=\"checkbox\" ng-model=\"checked\"><br/>\n        Show: <span ng-show=\"checked\">I show up when you checkbox is checked?</span> <br/>\n        Hide: <span ng-hide=\"checked\">I hide when you checkbox is checked?</span>\n     </doc:source>\n     <doc:scenario>\n       it('should check ng-show / ng-hide', function() {\n         expect(element('.doc-example-live span:first:hidden').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:visible').count()).toEqual(1);\n\n         input('checked').check();\n\n         expect(element('.doc-example-live span:first:visible').count()).toEqual(1);\n         expect(element('.doc-example-live span:last:hidden').count()).toEqual(1);\n       });\n     </doc:scenario>\n   </doc:example>\n */\n//TODO(misko): refactor to remove element from the DOM\nvar ngHideDirective = ngDirective(function(scope, element, attr){\n  scope.$watch(attr.ngHide, function ngHideWatchAction(value){\n    element.css('display', toBoolean(value) ? 'none' : '');\n  });\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngStyle\n *\n * @description\n * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.\n *\n * @element ANY\n * @param {expression} ngStyle {@link guide/expression Expression} which evals to an\n *      object whose keys are CSS style names and values are corresponding values for those CSS\n *      keys.\n *\n * @example\n   <example>\n     <file name=\"index.html\">\n        <input type=\"button\" value=\"set\" ng-click=\"myStyle={color:'red'}\">\n        <input type=\"button\" value=\"clear\" ng-click=\"myStyle={}\">\n        <br/>\n        <span ng-style=\"myStyle\">Sample Text</span>\n        <pre>myStyle={{myStyle}}</pre>\n     </file>\n     <file name=\"style.css\">\n       span {\n         color: black;\n       }\n     </file>\n     <file name=\"scenario.js\">\n       it('should check ng-style', function() {\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(0, 0, 0)');\n         element('.doc-example-live :button[value=set]').click();\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(255, 0, 0)');\n         element('.doc-example-live :button[value=clear]').click();\n         expect(element('.doc-example-live span').css('color')).toBe('rgb(0, 0, 0)');\n       });\n     </file>\n   </example>\n */\nvar ngStyleDirective = ngDirective(function(scope, element, attr) {\n  scope.$watch(attr.ngStyle, function ngStyleWatchAction(newStyles, oldStyles) {\n    if (oldStyles && (newStyles !== oldStyles)) {\n      forEach(oldStyles, function(val, style) { element.css(style, '');});\n    }\n    if (newStyles) element.css(newStyles);\n  }, true);\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngSwitch\n * @restrict EA\n *\n * @description\n * Conditionally change the DOM structure.\n *\n * @usage\n * <ANY ng-switch=\"expression\">\n *   <ANY ng-switch-when=\"matchValue1\">...</ANY>\n *   <ANY ng-switch-when=\"matchValue2\">...</ANY>\n *   ...\n *   <ANY ng-switch-default>...</ANY>\n * </ANY>\n *\n * @scope\n * @param {*} ngSwitch|on expression to match against <tt>ng-switch-when</tt>.\n * @paramDescription\n * On child elments add:\n *\n * * `ngSwitchWhen`: the case statement to match against. If match then this\n *   case will be displayed.\n * * `ngSwitchDefault`: the default case when no other casses match.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n          function Ctrl($scope) {\n            $scope.items = ['settings', 'home', 'other'];\n            $scope.selection = $scope.items[0];\n          }\n        </script>\n        <div ng-controller=\"Ctrl\">\n          <select ng-model=\"selection\" ng-options=\"item for item in items\">\n          </select>\n          <tt>selection={{selection}}</tt>\n          <hr/>\n          <div ng-switch on=\"selection\" >\n            <div ng-switch-when=\"settings\">Settings Div</div>\n            <span ng-switch-when=\"home\">Home Span</span>\n            <span ng-switch-default>default</span>\n          </div>\n        </div>\n      </doc:source>\n      <doc:scenario>\n        it('should start in settings', function() {\n         expect(element('.doc-example-live [ng-switch]').text()).toMatch(/Settings Div/);\n        });\n        it('should change to home', function() {\n         select('selection').option('home');\n         expect(element('.doc-example-live [ng-switch]').text()).toMatch(/Home Span/);\n        });\n        it('should select deafault', function() {\n         select('selection').option('other');\n         expect(element('.doc-example-live [ng-switch]').text()).toMatch(/default/);\n        });\n      </doc:scenario>\n    </doc:example>\n */\nvar NG_SWITCH = 'ng-switch';\nvar ngSwitchDirective = valueFn({\n  restrict: 'EA',\n  require: 'ngSwitch',\n  // asks for $scope to fool the BC controller module\n  controller: ['$scope', function ngSwitchController() {\n    this.cases = {};\n  }],\n  link: function(scope, element, attr, ctrl) {\n    var watchExpr = attr.ngSwitch || attr.on,\n        selectedTransclude,\n        selectedElement,\n        selectedScope;\n\n    scope.$watch(watchExpr, function ngSwitchWatchAction(value) {\n      if (selectedElement) {\n        selectedScope.$destroy();\n        selectedElement.remove();\n        selectedElement = selectedScope = null;\n      }\n      if ((selectedTransclude = ctrl.cases['!' + value] || ctrl.cases['?'])) {\n        scope.$eval(attr.change);\n        selectedScope = scope.$new();\n        selectedTransclude(selectedScope, function(caseElement) {\n          selectedElement = caseElement;\n          element.append(caseElement);\n        });\n      }\n    });\n  }\n});\n\nvar ngSwitchWhenDirective = ngDirective({\n  transclude: 'element',\n  priority: 500,\n  require: '^ngSwitch',\n  compile: function(element, attrs, transclude) {\n    return function(scope, element, attr, ctrl) {\n      ctrl.cases['!' + attrs.ngSwitchWhen] = transclude;\n    };\n  }\n});\n\nvar ngSwitchDefaultDirective = ngDirective({\n  transclude: 'element',\n  priority: 500,\n  require: '^ngSwitch',\n  compile: function(element, attrs, transclude) {\n    return function(scope, element, attr, ctrl) {\n      ctrl.cases['?'] = transclude;\n    };\n  }\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngTransclude\n *\n * @description\n * Insert the transcluded DOM here.\n *\n * @element ANY\n *\n * @example\n   <doc:example module=\"transclude\">\n     <doc:source>\n       <script>\n         function Ctrl($scope) {\n           $scope.title = 'Lorem Ipsum';\n           $scope.text = 'Neque porro quisquam est qui dolorem ipsum quia dolor...';\n         }\n\n         angular.module('transclude', [])\n          .directive('pane', function(){\n             return {\n               restrict: 'E',\n               transclude: true,\n               scope: { title:'@' },\n               template: '<div style=\"border: 1px solid black;\">' +\n                           '<div style=\"background-color: gray\">{{title}}</div>' +\n                           '<div ng-transclude></div>' +\n                         '</div>'\n             };\n         });\n       </script>\n       <div ng-controller=\"Ctrl\">\n         <input ng-model=\"title\"><br>\n         <textarea ng-model=\"text\"></textarea> <br/>\n         <pane title=\"{{title}}\">{{text}}</pane>\n       </div>\n     </doc:source>\n     <doc:scenario>\n        it('should have transcluded', function() {\n          input('title').enter('TITLE');\n          input('text').enter('TEXT');\n          expect(binding('title')).toEqual('TITLE');\n          expect(binding('text')).toEqual('TEXT');\n        });\n     </doc:scenario>\n   </doc:example>\n *\n */\nvar ngTranscludeDirective = ngDirective({\n  controller: ['$transclude', '$element', function($transclude, $element) {\n    $transclude(function(clone) {\n      $element.append(clone);\n    });\n  }]\n});\n\n/**\n * @ngdoc directive\n * @name ng.directive:ngView\n * @restrict ECA\n *\n * @description\n * # Overview\n * `ngView` is a directive that complements the {@link ng.$route $route} service by\n * including the rendered template of the current route into the main layout (`index.html`) file.\n * Every time the current route changes, the included view changes with it according to the\n * configuration of the `$route` service.\n *\n * @scope\n * @example\n    <example module=\"ngView\">\n      <file name=\"index.html\">\n        <div ng-controller=\"MainCntl\">\n          Choose:\n          <a href=\"Book/Moby\">Moby</a> |\n          <a href=\"Book/Moby/ch/1\">Moby: Ch1</a> |\n          <a href=\"Book/Gatsby\">Gatsby</a> |\n          <a href=\"Book/Gatsby/ch/4?key=value\">Gatsby: Ch4</a> |\n          <a href=\"Book/Scarlet\">Scarlet Letter</a><br/>\n\n          <div ng-view></div>\n          <hr />\n\n          <pre>$location.path() = {{$location.path()}}</pre>\n          <pre>$route.current.templateUrl = {{$route.current.templateUrl}}</pre>\n          <pre>$route.current.params = {{$route.current.params}}</pre>\n          <pre>$route.current.scope.name = {{$route.current.scope.name}}</pre>\n          <pre>$routeParams = {{$routeParams}}</pre>\n        </div>\n      </file>\n\n      <file name=\"book.html\">\n        controller: {{name}}<br />\n        Book Id: {{params.bookId}}<br />\n      </file>\n\n      <file name=\"chapter.html\">\n        controller: {{name}}<br />\n        Book Id: {{params.bookId}}<br />\n        Chapter Id: {{params.chapterId}}\n      </file>\n\n      <file name=\"script.js\">\n        angular.module('ngView', [], function($routeProvider, $locationProvider) {\n          $routeProvider.when('/Book/:bookId', {\n            templateUrl: 'book.html',\n            controller: BookCntl\n          });\n          $routeProvider.when('/Book/:bookId/ch/:chapterId', {\n            templateUrl: 'chapter.html',\n            controller: ChapterCntl\n          });\n\n          // configure html5 to get links working on jsfiddle\n          $locationProvider.html5Mode(true);\n        });\n\n        function MainCntl($scope, $route, $routeParams, $location) {\n          $scope.$route = $route;\n          $scope.$location = $location;\n          $scope.$routeParams = $routeParams;\n        }\n\n        function BookCntl($scope, $routeParams) {\n          $scope.name = \"BookCntl\";\n          $scope.params = $routeParams;\n        }\n\n        function ChapterCntl($scope, $routeParams) {\n          $scope.name = \"ChapterCntl\";\n          $scope.params = $routeParams;\n        }\n      </file>\n\n      <file name=\"scenario.js\">\n        it('should load and compile correct template', function() {\n          element('a:contains(\"Moby: Ch1\")').click();\n          var content = element('.doc-example-live [ng-view]').text();\n          expect(content).toMatch(/controller\\: ChapterCntl/);\n          expect(content).toMatch(/Book Id\\: Moby/);\n          expect(content).toMatch(/Chapter Id\\: 1/);\n\n          element('a:contains(\"Scarlet\")').click();\n          content = element('.doc-example-live [ng-view]').text();\n          expect(content).toMatch(/controller\\: BookCntl/);\n          expect(content).toMatch(/Book Id\\: Scarlet/);\n        });\n      </file>\n    </example>\n */\n\n\n/**\n * @ngdoc event\n * @name ng.directive:ngView#$viewContentLoaded\n * @eventOf ng.directive:ngView\n * @eventType emit on the current ngView scope\n * @description\n * Emitted every time the ngView content is reloaded.\n */\nvar ngViewDirective = ['$http', '$templateCache', '$route', '$anchorScroll', '$compile',\n                       '$controller',\n               function($http,   $templateCache,   $route,   $anchorScroll,   $compile,\n                        $controller) {\n  return {\n    restrict: 'ECA',\n    terminal: true,\n    link: function(scope, element, attr) {\n      var lastScope,\n          onloadExp = attr.onload || '';\n\n      scope.$on('$routeChangeSuccess', update);\n      update();\n\n\n      function destroyLastScope() {\n        if (lastScope) {\n          lastScope.$destroy();\n          lastScope = null;\n        }\n      }\n\n      function clearContent() {\n        element.html('');\n        destroyLastScope();\n      }\n\n      function update() {\n        var locals = $route.current && $route.current.locals,\n            template = locals && locals.$template;\n\n        if (template) {\n          element.html(template);\n          destroyLastScope();\n\n          var link = $compile(element.contents()),\n              current = $route.current,\n              controller;\n\n          lastScope = current.scope = scope.$new();\n          if (current.controller) {\n            locals.$scope = lastScope;\n            controller = $controller(current.controller, locals);\n            element.children().data('$ngControllerController', controller);\n          }\n\n          link(lastScope);\n          lastScope.$emit('$viewContentLoaded');\n          lastScope.$eval(onloadExp);\n\n          // $anchorScroll might listen on event...\n          $anchorScroll();\n        } else {\n          clearContent();\n        }\n      }\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:script\n *\n * @description\n * Load content of a script tag, with type `text/ng-template`, into `$templateCache`, so that the\n * template can be used by `ngInclude`, `ngView` or directive templates.\n *\n * @restrict E\n * @param {'text/ng-template'} type must be set to `'text/ng-template'`\n *\n * @example\n  <doc:example>\n    <doc:source>\n      <script type=\"text/ng-template\" id=\"/tpl.html\">\n        Content of the template.\n      </script>\n\n      <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n      <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n    </doc:source>\n    <doc:scenario>\n      it('should load template defined inside script tag', function() {\n        element('#tpl-link').click();\n        expect(element('#tpl-content').text()).toMatch(/Content of the template/);\n      });\n    </doc:scenario>\n  </doc:example>\n */\nvar scriptDirective = ['$templateCache', function($templateCache) {\n  return {\n    restrict: 'E',\n    terminal: true,\n    compile: function(element, attr) {\n      if (attr.type == 'text/ng-template') {\n        var templateUrl = attr.id,\n            // IE is not consistent, in scripts we have to read .text but in other nodes we have to read .textContent\n            text = element[0].text;\n\n        $templateCache.put(templateUrl, text);\n      }\n    }\n  };\n}];\n\n/**\n * @ngdoc directive\n * @name ng.directive:select\n * @restrict E\n *\n * @description\n * HTML `SELECT` element with angular data-binding.\n *\n * # `ngOptions`\n *\n * Optionally `ngOptions` attribute can be used to dynamically generate a list of `<option>`\n * elements for a `<select>` element using an array or an object obtained by evaluating the\n * `ngOptions` expression.\n *\n * When an item in the `<select>` menu is selected, the value of array element or object property\n * represented by the selected option will be bound to the model identified by the `ngModel`\n * directive of the parent select element.\n *\n * Optionally, a single hard-coded `<option>` element, with the value set to an empty string, can\n * be nested into the `<select>` element. This element will then represent `null` or \"not selected\"\n * option. See example below for demonstration.\n *\n * Note: `ngOptions` provides iterator facility for `<option>` element which should be used instead\n * of {@link ng.directive:ngRepeat ngRepeat} when you want the\n * `select` model to be bound to a non-string value. This is because an option element can currently\n * be bound to string values only.\n *\n * @param {string} ngModel Assignable angular expression to data-bind to.\n * @param {string=} name Property name of the form under which the control is published.\n * @param {string=} required The control is considered valid only if value is entered.\n * @param {string=} ngRequired Adds `required` attribute and `required` validation constraint to\n *    the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n *    `required` when you want to data-bind to the `required` attribute.\n * @param {comprehension_expression=} ngOptions in one of the following forms:\n *\n *   * for array data sources:\n *     * `label` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n *     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`\n *     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array`\n *   * for object data sources:\n *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n *     * `select` **`as`** `label` **`group by`** `group`\n *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n *\n * Where:\n *\n *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n *   * `value`: local variable which will refer to each item in the `array` or each property value\n *      of `object` during iteration.\n *   * `key`: local variable which will refer to a property name in `object` during iteration.\n *   * `label`: The result of this expression will be the label for `<option>` element. The\n *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n *   * `select`: The result of this expression will be bound to the model of the parent `<select>`\n *      element. If not specified, `select` expression will default to `value`.\n *   * `group`: The result of this expression will be used to group options using the `<optgroup>`\n *      DOM element.\n *\n * @example\n    <doc:example>\n      <doc:source>\n        <script>\n        function MyCntrl($scope) {\n          $scope.colors = [\n            {name:'black', shade:'dark'},\n            {name:'white', shade:'light'},\n            {name:'red', shade:'dark'},\n            {name:'blue', shade:'dark'},\n            {name:'yellow', shade:'light'}\n          ];\n          $scope.color = $scope.colors[2]; // red\n        }\n        </script>\n        <div ng-controller=\"MyCntrl\">\n          <ul>\n            <li ng-repeat=\"color in colors\">\n              Name: <input ng-model=\"color.name\">\n              [<a href ng-click=\"colors.splice($index, 1)\">X</a>]\n            </li>\n            <li>\n              [<a href ng-click=\"colors.push({})\">add</a>]\n            </li>\n          </ul>\n          <hr/>\n          Color (null not allowed):\n          <select ng-model=\"color\" ng-options=\"c.name for c in colors\"></select><br>\n\n          Color (null allowed):\n          <span  class=\"nullable\">\n            <select ng-model=\"color\" ng-options=\"c.name for c in colors\">\n              <option value=\"\">-- chose color --</option>\n            </select>\n          </span><br/>\n\n          Color grouped by shade:\n          <select ng-model=\"color\" ng-options=\"c.name group by c.shade for c in colors\">\n          </select><br/>\n\n\n          Select <a href ng-click=\"color={name:'not in list'}\">bogus</a>.<br>\n          <hr/>\n          Currently selected: {{ {selected_color:color}  }}\n          <div style=\"border:solid 1px black; height:20px\"\n               ng-style=\"{'background-color':color.name}\">\n          </div>\n        </div>\n      </doc:source>\n      <doc:scenario>\n         it('should check ng-options', function() {\n           expect(binding('{selected_color:color}')).toMatch('red');\n           select('color').option('0');\n           expect(binding('{selected_color:color}')).toMatch('black');\n           using('.nullable').select('color').option('');\n           expect(binding('{selected_color:color}')).toMatch('null');\n         });\n      </doc:scenario>\n    </doc:example>\n */\n\nvar ngOptionsDirective = valueFn({ terminal: true });\nvar selectDirective = ['$compile', '$parse', function($compile,   $parse) {\n                         //0000111110000000000022220000000000000000000000333300000000000000444444444444444440000000005555555555555555500000006666666666666666600000000000000077770\n  var NG_OPTIONS_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*)|(?:\\(\\s*([\\$\\w][\\$\\w\\d]*)\\s*,\\s*([\\$\\w][\\$\\w\\d]*)\\s*\\)))\\s+in\\s+(.*)$/,\n      nullModelCtrl = {$setViewValue: noop};\n\n  return {\n    restrict: 'E',\n    require: ['select', '?ngModel'],\n    controller: ['$element', '$scope', '$attrs', function($element, $scope, $attrs) {\n      var self = this,\n          optionsMap = {},\n          ngModelCtrl = nullModelCtrl,\n          nullOption,\n          unknownOption;\n\n\n      self.databound = $attrs.ngModel;\n\n\n      self.init = function(ngModelCtrl_, nullOption_, unknownOption_) {\n        ngModelCtrl = ngModelCtrl_;\n        nullOption = nullOption_;\n        unknownOption = unknownOption_;\n      }\n\n\n      self.addOption = function(value) {\n        optionsMap[value] = true;\n\n        if (ngModelCtrl.$viewValue == value) {\n          $element.val(value);\n          if (unknownOption.parent()) unknownOption.remove();\n        }\n      };\n\n\n      self.removeOption = function(value) {\n        if (this.hasOption(value)) {\n          delete optionsMap[value];\n          if (ngModelCtrl.$viewValue == value) {\n            this.renderUnknownOption(value);\n          }\n        }\n      };\n\n\n      self.renderUnknownOption = function(val) {\n        var unknownVal = '? ' + hashKey(val) + ' ?';\n        unknownOption.val(unknownVal);\n        $element.prepend(unknownOption);\n        $element.val(unknownVal);\n        unknownOption.prop('selected', true); // needed for IE\n      }\n\n\n      self.hasOption = function(value) {\n        return optionsMap.hasOwnProperty(value);\n      }\n\n      $scope.$on('$destroy', function() {\n        // disable unknown option so that we don't do work when the whole select is being destroyed\n        self.renderUnknownOption = noop;\n      });\n    }],\n\n    link: function(scope, element, attr, ctrls) {\n      // if ngModel is not defined, we don't need to do anything\n      if (!ctrls[1]) return;\n\n      var selectCtrl = ctrls[0],\n          ngModelCtrl = ctrls[1],\n          multiple = attr.multiple,\n          optionsExp = attr.ngOptions,\n          nullOption = false, // if false, user will not be able to select it (used by ngOptions)\n          emptyOption,\n          // we can't just jqLite('<option>') since jqLite is not smart enough\n          // to create it in <select> and IE barfs otherwise.\n          optionTemplate = jqLite(document.createElement('option')),\n          optGroupTemplate =jqLite(document.createElement('optgroup')),\n          unknownOption = optionTemplate.clone();\n\n      // find \"null\" option\n      for(var i = 0, children = element.children(), ii = children.length; i < ii; i++) {\n        if (children[i].value == '') {\n          emptyOption = nullOption = children.eq(i);\n          break;\n        }\n      }\n\n      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);\n\n      // required validator\n      if (multiple && (attr.required || attr.ngRequired)) {\n        var requiredValidator = function(value) {\n          ngModelCtrl.$setValidity('required', !attr.required || (value && value.length));\n          return value;\n        };\n\n        ngModelCtrl.$parsers.push(requiredValidator);\n        ngModelCtrl.$formatters.unshift(requiredValidator);\n\n        attr.$observe('required', function() {\n          requiredValidator(ngModelCtrl.$viewValue);\n        });\n      }\n\n      if (optionsExp) Options(scope, element, ngModelCtrl);\n      else if (multiple) Multiple(scope, element, ngModelCtrl);\n      else Single(scope, element, ngModelCtrl, selectCtrl);\n\n\n      ////////////////////////////\n\n\n\n      function Single(scope, selectElement, ngModelCtrl, selectCtrl) {\n        ngModelCtrl.$render = function() {\n          var viewValue = ngModelCtrl.$viewValue;\n\n          if (selectCtrl.hasOption(viewValue)) {\n            if (unknownOption.parent()) unknownOption.remove();\n            selectElement.val(viewValue);\n            if (viewValue === '') emptyOption.prop('selected', true); // to make IE9 happy\n          } else {\n            if (isUndefined(viewValue) && emptyOption) {\n              selectElement.val('');\n            } else {\n              selectCtrl.renderUnknownOption(viewValue);\n            }\n          }\n        };\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            if (unknownOption.parent()) unknownOption.remove();\n            ngModelCtrl.$setViewValue(selectElement.val());\n          });\n        });\n      }\n\n      function Multiple(scope, selectElement, ctrl) {\n        var lastView;\n        ctrl.$render = function() {\n          var items = new HashMap(ctrl.$viewValue);\n          forEach(selectElement.find('option'), function(option) {\n            option.selected = isDefined(items.get(option.value));\n          });\n        };\n\n        // we have to do it on each watch since ngModel watches reference, but\n        // we need to work of an array, so we need to see if anything was inserted/removed\n        scope.$watch(function selectMultipleWatch() {\n          if (!equals(lastView, ctrl.$viewValue)) {\n            lastView = copy(ctrl.$viewValue);\n            ctrl.$render();\n          }\n        });\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            var array = [];\n            forEach(selectElement.find('option'), function(option) {\n              if (option.selected) {\n                array.push(option.value);\n              }\n            });\n            ctrl.$setViewValue(array);\n          });\n        });\n      }\n\n      function Options(scope, selectElement, ctrl) {\n        var match;\n\n        if (! (match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n          throw Error(\n            \"Expected ngOptions in form of '_select_ (as _label_)? for (_key_,)?_value_ in _collection_'\" +\n            \" but got '\" + optionsExp + \"'.\");\n        }\n\n        var displayFn = $parse(match[2] || match[1]),\n            valueName = match[4] || match[6],\n            keyName = match[5],\n            groupByFn = $parse(match[3] || ''),\n            valueFn = $parse(match[2] ? match[1] : valueName),\n            valuesFn = $parse(match[7]),\n            // This is an array of array of existing option groups in DOM. We try to reuse these if possible\n            // optionGroupsCache[0] is the options with no option group\n            // optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element\n            optionGroupsCache = [[{element: selectElement, label:''}]];\n\n        if (nullOption) {\n          // compile the element since there might be bindings in it\n          $compile(nullOption)(scope);\n\n          // remove the class, which is added automatically because we recompile the element and it\n          // becomes the compilation root\n          nullOption.removeClass('ng-scope');\n\n          // we need to remove it before calling selectElement.html('') because otherwise IE will\n          // remove the label from the element. wtf?\n          nullOption.remove();\n        }\n\n        // clear contents, we'll add what's needed based on the model\n        selectElement.html('');\n\n        selectElement.bind('change', function() {\n          scope.$apply(function() {\n            var optionGroup,\n                collection = valuesFn(scope) || [],\n                locals = {},\n                key, value, optionElement, index, groupIndex, length, groupLength;\n\n            if (multiple) {\n              value = [];\n              for (groupIndex = 0, groupLength = optionGroupsCache.length;\n                   groupIndex < groupLength;\n                   groupIndex++) {\n                // list of options for that group. (first item has the parent)\n                optionGroup = optionGroupsCache[groupIndex];\n\n                for(index = 1, length = optionGroup.length; index < length; index++) {\n                  if ((optionElement = optionGroup[index].element)[0].selected) {\n                    key = optionElement.val();\n                    if (keyName) locals[keyName] = key;\n                    locals[valueName] = collection[key];\n                    value.push(valueFn(scope, locals));\n                  }\n                }\n              }\n            } else {\n              key = selectElement.val();\n              if (key == '?') {\n                value = undefined;\n              } else if (key == ''){\n                value = null;\n              } else {\n                locals[valueName] = collection[key];\n                if (keyName) locals[keyName] = key;\n                value = valueFn(scope, locals);\n              }\n            }\n            ctrl.$setViewValue(value);\n          });\n        });\n\n        ctrl.$render = render;\n\n        // TODO(vojta): can't we optimize this ?\n        scope.$watch(render);\n\n        function render() {\n          var optionGroups = {'':[]}, // Temporary location for the option groups before we render them\n              optionGroupNames = [''],\n              optionGroupName,\n              optionGroup,\n              option,\n              existingParent, existingOptions, existingOption,\n              modelValue = ctrl.$modelValue,\n              values = valuesFn(scope) || [],\n              keys = keyName ? sortedKeys(values) : values,\n              groupLength, length,\n              groupIndex, index,\n              locals = {},\n              selected,\n              selectedSet = false, // nothing is selected yet\n              lastElement,\n              element,\n              label;\n\n          if (multiple) {\n            selectedSet = new HashMap(modelValue);\n          }\n\n          // We now build up the list of options we need (we merge later)\n          for (index = 0; length = keys.length, index < length; index++) {\n               locals[valueName] = values[keyName ? locals[keyName]=keys[index]:index];\n               optionGroupName = groupByFn(scope, locals) || '';\n            if (!(optionGroup = optionGroups[optionGroupName])) {\n              optionGroup = optionGroups[optionGroupName] = [];\n              optionGroupNames.push(optionGroupName);\n            }\n            if (multiple) {\n              selected = selectedSet.remove(valueFn(scope, locals)) != undefined;\n            } else {\n              selected = modelValue === valueFn(scope, locals);\n              selectedSet = selectedSet || selected; // see if at least one item is selected\n            }\n            label = displayFn(scope, locals); // what will be seen by the user\n            label = label === undefined ? '' : label; // doing displayFn(scope, locals) || '' overwrites zero values\n            optionGroup.push({\n              id: keyName ? keys[index] : index,   // either the index into array or key from object\n              label: label,\n              selected: selected                   // determine if we should be selected\n            });\n          }\n          if (!multiple) {\n            if (nullOption || modelValue === null) {\n              // insert null option if we have a placeholder, or the model is null\n              optionGroups[''].unshift({id:'', label:'', selected:!selectedSet});\n            } else if (!selectedSet) {\n              // option could not be found, we have to insert the undefined item\n              optionGroups[''].unshift({id:'?', label:'', selected:true});\n            }\n          }\n\n          // Now we need to update the list of DOM nodes to match the optionGroups we computed above\n          for (groupIndex = 0, groupLength = optionGroupNames.length;\n               groupIndex < groupLength;\n               groupIndex++) {\n            // current option group name or '' if no group\n            optionGroupName = optionGroupNames[groupIndex];\n\n            // list of options for that group. (first item has the parent)\n            optionGroup = optionGroups[optionGroupName];\n\n            if (optionGroupsCache.length <= groupIndex) {\n              // we need to grow the optionGroups\n              existingParent = {\n                element: optGroupTemplate.clone().attr('label', optionGroupName),\n                label: optionGroup.label\n              };\n              existingOptions = [existingParent];\n              optionGroupsCache.push(existingOptions);\n              selectElement.append(existingParent.element);\n            } else {\n              existingOptions = optionGroupsCache[groupIndex];\n              existingParent = existingOptions[0];  // either SELECT (no group) or OPTGROUP element\n\n              // update the OPTGROUP label if not the same.\n              if (existingParent.label != optionGroupName) {\n                existingParent.element.attr('label', existingParent.label = optionGroupName);\n              }\n            }\n\n            lastElement = null;  // start at the beginning\n            for(index = 0, length = optionGroup.length; index < length; index++) {\n              option = optionGroup[index];\n              if ((existingOption = existingOptions[index+1])) {\n                // reuse elements\n                lastElement = existingOption.element;\n                if (existingOption.label !== option.label) {\n                  lastElement.text(existingOption.label = option.label);\n                }\n                if (existingOption.id !== option.id) {\n                  lastElement.val(existingOption.id = option.id);\n                }\n                // lastElement.prop('selected') provided by jQuery has side-effects\n                if (lastElement[0].selected !== option.selected) {\n                  lastElement.prop('selected', (existingOption.selected = option.selected));\n                }\n              } else {\n                // grow elements\n\n                // if it's a null option\n                if (option.id === '' && nullOption) {\n                  // put back the pre-compiled element\n                  element = nullOption;\n                } else {\n                  // jQuery(v1.4.2) Bug: We should be able to chain the method calls, but\n                  // in this version of jQuery on some browser the .text() returns a string\n                  // rather then the element.\n                  (element = optionTemplate.clone())\n                      .val(option.id)\n                      .attr('selected', option.selected)\n                      .text(option.label);\n                }\n\n                existingOptions.push(existingOption = {\n                    element: element,\n                    label: option.label,\n                    id: option.id,\n                    selected: option.selected\n                });\n                if (lastElement) {\n                  lastElement.after(element);\n                } else {\n                  existingParent.element.append(element);\n                }\n                lastElement = element;\n              }\n            }\n            // remove any excessive OPTIONs in a group\n            index++; // increment since the existingOptions[0] is parent element not OPTION\n            while(existingOptions.length > index) {\n              existingOptions.pop().element.remove();\n            }\n          }\n          // remove any excessive OPTGROUPs from select\n          while(optionGroupsCache.length > groupIndex) {\n            optionGroupsCache.pop()[0].element.remove();\n          }\n        }\n      }\n    }\n  }\n}];\n\nvar optionDirective = ['$interpolate', function($interpolate) {\n  var nullSelectCtrl = {\n    addOption: noop,\n    removeOption: noop\n  };\n\n  return {\n    restrict: 'E',\n    priority: 100,\n    compile: function(element, attr) {\n      if (isUndefined(attr.value)) {\n        var interpolateFn = $interpolate(element.text(), true);\n        if (!interpolateFn) {\n          attr.$set('value', element.text());\n        }\n      }\n\n      return function (scope, element, attr) {\n        var selectCtrlName = '$selectController',\n            parent = element.parent(),\n            selectCtrl = parent.data(selectCtrlName) ||\n              parent.parent().data(selectCtrlName); // in case we are in optgroup\n\n        if (selectCtrl && selectCtrl.databound) {\n          // For some reason Opera defaults to true and if not overridden this messes up the repeater.\n          // We don't want the view to drive the initialization of the model anyway.\n          element.prop('selected', false);\n        } else {\n          selectCtrl = nullSelectCtrl;\n        }\n\n        if (interpolateFn) {\n          scope.$watch(interpolateFn, function interpolateWatchAction(newVal, oldVal) {\n            attr.$set('value', newVal);\n            if (newVal !== oldVal) selectCtrl.removeOption(oldVal);\n            selectCtrl.addOption(newVal);\n          });\n        } else {\n          selectCtrl.addOption(attr.value);\n        }\n\n        element.bind('$destroy', function() {\n          selectCtrl.removeOption(attr.value);\n        });\n      };\n    }\n  }\n}];\n\nvar styleDirective = valueFn({\n  restrict: 'E',\n  terminal: true\n});\n\n  //try to bind to jquery now so that one can write angular.element().read()\n  //but we will rebind on bootstrap again.\n  bindJQuery();\n\n  publishExternalAPI(angular);\n\n  jqLite(document).ready(function() {\n    angularInit(document, bootstrap);\n  });\n\n})(window, document);\nangular.element(document).find('head').append('<style type=\"text/css\">@charset \"UTF-8\";[ng\\\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak{display:none !important;}ng\\\\:form{display:block;}</style>');\ndefine(\"angular\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.angular;\n    };\n}(this)));\n\n","\r\n'use strict';\r\n\r\ndefine('application/module',[\r\n  'angular'\r\n], function (angular) {\r\n  return angular.module('application', [ 'container', 'error' ])\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('application/config',[\r\n  './module'\r\n], function (module) {\r\n  return module.\r\n    config([\r\n      '$locationProvider',\r\n      '$routeProvider',\r\n      function ($locationProvider, $routeProvider) {\r\n        // Enable the History API\r\n        $locationProvider.html5Mode(true)\r\n\r\n        // Configure routes\r\n        $routeProvider.when('/', {})\r\n      }\r\n    ])\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('application/controller',[\r\n  './module'\r\n], function (module) {\r\n  return module.\r\n    controller(module.name + 'Ctrl', [\r\n      '$scope',\r\n      '$location',\r\n      '$route',\r\n      function ($scope, $location, $route) {\r\n        // Cache service references\r\n        $scope.$location = $location\r\n        $scope.$route = $route\r\n\r\n        // Set component properties\r\n        $scope.name = module.name\r\n        $scope.id = module.name\r\n      }\r\n    ])\r\n})\r\n;\n","/**\n * @license RequireJS text 2.0.14 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.14',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.lastIndexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'] &&\n            !process.versions['atom-shell'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file[0] === '\\uFEFF') {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n","\ndefine('text!application/template.html',[],function () { return '<div>\\r\\n  <container id=\"{{id}}\"/>\\r\\n  <error id=\"{{id}}\"/>\\r\\n</div>';});\n\n","\r\n'use strict';\r\n\r\ndefine('application/directive',[\r\n  './module',\r\n  'text!./template.html'\r\n], function (module, template) {\r\n  return module.\r\n    directive(module.name, function () {\r\n      return {\r\n        controller: module.name + 'Ctrl',\r\n        restrict: 'E,A',\r\n        scope: true,\r\n        template: template\r\n      }\r\n    })\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('application/main',[\r\n  './config',\r\n  './controller',\r\n  './directive',\r\n  './module'\r\n], function (config, controller, directive, module) {\r\n  return module\r\n})\r\n;\ndefine('application', ['application/main'], function (main) { return main; });\n\n","\r\n'use strict';\r\n\r\ndefine('container/module',[\r\n  'angular'\r\n], function (angular) {\r\n  return angular.module('container', [])\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('container/config',[\r\n  './module'\r\n], function (module) {\r\n  return module.\r\n    config([function () {}])\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('container/controller',[\r\n  './module'\r\n], function (module) {\r\n  return module.\r\n    controller(module.name + 'Ctrl', [\r\n      '$scope',\r\n      function ($scope) {\r\n        // Set component properties\r\n        $scope.name = module.name\r\n        $scope.id = module.name\r\n      }\r\n    ])\r\n})\r\n;\n","\ndefine('text!container/template.html',[],function () { return '<div class=\"container-fluid\" ng-hide=\"error.status\">\\r\\n  <div class=\"row-fluid\">\\r\\n    <div class=\"span4\"></div>\\r\\n    <div class=\"span4\">\\r\\n      <header>\\r\\n        <h1 class=\"text-overflow\">insert awesome here</h1>\\r\\n      </header>\\r\\n      Click me - &gt; <a href=\"/nowhere\" title=\"A dummy link\">404</a>\\r\\n    </div>\\r\\n    <div class=\"span4\"></div>\\r\\n  </div>\\r\\n</div>';});\n\n","\r\n'use strict';\r\n\r\ndefine('container/directive',[\r\n  './module',\r\n  'text!./template.html'\r\n], function (module, template) {\r\n  return module.\r\n    directive(module.name, function () {\r\n      return {\r\n        controller: module.name + 'Ctrl',\r\n        restrict: 'E,A',\r\n        scope: true,\r\n        template: template\r\n      }\r\n    })\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('container/main',[\r\n  './config',\r\n  './controller',\r\n  './directive',\r\n  './module'\r\n], function (config, controller, directive, module) {\r\n  return module\r\n})\r\n;\ndefine('container', ['container/main'], function (main) { return main; });\n\n","\r\n'use strict';\r\n\r\ndefine('error/module',[\r\n  'angular'\r\n], function (angular) {\r\n  return angular.module('error', [])\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('error/config',[\r\n  './module'\r\n], function (module) {\r\n  return module.\r\n    config([\r\n      '$routeProvider',\r\n      function ($routeProvider) {\r\n        // Configure routes\r\n        $routeProvider.otherwise({\r\n          resolve: {\r\n            status: [\r\n              '$q',\r\n              function($q) {\r\n                var error = $q.defer()\r\n                error.reject({\r\n                  status: 404,\r\n                  message: 'Page not found!'\r\n                })\r\n                return error.promise\r\n              }\r\n            ]\r\n          }\r\n        })\r\n      }\r\n    ])\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('error/controller',[\r\n  './module'\r\n], function (module) {\r\n  return module.\r\n    controller(module.name + 'Ctrl', [\r\n      '$scope',\r\n      '$rootScope',\r\n      function ($scope, $rootScope) {\r\n        // Init $rootScope\r\n        $rootScope.error = {}\r\n\r\n        // Set component properties\r\n        $scope.name = module.name\r\n        $scope.id = module.name\r\n\r\n        // Set error status on error\r\n        $scope.$on('$routeChangeError', function (event, current, previous, rejection) {\r\n          $scope.status = rejection.status\r\n          $scope.message = rejection.message\r\n          $rootScope.error = $rootScope.error || {}\r\n          $rootScope.error.status = rejection.status\r\n          $rootScope.error.message = rejection.message\r\n        })\r\n\r\n        // Clear error status on success\r\n        $scope.$on('$routeChangeSuccess', function () {\r\n          $scope.status = null\r\n          $scope.message = null\r\n          $rootScope.error.status = null\r\n          $rootScope.error.message = null\r\n        })\r\n      }\r\n    ])\r\n})\r\n;\n","\ndefine('text!error/template.html',[],function () { return '<div class=\"container-fluid\" ng-show=\"status\">\\r\\n  <div class=\"row-fluid\">\\r\\n    <div class=\"span4\"></div>\\r\\n    <div class=\"span4\">\\r\\n      <header>\\r\\n        <h1>{{status}}</h1>\\r\\n        <h3 class=\"muted\">{{message}}</h2>\\r\\n      </header>\\r\\n    </div>\\r\\n    <div class=\"span4\"></div>\\r\\n  </div>\\r\\n</div>';});\n\n","\r\n'use strict';\r\n\r\ndefine('error/directive',[\r\n  './module',\r\n  'text!./template.html'\r\n], function (module, template) {\r\n  return module.\r\n    directive(module.name, function () {\r\n      return {\r\n        controller: module.name + 'Ctrl',\r\n        restrict: 'E,A',\r\n        scope: true,\r\n        template: template\r\n      }\r\n    })\r\n})\r\n;\n","\r\n'use strict';\r\n\r\ndefine('error/main',[\r\n  './config',\r\n  './controller',\r\n  './directive',\r\n  './module'\r\n], function (config, controller, directive, module) {\r\n  return module\r\n})\r\n;\ndefine('error', ['error/main'], function (main) { return main; });\n\n","\r\n'use strict';\r\n\r\ndefine('main',[\r\n  'angular',\r\n  'application'\r\n], function (angular, module) {\r\n  angular.element(document).ready(function () {\r\n    angular.bootstrap(document, [ module.name ])\r\n  })\r\n});\n"]}